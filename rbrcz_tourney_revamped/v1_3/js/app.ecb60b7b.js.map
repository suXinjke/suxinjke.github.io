{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util.ts","webpack:///./src/data/tracks.ts","webpack:///./src/data/track-settings.ts","webpack:///./src/data/track-weather.ts","webpack:///./src/data/constants.ts","webpack:///./src/data/cars.ts","webpack:///./src/store.ts","webpack:///./src/data/licenses.ts","webpack:///./src/containers/Tournament.tsx","webpack:///./src/containers/Cars.tsx","webpack:///./src/containers/TrackList.tsx","webpack:///./src/components/WeatherSelect.tsx","webpack:///./src/data/track-problems.ts","webpack:///./src/components/SurfaceTypeSelect.tsx","webpack:///./src/components/SurfaceAgeSelect.tsx","webpack:///./src/components/ServiceSelect.tsx","webpack:///./src/components/DamageSelect.tsx","webpack:///./src/components/TyreSelect.tsx","webpack:///./src/components/ShortcutSelect.tsx","webpack:///./src/components/TrackWeatherSelect.tsx","webpack:///./src/containers/Track.tsx","webpack:///./src/containers/ScheduleLegs.tsx","webpack:///./src/containers/Presets.tsx","webpack:///./src/App.tsx","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","formatDate","date","concat","getFullYear","getMonth","getDate","stringDateToCZDate","split","reverse","map","number_string","Number","toString","join","czDateToStringDate","str","index","padStart","formatTime","getHours","getMinutes","arrayCanMoveElement","array","offset","arrayMoveElement","new_index","k","undefined","objectWithoutNulls","obj","keys_default","reduce","prev","id","objectSpread","getElementByXpath","document","path","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","extractSelectOptions","node","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","get_iterator_default","children","next","done","child_node","getAttribute","label","textContent","err","return","urlEncode","is_array_default","val","encodeURIComponent","post","next_page","arguments","_next_page$flow","flow","_next_page$curstagepo","curstagepos","_next_page$page_selec","page_selector","_next_page$save_tourn","save_tournament","_next_page$save_from_","save_from_leg_page","save_params","submit_page","submit_save_tour","submit_page_go","fetch","method","headers","Content-Type","body","waitUntil","func","checkInMsecs","promise_default","a","res","intervalFunc","setInterval","datePacks","now","Date","nextHalfAnHour","nextDay","nextThreeDays","cacheStore","age_secs","localStorage","setItem","time_msecs","cacheGet","item","getItem","expiration_date","tracks","vue_runtime_esm","observable","cacheChecked","byId","fetching","fetchTracks","_fetchTracks","asyncToGenerator","regeneratorRuntime","mark","_callee","cachedTracks","_JSON$parse","stage_select_node","allowed_stage_ids","text","doc","track_rows","row","track","wrap","_context","this","JSON","parse","set","abrupt","option","filter","sent","DOMParser","parseFromString","childNodes","includes","country","surface","distance","replace","shakedown_allowed","toLowerCase","trim","restricted","Boolean","nextSibling","stringify_default","stop","trackSettings","shouldBeThrottled","values_default","fetchTrackSettings","_fetchTrackSettings","track_id","cachedTrackSettings","dummy_post","response","html","tyres_select","tyres","tyres_recommended","settings","_this","store","tournamentDummyPostOutput","tourstages","t0","finish","surface_type","surface_age","weather","weather2","clouds","time_of_day","damage","shortcut_check","_x","trackWeather","fetchTrackWeather","_fetchTrackWeather","cachedTrackWeather","weatherTable","clickFunctionBody","weather_pack","isOriginalWeatherPack","remark","_ref","_ref2","time_of_day_id","weather2_id","clouds_id","match","slicedToArray","constants","superally","carPhysics","fetched","fetchTournamentConstants","superally_node","car_physics_node","cars","carPacks","trackPhysics","fetchCars","_fetchCars","car_physics_id","cachedCars","car_pack_node","car_pack_options","car_regexp","matches","_loop","physics_node","physics","PhysicsModId","forEach","car_pack_option","exec","car_id","car_name","car_pack_ids","car_pack_id","mod","storeDatePack","defaultTournament","description","license_id","online","offline","from_date","from_time","to_date","to_time","cant_resume","only_one_car","dont_show_splits","dont_show_temporary_results_in_rbr","dont_show_temporary_results_in_web","save_replays","require_stage_comments","test_tournament","password","registration_deadline","superally_penalty","tournament","cars_physics","track_physics_id","selected_car_ids","legs","trackFetchInfo","all","trackAdd","_trackAdd","track_ids","_ret","_context2","previousTrack","weatherSettings","find","weather_change_allowed","service_time_mins","setup_change_allowed","tyre_replacement_allowed","tyre_change_allowed","damage_change_allowed","superally_hold","retry_allowed","delegateYield","t1","trackRemove","track_index","trackFixIncorrectService","trackMove","moved_successfully","trackMoveUp","trackMoveDown","tournamentFromHTML","tournament_form","getElementById","form_data","FormData","tour_to_date","tour_from_date","has_legs","tournamentPostOutput","tour_name","tour_descr","offlinet","tour_from_time","tour_to_time","cantresrace","onecaronly","nosplits","notempres","notempresweb","savereplays","getcomments","testrun","ispassword","tour_password","need_enroll","enroll_close","SRallyPenaltySel","additionalParams","_datePacks","carsPhysicsLicensesFromHTML","_this2","mods","getAll","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop2","mod_id","_iterator2","licenses","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","carsPhysicsPostOutput","LicSel","ModsSel","toConsumableArray","trackFromHTML","trackPostOutput","isLast","renamestage","stage_rename","CarSel","SurfSel","SurfAgeSel","TexturesPackSel","WeatherPackSel","canchangeweather","WeatherSel","TimeOfDaySel","Weather2Sel","CloudsSel","ServiceSel","canrenewtyres","canchangetyres","TyresSel","canchangedamage","DamageSel","CutcheckerSel","leg_pos","leg","leg_index","after_stage_divider","allowsuperally","superallychpoint","canrepeatstage","canchangesetup","lastTrack","legsFromHTML","table","original_legs","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","is_leg_row","isNaN","stages_string","stages_matches","stages_to","date_to","time_to","is_last","time","legsPostOutput","_this3","date_from","time_from","fields","licenses_licenses","fetchLicenses","_fetchLicenses","cachedLicenses","licenses_node","Tournament","lib","computed","props","errors","render","h","attrs","for","helper_default","on","input","$event","target","composing","domProps","directives","modifiers","class","style","change","$$selectedVal","Array","selected","_value","multiple","$$a","$$el","$$c","checked","$$v","$$i","_i","type","href","from_datetime","to_datetime","placeholder","Cars","car_pack","available_cars_selected_ids","selected_cars_selected_ids","car_physics_select","track_physics_select","car_packs_select","carPack","available_cars","carIdsForSelect","selected_cars","methods","addToSelected","car_ids","indexOf","addSelected","addAll","car","removeSelected","removeAll","sort","b","watch","cars_physics.car_physics_id","disabled","title","dblclick","click","TrackList","selected_track_groups","available_tracks_filter","available_tracks_selected_ids","tracks_selected_indexes","tracks_data","available_track_groups","country_array","surface_array","track_data","available_tracks_select","total_distance","sum","toFixed","isLoading","moveSelected","sorted_indexes","selected_index","addRandom","random_track_id","Math","floor","random","group","selected_tracks","offline_tracks","SurfaceType","SurfaceAge","WeatherSelect","problems","139","Damp","Wet","140","488","585","Normal","Worn","590","591","598","607","608","703","705","802","803","830","1012","SurfaceTypeSelect","tinyProblemDisplay","hasProblem","surface_type_id","SurfaceAgeSelect","surface_age_id","ServiceSelect","DamageSelect","TyreSelect","ShortcutSelect","TrackWeatherSelect","e","_e$target$value$split","_e$target$value$split2","Track","tracks_settings","car_id_options","is_last_track","track.service_time_mins","ScheduleLegs","maxStageDivider","max","canAddLeg","lastLeg","addLeg","last_leg","last_leg_date","next_day","canMoveLegUp","stage_split","moveLegUp","canMoveLegDown","moveLegDown","removeLeg","colspan","Presets","saveNames","fill","save","slot","load","assign_default","mounted","items","output","nothing","prompt","saveName","confirm","clear","location","reload","Page","App","extend","current_page","hidden","current_request_operation","serverErrors","tracks_weather","_this$store$tournamen","_this$store$tournamen2","cars_errors","_this$store$cars_phys","car_physics","track_physics","tracks_errors","shakedown_forbidden_tracks","_this$tracks_data$tra","track_name","tournament_errors","oneDayAfter","sevenDaysAfter","registration_deadline_in_hours","is_integer_default","legs_errors","error","previous_leg","toLocaleString","previous_leg_date","notifications","notification","hasErrors","submit","_submit","generalErrorXPath","trackErrorXPath","tournament_data","cars_physics_data","leg_data","edit_tournament_node","tournament_id_match","tournament_id","checkAndAppendServerErrors","page","errorsXPath","message","_checkAndAppendServerErrors","_callee2","params","errorNode","nodeName","t2","store.tracks","newTracks","store.cars_physics.car_physics_id","newPhysicsId","immediate","handler","newValue","tournamentForm","display","_mounted","_callee3","url_search_params","_this$store$tournamen3","_track_id","_context3","URLSearchParams","search","getElementsByTagName","innerHTML","t3","t4","t5","t6","t7","t8","t9","_this4","active","config","productionTip","main_parent","parentElement","appContainer","createElement","prepend","$mount"],"mappings":"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","file":"js/app.ecb60b7b.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/rbrcz_prototype/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export function formatDate( date: Date ) {\r\n    return `${( '000' + date.getFullYear() ).slice( -4 )}-${( '0' + ( date.getMonth() + 1 ) ).slice( -2 )}-${( '0' + date.getDate() ).slice( -2 )}`\r\n}\r\n\r\nexport function stringDateToCZDate( date: string ) {\r\n    return date.split( '-' ).reverse().map( number_string => Number( number_string ).toString() ).join( '.' )\r\n}\r\n\r\nexport function czDateToStringDate( date: string ) {\r\n    return date.split( '.' ).reverse().map( ( str, index ) => index === 0 ? str : str.padStart( 2, '0' ) ).join( '-' )\r\n}\r\n\r\nexport function formatTime( date: Date ) {\r\n    return `${( '0' + date.getHours() ).slice( -2 )}:${( '0' + date.getMinutes() ).slice( -2 )}`\r\n}\r\n\r\nexport function arrayCanMoveElement( array: any[], index: number, offset: number ) {\r\n    return (\r\n        offset > 0 ? index + offset < array.length :\r\n        offset < 0 ? index + offset >= 0 :\r\n        true\r\n    )\r\n}\r\n\r\nexport function arrayMoveElement( array: any[], index: number, offset: number ) {\r\n    if ( arrayCanMoveElement( array, index, offset ) === false ) {\r\n        return false\r\n    }\r\n\r\n    const new_index = index + offset\r\n\r\n    if ( new_index >= array.length ) {\r\n        let k = new_index - array.length + 1\r\n        while ( k-- ) {\r\n            array.push( undefined )\r\n        }\r\n    }\r\n\r\n    array.splice( new_index, 0, array.splice( index, 1 )[ 0 ] )\r\n\r\n    return true\r\n}\r\n\r\nexport function objectWithoutNulls<T = any>( obj: T ): Partial<T> {\r\n    return Object.keys( obj ).reduce( ( prev, id ) => ( ( obj as any )[id] === null ? prev : {\r\n        ...prev,\r\n        [id]: ( obj as any )[id]\r\n    } ), {} )\r\n}\r\n\r\nexport function getElementByXpath( document: Document, path: string ): HTMLElement | null {\r\n    return document.evaluate( path, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null ).singleNodeValue as HTMLElement\r\n}\r\n\r\nexport function extractSelectOptions( node: HTMLElement | null ): SelectOption[] {\r\n    const options: SelectOption[] = []\r\n    if ( node ) {\r\n        for ( const child_node of node.children ) {\r\n            const id = child_node.getAttribute( 'value' )\r\n            const label = child_node.textContent\r\n            if ( id && label ) {\r\n                options.push( { id, label } )\r\n            }\r\n        }\r\n    }\r\n\r\n    return options\r\n}\r\n\r\nexport function urlEncode( obj: any ) {\r\n    return Object.keys( obj ).map( key => {\r\n        if ( Array.isArray( obj[key] ) ) {\r\n            return ( obj[key] as any[] ).map( val => `${encodeURIComponent( `${key}[]` )}=${encodeURIComponent( val )}` ).join( '&' )\r\n        } else {\r\n            return `${encodeURIComponent( key )}=${encodeURIComponent( obj[key] )}`\r\n        }\r\n    } ).join( '&' )\r\n}\r\n\r\nexport function post( data: any, next_page: {\r\n    flow?: string,\r\n    curstagepos?: string,\r\n    page_selector?: string,\r\n    save_tournament?: boolean,\r\n    save_from_leg_page?: boolean\r\n} = {} ) {\r\n    const { flow = null, curstagepos = null, page_selector = null, save_tournament = false, save_from_leg_page = false } = next_page\r\n\r\n    const save_params = save_tournament ?\r\n        ( save_from_leg_page ? { submit_page: 'Save' } : { submit_save_tour: 'Save tour' } ) :\r\n        { submit_page_go: 'Go' }\r\n\r\n    return fetch( '/index.php?act=tourmntscre4A', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: urlEncode( objectWithoutNulls( {\r\n            ...data,\r\n            flow,\r\n            curstagepos,\r\n            page_selector,\r\n            ...save_params\r\n        } ) )\r\n    } )\r\n}\r\n\r\nexport function waitUntil( func: () => boolean, checkInMsecs: number = 300 ) {\r\n    return new Promise( res => {\r\n        const intervalFunc = () => {\r\n            func() ? res() : setInterval( intervalFunc, checkInMsecs )\r\n        }\r\n        intervalFunc()\r\n    } )\r\n}\r\n\r\nexport function datePacks() {\r\n    const now = new Date()\r\n    const nextHalfAnHour = new Date( Number( now ) + 1000 * 60 * 30 )\r\n    const nextDay = new Date( Number( now ) + 1000 * 60 * 60 * 24 * 1 )\r\n    const nextThreeDays = new Date( Number( now ) + 1000 * 60 * 60 * 24 * 3 )\r\n\r\n    return {\r\n        now,\r\n        nextHalfAnHour,\r\n        nextDay,\r\n        nextThreeDays\r\n    }\r\n}\r\n\r\nexport function cacheStore( key: string, value: string, age_secs: number ) {\r\n    window.localStorage.setItem( key, value )\r\n\r\n    const time_msecs = Number( new Date() )\r\n    window.localStorage.setItem( key + '_expires', ( time_msecs + age_secs * 1000 ).toString() )\r\n}\r\n\r\nexport function cacheGet( key: string ) {\r\n    const item = window.localStorage.getItem( key )\r\n    if ( !item ) {\r\n        return null\r\n    }\r\n\r\n    const time_msecs = Number( new Date() )\r\n    const expiration_date = window.localStorage.getItem( key + '_expires' )\r\n    if ( !expiration_date || time_msecs >= Number( expiration_date ) ) {\r\n        return null\r\n    }\r\n\r\n    return item\r\n}\r\n","import Vue from 'vue'\r\nimport { getElementByXpath, cacheGet, cacheStore, extractSelectOptions } from '../util'\r\n\r\nexport const tracks = Vue.observable( {\r\n    cacheChecked: false,\r\n\r\n    byId: {} as { [index: string]: TrackData },\r\n\r\n    fetching: false,\r\n\r\n    async fetchTracks() {\r\n        if ( !this.cacheChecked ) {\r\n            const cachedTracks = cacheGet( 'tracks' )\r\n            if ( cachedTracks ) {\r\n                const { byId } = JSON.parse( cachedTracks )\r\n                Vue.set( this, 'byId', byId )\r\n            }\r\n\r\n            this.cacheChecked = true\r\n        }\r\n\r\n        if ( this.fetching || Object.keys( this.byId ).length > 0 ) {\r\n            return\r\n        }\r\n\r\n        this.fetching = true\r\n\r\n        const stage_select_node = getElementByXpath( document, '//*[@id=\"StagesSel\"]' )\r\n        const allowed_stage_ids = extractSelectOptions( stage_select_node ).map( option => option.id ).filter( id => id.length > 0 )\r\n\r\n        const res = await fetch( '/index.php?act=rbrtracks' )\r\n\r\n        const text = await res.text()\r\n        const doc = new DOMParser().parseFromString( text, 'text/html' )\r\n\r\n        const track_rows = getElementByXpath( doc, '/html/body/table/tbody/tr/td/table[3]/tbody/tr[1]/td[2]/table/tbody/tr[2]' )\r\n\r\n        let row: Node | null = track_rows\r\n        while ( row ) {\r\n            const id = row.childNodes[0].textContent\r\n            if ( id && allowed_stage_ids.includes( id ) ) {\r\n                const track: TrackData = {\r\n                    id,\r\n                    name: row.childNodes[1].textContent || '',\r\n                    country: row.childNodes[2].textContent || '',\r\n                    surface: row.childNodes[3].textContent || '',\r\n                    distance: row.childNodes[4].textContent ? Number( row.childNodes[4].textContent.replace( ' km', '' ) ) : 0,\r\n                    shakedown_allowed: [ 'ano', 'yes' ].includes( ( row.childNodes[5].textContent || '' ).toLowerCase().trim() ),\r\n                    restricted: Boolean( ( row.childNodes[6].textContent || '' ).trim() )\r\n                }\r\n                Vue.set( this.byId, id, track )\r\n            }\r\n\r\n            row = row.nextSibling\r\n        }\r\n\r\n        cacheStore( 'tracks', JSON.stringify( { byId: this.byId } ), 60 * 60 * 24 )\r\n\r\n        this.fetching = false\r\n    }\r\n} )\r\n","import Vue from 'vue'\r\nimport { store } from '../store'\r\nimport { post, extractSelectOptions, getElementByXpath, waitUntil, cacheGet, cacheStore } from '../util'\r\n\r\nexport const trackSettings = Vue.observable( {\r\n    cacheChecked: false,\r\n\r\n    byId: {} as { [index: string]: TrackSettings },\r\n\r\n    fetching: {} as { [index: string]: boolean },\r\n\r\n    shouldBeThrottled() {\r\n        return Object.values( this.fetching ).filter( value => value === true ).length >= 2\r\n    },\r\n\r\n    async fetchTrackSettings( track_id: string ) {\r\n        if ( !this.cacheChecked ) {\r\n            const cachedTrackSettings = cacheGet( 'track_settings' )\r\n            if ( cachedTrackSettings ) {\r\n                const { byId } = JSON.parse( cachedTrackSettings )\r\n                Vue.set( this, 'byId', byId )\r\n            }\r\n\r\n            this.cacheChecked = true\r\n        }\r\n\r\n        if ( this.fetching[track_id] ) {\r\n            await waitUntil( () => this.fetching[track_id] === false )\r\n        }\r\n\r\n        if ( this.byId[track_id] ) {\r\n            return\r\n        }\r\n\r\n        if ( this.shouldBeThrottled() ) {\r\n            await waitUntil( () => this.shouldBeThrottled() === false )\r\n        }\r\n\r\n        Vue.set( this.fetching, track_id, true )\r\n\r\n        const dummy_post = store.tournamentDummyPostOutput( {\r\n            tourstages: `${track_id};`\r\n        } )\r\n\r\n        const response = await post( dummy_post, {\r\n            page_selector: '2'\r\n        } )\r\n\r\n        const html = await response.text()\r\n        const doc = ( new DOMParser() ).parseFromString( html, 'text/html' )\r\n\r\n        const tyres_select = getElementByXpath( doc, '//*[@id=\"TyresSel\"]' )\r\n        const tyres = extractSelectOptions( tyres_select )\r\n\r\n        let tyres_recommended = tyres[0].id\r\n        if ( tyres_select ) {\r\n            for ( const child_node of tyres_select.children ) {\r\n                const id = child_node.getAttribute( 'value' )\r\n                if ( id && child_node.getAttribute( 'selected' ) !== null ) {\r\n                    tyres_recommended = id\r\n                    break\r\n                }\r\n            }\r\n        }\r\n\r\n        const settings: TrackSettings = {\r\n            surface_type: extractSelectOptions( getElementByXpath( doc, '//*[@id=\"SurfSel\"]' ) ),\r\n            surface_age: extractSelectOptions( getElementByXpath( doc, '//*[@id=\"SurfAgeSel\"]' ) ),\r\n            weather: extractSelectOptions( getElementByXpath( doc, '//*[@id=\"WeatherSel\"]' ) ),\r\n            weather2: extractSelectOptions( getElementByXpath( doc, '//*[@id=\"Weather2Sel\"]' ) ),\r\n            clouds: extractSelectOptions( getElementByXpath( doc, '//*[@id=\"CloudsSel\"]' ) ),\r\n            time_of_day: extractSelectOptions( getElementByXpath( doc, '//*[@id=\"TimeOfDaySel\"]' ) ),\r\n            tyres,\r\n            damage: extractSelectOptions( getElementByXpath( doc, '//*[@id=\"DamageSel\"]' ) ),\r\n            shortcut_check: extractSelectOptions( getElementByXpath( doc, '//*[@id=\"CutcheckerSel\"]' ) ),\r\n\r\n            tyres_recommended\r\n        }\r\n\r\n        Vue.set( this.byId, track_id, settings )\r\n\r\n        cacheStore( 'track_settings', JSON.stringify( { byId: this.byId } ), 60 * 60 * 24 )\r\n\r\n        Vue.set( this.fetching, track_id, false )\r\n    }\r\n} )\r\n","import Vue from 'vue'\r\nimport { getElementByXpath, waitUntil, cacheGet, cacheStore } from '../util'\r\n\r\nexport const trackWeather = Vue.observable( {\r\n    cacheChecked: false,\r\n\r\n    byId: {} as { [ index: string ]: TrackWeatherData[] },\r\n\r\n    fetching: {} as { [ index: string ]: boolean },\r\n\r\n    shouldBeThrottled() {\r\n        return Object.values( this.fetching ).filter( value => value === true ).length >= 2\r\n    },\r\n\r\n    async fetchTrackWeather( track_id: string ) {\r\n        if ( !this.cacheChecked ) {\r\n            const cachedTrackWeather = cacheGet( 'track_weather' )\r\n            if ( cachedTrackWeather ) {\r\n                const { byId } = JSON.parse( cachedTrackWeather )\r\n                Vue.set( this, 'byId', byId )\r\n            }\r\n\r\n            this.cacheChecked = true\r\n        }\r\n\r\n        if ( this.fetching[track_id] ) {\r\n            await waitUntil( () => this.fetching[track_id] === false )\r\n        }\r\n\r\n        if ( this.byId[ track_id ] ) {\r\n            return\r\n        }\r\n\r\n        if ( this.shouldBeThrottled() ) {\r\n            await waitUntil( () => this.shouldBeThrottled() === false )\r\n        }\r\n\r\n        Vue.set( this.fetching, track_id, true )\r\n\r\n        const res = await fetch( `/tools.php?act=show_textures&stage_id=${track_id}` )\r\n\r\n        const html = await res.text()\r\n        const doc = ( new DOMParser() ).parseFromString( html, 'text/html' )\r\n\r\n        Vue.set( this.byId, track_id, [] )\r\n\r\n        const weatherTable = getElementByXpath( doc, '/html/body/center/table[2]/tbody' )\r\n        if ( weatherTable ) {\r\n\r\n            for ( const row of weatherTable.children ) {\r\n                const clickFunctionBody = row.getAttribute( 'ondblclick' )\r\n                if ( !clickFunctionBody ) {\r\n                    continue\r\n                }\r\n\r\n                const weather_pack = row.childNodes[0]\r\n                const isOriginalWeatherPack = ( weather_pack.textContent || '' ) === 'Originální­ počasí­'\r\n                if ( !isOriginalWeatherPack ) {\r\n                    continue\r\n                }\r\n\r\n                const time_of_day = row.childNodes[1].textContent || ''\r\n                const weather2 = row.childNodes[2].textContent || ''\r\n                const clouds = row.childNodes[3].textContent || ''\r\n                const remark = row.childNodes[4].textContent || ''\r\n\r\n                const [ weather_pack_id, time_of_day_id, weather2_id, clouds_id ] = clickFunctionBody.match( /\\d+/g ) || [ '', '', '', '' ]\r\n                if ( !time_of_day_id || !weather2_id || !clouds_id ) {\r\n                    continue\r\n                }\r\n\r\n                const data: TrackWeatherData = {\r\n                    time_of_day: { id: time_of_day_id, label: time_of_day },\r\n                    weather2: { id: weather2_id, label: weather2 },\r\n                    clouds: { id: clouds_id, label: clouds },\r\n                    remark: remark\r\n                }\r\n\r\n                this.byId[track_id].push( data )\r\n            }\r\n\r\n        }\r\n\r\n        cacheStore( 'track_weather', JSON.stringify( { byId: this.byId } ), 60 * 60 * 24 )\r\n\r\n        Vue.set( this.fetching, track_id, false )\r\n    }\r\n} )\r\n","import Vue from 'vue'\r\nimport { getElementByXpath, extractSelectOptions } from '../util'\r\n\r\nexport const constants = Vue.observable( {\r\n    superally: [] as SelectOption[],\r\n    carPhysics: [] as SelectOption[],\r\n\r\n    fetched: false,\r\n    fetching: false,\r\n\r\n    fetchTournamentConstants() {\r\n        if ( this.fetching || this.fetched ) {\r\n            return\r\n        }\r\n\r\n        this.fetching = true\r\n\r\n        const superally_node = getElementByXpath( document, '//*[@id=\"SRallyPenaltySel\"]' )\r\n        this.superally = extractSelectOptions( superally_node )\r\n\r\n        const car_physics_node = getElementByXpath( document, '//*[@id=\"PhysicsModId\"]' )\r\n        this.carPhysics = extractSelectOptions( car_physics_node )\r\n\r\n        this.fetching = false\r\n        this.fetched = true\r\n    }\r\n} )\r\n","import Vue from 'vue'\r\nimport { store } from '../store'\r\nimport { post, extractSelectOptions, getElementByXpath, cacheGet, cacheStore } from '../util'\r\n\r\nexport const cars = Vue.observable( {\r\n    cacheChecked: false,\r\n\r\n    byId: {} as { [index: string]: string },\r\n\r\n    carPacks: {} as { [index: string]: { [index: string]: { name: string, cars: string[] } } },\r\n\r\n    trackPhysics: {} as { [index: string]: SelectOption[] },\r\n\r\n    fetching: {} as { [index: string]: boolean },\r\n\r\n    async fetchCars( car_physics_id: string ) {\r\n        if ( !this.cacheChecked ) {\r\n            const cachedCars = cacheGet( 'cars' )\r\n            if ( cachedCars ) {\r\n                const { byId, carPacks, trackPhysics } = JSON.parse( cachedCars )\r\n                Vue.set( this, 'byId', byId )\r\n                Vue.set( this, 'carPacks', carPacks )\r\n                Vue.set( this, 'trackPhysics', trackPhysics )\r\n            }\r\n\r\n            this.cacheChecked = true\r\n        }\r\n\r\n        if ( this.fetching[car_physics_id] || this.trackPhysics[car_physics_id] || this.carPacks[car_physics_id] ) {\r\n            return\r\n        }\r\n\r\n        this.fetching[car_physics_id] = true\r\n\r\n        Vue.set( this.carPacks, car_physics_id, {} )\r\n\r\n        const dummy_post = store.tournamentDummyPostOutput( {\r\n            PhysicsModId: car_physics_id,\r\n            tourstages: '10;'\r\n        } )\r\n\r\n        const response = await post( dummy_post, {\r\n            page_selector: '1'\r\n        } )\r\n\r\n        const html = await response.text()\r\n        const doc = ( new DOMParser() ).parseFromString( html, 'text/html' )\r\n\r\n        const car_pack_node = getElementByXpath( doc, '//*[@id=\"ModsPacksSel\"]' )\r\n        const car_pack_options = extractSelectOptions( car_pack_node )\r\n        car_pack_options.forEach( car_pack_option => {\r\n            Vue.set( this.carPacks[car_physics_id], car_pack_option.id, {\r\n                name: car_pack_option.label,\r\n                cars: []\r\n            } )\r\n        } )\r\n\r\n        const car_regexp = /carsInfo\\[\\d+\\] = new Array\\(\"([^\"]+)\",\\s+\"([^\"]+)\",\\s+\"([^\"]+)\"/g\r\n        car_regexp.exec( html )\r\n        let matches = car_regexp.exec( html )\r\n\r\n        while ( matches !== null ) {\r\n            const car_id = matches[1]\r\n            const car_name = matches[2]\r\n            const car_pack_ids = matches[3].split( ',' )\r\n\r\n            Vue.set( this.byId, car_id, car_name )\r\n\r\n            car_pack_ids.forEach( car_pack_id => {\r\n                if ( this.carPacks[car_physics_id][car_pack_id] ) {\r\n                    this.carPacks[car_physics_id][car_pack_id].cars.push( car_id )\r\n                }\r\n            } )\r\n\r\n            matches = car_regexp.exec( html )\r\n        }\r\n\r\n        const physics_node = getElementByXpath( doc, '//*[@id=\"ModsSel\"]' )\r\n        const physics = extractSelectOptions( physics_node ).filter( mod => !this.byId[mod.id] )\r\n        Vue.set( this.trackPhysics, car_physics_id, physics )\r\n\r\n        cacheStore( 'cars', JSON.stringify( { byId: this.byId, carPacks: this.carPacks, trackPhysics: this.trackPhysics } ), 60 * 60 * 24 )\r\n\r\n        this.fetching[car_physics_id] = false\r\n    }\r\n} )\r\n","import { tracks as tracks_data } from './data/tracks'\r\nimport { trackSettings } from './data/track-settings'\r\nimport { trackWeather } from './data/track-weather'\r\nimport { formatDate, formatTime, datePacks, arrayMoveElement, objectWithoutNulls, stringDateToCZDate, getElementByXpath, czDateToStringDate } from './util'\r\nimport { constants } from './data/constants'\r\nimport { cars } from './data/cars'\r\n\r\nconst storeDatePack = datePacks()\r\n\r\nconst defaultTournament: Tournament = {\r\n    name: '',\r\n    description: '',\r\n\r\n    license_id: '0',\r\n\r\n    online: true,\r\n    offline: false,\r\n\r\n    from_date: formatDate( storeDatePack.nextHalfAnHour ),\r\n    from_time: formatTime( storeDatePack.nextHalfAnHour ),\r\n\r\n    to_date: formatDate( storeDatePack.nextThreeDays ),\r\n    to_time: '23:59',\r\n\r\n    cant_resume: false,\r\n    only_one_car: true,\r\n    dont_show_splits: false,\r\n    dont_show_temporary_results_in_rbr: false,\r\n    dont_show_temporary_results_in_web: false,\r\n    save_replays: true,\r\n    require_stage_comments: true,\r\n    test_tournament: false,\r\n\r\n    password: '',\r\n    registration_deadline: '',\r\n\r\n    superally_penalty: 300\r\n}\r\n\r\nexport const store = {\r\n    tournament: defaultTournament,\r\n\r\n    cars_physics: {\r\n        car_physics_id: '',\r\n        track_physics_id: '',\r\n        selected_car_ids: [] as string[]\r\n    },\r\n\r\n    tracks: [] as SelectedTrack[],\r\n\r\n    legs: [] as Leg[],\r\n\r\n    trackFetchInfo( track_id: string ) {\r\n        return Promise.all( [\r\n            trackSettings.fetchTrackSettings( track_id ),\r\n            trackWeather.fetchTrackWeather( track_id )\r\n        ] )\r\n    },\r\n\r\n    async trackAdd( track_ids: string[] ) {\r\n\r\n        for ( const track_id of track_ids ) {\r\n            const track = tracks_data.byId[track_id] as TrackData\r\n            if ( !track ) {\r\n                continue\r\n            }\r\n\r\n            await this.trackFetchInfo( track_id )\r\n\r\n            const previousTrack = this.tracks[this.tracks.length - 1]\r\n            const settings = trackSettings.byId[track_id]\r\n            const weatherSettings = trackWeather.byId[track_id]\r\n\r\n            this.tracks.push( {\r\n                id: track_id,\r\n                name: '',\r\n                surface_type: previousTrack && settings.surface_type.find( surface => surface.id === previousTrack.surface_type ) ?\r\n                    previousTrack.surface_type :\r\n                    settings.surface_type[0].id,\r\n\r\n                surface_age: previousTrack && settings.surface_age.find( surface => surface.id === previousTrack.surface_age ) ?\r\n                    previousTrack.surface_age :\r\n                    settings.surface_age[0].id,\r\n\r\n                weather: previousTrack ? previousTrack.weather : settings.weather[0].id,\r\n                weather_change_allowed: previousTrack ? previousTrack.weather_change_allowed : false,\r\n\r\n                weather2: weatherSettings[0].weather2.id,\r\n                time_of_day: weatherSettings[0].time_of_day.id,\r\n                clouds: weatherSettings[0].clouds.id,\r\n\r\n                service_time_mins: 0,\r\n                setup_change_allowed: previousTrack ? previousTrack.setup_change_allowed : true,\r\n                tyre_replacement_allowed: false,\r\n                tyre_change_allowed: previousTrack ? previousTrack.tyre_change_allowed : true,\r\n                tyres: settings.tyres_recommended,\r\n\r\n                damage_change_allowed: previousTrack ? previousTrack.damage_change_allowed : false,\r\n                damage: previousTrack && settings.damage.find( damage => damage.id === previousTrack.damage ) ?\r\n                    previousTrack.damage :\r\n                    settings.damage[settings.damage.length - 1].id,\r\n\r\n                shortcut_check: previousTrack && settings.shortcut_check.find( shortcut_check => shortcut_check.id === previousTrack.shortcut_check ) ?\r\n                    previousTrack.shortcut_check :\r\n                    settings.shortcut_check[0].id,\r\n\r\n                superally: previousTrack ? previousTrack.superally : false,\r\n                superally_hold: previousTrack ? previousTrack.superally_hold : false,\r\n\r\n                retry_allowed: previousTrack ? previousTrack.retry_allowed : false\r\n            } )\r\n        }\r\n    },\r\n\r\n    trackRemove( track_index: number ) {\r\n        this.tracks.splice( track_index, 1 )\r\n        this.trackFixIncorrectService()\r\n    },\r\n\r\n    trackMove( track_index: number, offset: number ) {\r\n        const moved_successfully = arrayMoveElement( this.tracks, track_index, offset )\r\n        this.trackFixIncorrectService()\r\n        return moved_successfully\r\n    },\r\n\r\n    trackMoveUp( track_index: number ) {\r\n        return this.trackMove( track_index, -1 )\r\n    },\r\n\r\n    trackMoveDown( track_index: number ) {\r\n        return this.trackMove( track_index, +1 )\r\n    },\r\n\r\n    tournamentFromHTML( html: string ): { track_ids: string[], cars_physics: string, has_legs: boolean } {\r\n        const doc = ( new DOMParser() ).parseFromString( html, 'text/html' )\r\n        const tournament_form = doc.getElementById( 'tournament' ) as HTMLFormElement | null\r\n        if ( tournament_form ) {\r\n            const form_data = new FormData( tournament_form )\r\n\r\n            const tour_to_date = form_data.get( 'tour_to_date' ) as string\r\n            const tour_from_date = form_data.get( 'tour_from_date' ) as string\r\n\r\n            const tournament: Tournament = {\r\n                name: ( form_data.get( 'tour_name' ) as string ) || this.tournament.name,\r\n                description: ( form_data.get( 'tour_descr' ) as string ) || this.tournament.description,\r\n\r\n                // NOTE: this must be got from car selection page\r\n                license_id: '0',\r\n\r\n                online: ( form_data.get( 'online' ) as string ) !== null,\r\n                offline: ( form_data.get( 'offlinet' ) as string ) !== null,\r\n\r\n                from_date: tour_from_date ? czDateToStringDate( tour_from_date ) : this.tournament.from_date,\r\n                from_time: ( form_data.get( 'tour_from_time' ) as string ) || this.tournament.from_time,\r\n                to_date: tour_to_date ? czDateToStringDate( tour_to_date ) : this.tournament.to_date,\r\n                to_time: ( form_data.get( 'tour_to_time' ) as string ) || this.tournament.to_time,\r\n\r\n                cant_resume: ( form_data.get( 'cantresrace' ) as string ) !== null,\r\n                only_one_car: ( form_data.get( 'onecaronly' ) as string ) !== null,\r\n                dont_show_splits: ( form_data.get( 'nosplits' ) as string ) !== null,\r\n                dont_show_temporary_results_in_rbr: ( form_data.get( 'notempres' ) as string ) !== null,\r\n                dont_show_temporary_results_in_web: ( form_data.get( 'notempresweb' ) as string ) !== null,\r\n                save_replays: ( form_data.get( 'savereplays' ) as string ) !== null,\r\n                require_stage_comments: ( form_data.get( 'getcomments' ) as string ) !== null,\r\n                test_tournament: ( form_data.get( 'testrun' ) as string ) !== null,\r\n\r\n                password: '',\r\n                registration_deadline: ( form_data.get( 'enroll_close' ) as string ) || this.tournament.registration_deadline,\r\n                superally_penalty: Number( ( form_data.get( 'SRallyPenaltySel' ) as string ) ) || this.tournament.superally_penalty,\r\n            }\r\n\r\n            this.tournament = tournament\r\n\r\n            return {\r\n                track_ids: ( form_data.get( 'tourstages' ) as string || '' ).split( ';' ).filter( id => id.length > 0 ),\r\n                cars_physics: ( form_data.get( 'PhysicsModId' ) as string ) || this.cars_physics.car_physics_id,\r\n                has_legs: ( form_data.get( 'has_legs' ) as string ) !== null\r\n            }\r\n        }\r\n\r\n        return { track_ids: [], cars_physics: '0', has_legs: false }\r\n    },\r\n\r\n    tournamentPostOutput(): Partial<TournamentPOSTOutput> {\r\n        return objectWithoutNulls( {\r\n            tour_name: this.tournament.name.trim(),\r\n            tour_descr: this.tournament.description,\r\n            online: this.tournament.online ? 'on' : null,\r\n            offlinet: this.tournament.offline ? 'on' : null,\r\n            PhysicsModId: this.cars_physics.car_physics_id,\r\n            tour_from_date: stringDateToCZDate( this.tournament.from_date ),\r\n            tour_from_time: this.tournament.from_time,\r\n            tour_to_date: stringDateToCZDate( this.tournament.to_date ),\r\n            tour_to_time: this.tournament.to_time,\r\n            cantresrace: this.tournament.cant_resume ? 'on' : null,\r\n            onecaronly: this.tournament.only_one_car ? 'on' : null,\r\n            nosplits: this.tournament.dont_show_splits ? 'on' : null,\r\n            notempres: this.tournament.dont_show_temporary_results_in_rbr ? 'on' : null,\r\n            notempresweb: this.tournament.dont_show_temporary_results_in_web ? 'on' : null,\r\n            savereplays: this.tournament.save_replays ? 'on' : null,\r\n            getcomments: this.tournament.require_stage_comments ? 'on' : null,\r\n            testrun: this.tournament.test_tournament ? 'on' : null,\r\n            ispassword: this.tournament.password ? 'on' : null,\r\n            tour_password: this.tournament.password || null,\r\n            has_legs: this.legs.length > 0 ? 'on' : null,\r\n            need_enroll: this.tournament.registration_deadline ? 'on' : null,\r\n            enroll_close: this.tournament.registration_deadline || null,\r\n            SRallyPenaltySel: this.tournament.superally_penalty.toString(),\r\n            tourstages: this.tracks.map( track => track.id ).join( ';' ) + ';'\r\n        } )\r\n    },\r\n\r\n    tournamentDummyPostOutput( additionalParams: Partial<TournamentPOSTOutput> = {} ): Partial<TournamentPOSTOutput> {\r\n        const { nextDay, nextThreeDays } = datePacks()\r\n\r\n        return objectWithoutNulls( {\r\n            ...this.tournamentPostOutput(),\r\n            tour_name: 'dummy',\r\n            tour_from_date: stringDateToCZDate( formatDate( nextDay ) ),\r\n            tour_from_time: '00:00',\r\n\r\n            tour_to_date: stringDateToCZDate( formatDate( nextThreeDays ) ),\r\n            tour_to_time: '23:59',\r\n            PhysicsModId: constants.carPhysics[0].id,\r\n\r\n            has_legs: null,\r\n            online: 'on',\r\n            offlinet: null,\r\n\r\n            ...additionalParams\r\n        } )\r\n    },\r\n\r\n    carsPhysicsLicensesFromHTML( html: string ) {\r\n        const doc = ( new DOMParser() ).parseFromString( html, 'text/html' )\r\n        const tournament_form = doc.getElementById( 'tournament' ) as HTMLFormElement | null\r\n        if ( tournament_form ) {\r\n            const form_data = new FormData( tournament_form )\r\n            const { car_physics_id } = this.cars_physics\r\n\r\n            const mods = form_data.getAll( 'ModsSel[]' )\r\n            for ( let mod_id of mods ) {\r\n                mod_id = mod_id.toString()\r\n                if ( cars.byId[mod_id] ) {\r\n                    this.cars_physics.selected_car_ids.push( mod_id )\r\n                } else if ( cars.trackPhysics[car_physics_id].find( option => mod_id === option.id ) ) {\r\n                    this.cars_physics.track_physics_id = mod_id\r\n                }\r\n            }\r\n\r\n            const licenses = form_data.getAll( 'LicSel[]' )\r\n            for ( const license_id of licenses ) {\r\n                this.tournament.license_id = license_id.toString()\r\n                break\r\n            }\r\n        }\r\n    },\r\n\r\n    carsPhysicsPostOutput() {\r\n        return objectWithoutNulls( {\r\n            LicSel: [ this.tournament.license_id ],\r\n            ModsSel: [ this.cars_physics.track_physics_id, ...this.cars_physics.selected_car_ids ]\r\n        } )\r\n    },\r\n\r\n    trackFromHTML( track_id: string, settings: TrackSettings, html: string ): SelectedTrack | null {\r\n        const doc = ( new DOMParser() ).parseFromString( html, 'text/html' )\r\n        const tournament_form = doc.getElementById( 'tournament' ) as HTMLFormElement | null\r\n        if ( tournament_form ) {\r\n            const form_data = new FormData( tournament_form )\r\n\r\n            return {\r\n                id: track_id,\r\n                name: ( form_data.get( 'stage_rename' ) as string ) || '',\r\n                surface_type: ( form_data.get( 'SurfSel' ) as string ) || settings.surface_type[0].id,\r\n                surface_age: ( form_data.get( 'SurfAgeSel' ) as string ) || settings.surface_age[0].id,\r\n\r\n                weather: ( form_data.get( 'WeatherSel' ) as string ) || settings.weather[0].id,\r\n                weather2: ( form_data.get( 'Weather2Sel' ) as string ) || settings.weather2[0].id,\r\n                weather_change_allowed: ( form_data.get( 'canchangeweather' ) as string ) !== null,\r\n                time_of_day: ( form_data.get( 'TimeOfDaySel' ) as string ) || settings.time_of_day[0].id,\r\n                clouds: ( form_data.get( 'CloudsSel' ) as string ) || settings.clouds[0].id,\r\n\r\n                service_time_mins: Number( ( form_data.get( 'ServiceSel' ) as string ) ) || 0,\r\n                setup_change_allowed: ( form_data.get( 'canchangesetup' ) as string ) !== null,\r\n                tyre_replacement_allowed: ( form_data.get( 'canrenewtyres' ) as string ) !== null,\r\n                tyre_change_allowed: ( form_data.get( 'canchangetyres' ) as string ) !== null,\r\n                tyres: ( form_data.get( 'TyresSel' ) as string ) || settings.tyres_recommended,\r\n\r\n                damage_change_allowed: ( form_data.get( 'canchangedamage' ) as string ) !== null,\r\n                damage: ( form_data.get( 'DamageSel' ) as string ) || settings.damage[settings.damage.length - 1].id,\r\n\r\n                shortcut_check: ( form_data.get( 'CutcheckerSel' ) as string ) || settings.shortcut_check[0].id,\r\n\r\n                superally: ( form_data.get( 'allowsuperally' ) as string ) !== null,\r\n                superally_hold: ( form_data.get( 'superallychpoint' ) as string ) !== null,\r\n\r\n                retry_allowed: ( form_data.get( 'canrepeatstage' ) as string ) !== null\r\n            }\r\n        }\r\n\r\n        return null\r\n    },\r\n\r\n    trackPostOutput( track_index: number ) {\r\n        const track = this.tracks[track_index]\r\n        const isLast = track_index === this.tracks.length - 1\r\n        return objectWithoutNulls( {\r\n            renamestage: track.name ? 'on' : null,\r\n            stage_rename: track.name,\r\n            CarSel: this.cars_physics.selected_car_ids[0],\r\n            SurfSel: track.surface_type,\r\n            SurfAgeSel: track.surface_age,\r\n            TexturesPackSel: '-1',\r\n            WeatherPackSel: '-1',\r\n            canchangeweather: track.weather_change_allowed ? 'on' : null,\r\n            WeatherSel: track.weather,\r\n            TimeOfDaySel: track.time_of_day,\r\n            Weather2Sel: track.weather2,\r\n            CloudsSel: track.clouds,\r\n            ServiceSel: isLast ? null : track.service_time_mins.toString(),\r\n            canrenewtyres: track.tyre_replacement_allowed ? 'on' : null,\r\n            canchangetyres: track.tyre_change_allowed ? 'on' : null,\r\n            TyresSel: track.tyres,\r\n            canchangedamage: track.damage_change_allowed ? 'on' : null,\r\n            DamageSel: track.damage,\r\n            CutcheckerSel: track.shortcut_check,\r\n            leg_pos: this.legs.length === 0 ? null : this.legs.reduce( ( prev, leg, leg_index ) => {\r\n                return track_index > leg.after_stage_divider ? leg_index + 1 : prev\r\n            }, 0 ),\r\n            allowsuperally: track.superally ? 'on' : null,\r\n            superallychpoint: track.superally_hold ? 'on' : null,\r\n            canrepeatstage: track.retry_allowed ? 'on' : null,\r\n            canchangesetup: track.setup_change_allowed ? 'on' : null\r\n        } )\r\n    },\r\n\r\n    trackFixIncorrectService() {\r\n        if ( this.tracks.length > 0 ) {\r\n            const lastTrack = this.tracks[this.tracks.length - 1]\r\n            lastTrack.service_time_mins = 0\r\n            lastTrack.tyre_replacement_allowed = false\r\n        }\r\n    },\r\n\r\n    legsFromHTML( html: string ) {\r\n        const doc = ( new DOMParser() ).parseFromString( html, 'text/html' )\r\n\r\n        const table = getElementByXpath( doc, '/html/body/table/tbody/tr/td/table[3]/tbody/tr[1]/td[2]/form/table/tbody' )\r\n        const original_legs: Array<{\r\n            stages_to: number,\r\n            date_to: string,\r\n            time_to: string\r\n        }> = []\r\n        if ( table ) {\r\n            for ( const row of table.children ) {\r\n                const is_leg_row = !isNaN( Number( row.children[0].textContent || '' ) )\r\n                if ( !is_leg_row ) {\r\n                    continue\r\n                }\r\n\r\n                if ( row.children.length < 7 ) {\r\n                    continue\r\n                }\r\n\r\n                const stages_string = row.children[1].textContent || ''\r\n                const stages_matches = stages_string.match( /(\\d+) - (\\d+)/ )\r\n                if ( !stages_matches ) {\r\n                    continue\r\n                }\r\n\r\n                const stages_to = Number( stages_matches[2] )\r\n\r\n                const date_to = czDateToStringDate( row.children[5].children[0].getAttribute( 'value' ) || '' )\r\n                const time_to = row.children[6].children[0].getAttribute( 'value' ) || ''\r\n\r\n                original_legs.push( { stages_to, date_to, time_to } )\r\n            }\r\n        }\r\n\r\n        for ( let i = 0 ; i < original_legs.length ; i++ ) {\r\n            const is_last = i === original_legs.length - 1\r\n            if ( is_last ) {\r\n                continue\r\n            }\r\n\r\n            const leg = original_legs[i]\r\n            this.legs.push( {\r\n                after_stage_divider: leg.stages_to - 1,\r\n                date: leg.date_to,\r\n                time: leg.time_to\r\n            } )\r\n        }\r\n    },\r\n\r\n    legsPostOutput(): any {\r\n        if ( this.legs.length === 0 ) {\r\n            return {}\r\n        }\r\n\r\n        return this.legs.map( ( leg, leg_index ) => {\r\n            return {\r\n                index: leg_index,\r\n\r\n                date_from: stringDateToCZDate( leg_index === 0 ? this.tournament.from_date : this.legs[leg_index - 1].date ),\r\n                time_from: leg_index === 0 ? this.tournament.from_time : this.legs[leg_index - 1].time,\r\n\r\n                date_to: stringDateToCZDate( leg.date ),\r\n                time_to: leg.time\r\n            }\r\n        } ).concat( {\r\n            index: this.legs.length,\r\n            date_from: stringDateToCZDate( this.legs[this.legs.length - 1].date ),\r\n            time_from: this.legs[this.legs.length - 1].time,\r\n\r\n            date_to: stringDateToCZDate( this.tournament.to_date ),\r\n            time_to: this.tournament.to_time\r\n        } ).reduce( ( prev, leg, index ) => {\r\n            const fields: any = {\r\n            }\r\n            if ( index > 0 ) {\r\n                fields[`leg${index}_date_from`] = leg.date_from\r\n                fields[`leg${index}_time_from`] = leg.time_from\r\n            }\r\n            if ( index <= this.legs.length - 1 ) {\r\n                fields[`leg${index}_date_to`] = leg.date_to\r\n                fields[`leg${index}_time_to`] = leg.time_to\r\n            }\r\n            return {\r\n                ...prev,\r\n                ...fields\r\n            }\r\n        }, {} )\r\n    }\r\n}\r\n","import Vue from 'vue'\r\nimport { store } from '../store'\r\nimport { post, extractSelectOptions, getElementByXpath, cacheGet, cacheStore } from '../util'\r\n\r\nexport const licenses = Vue.observable( {\r\n    cacheChecked: false,\r\n\r\n    options: [] as SelectOption[],\r\n\r\n    fetching: false,\r\n\r\n    // NOTE: dumb car_physics_id here but licenses are located on Cars page\r\n    async fetchLicenses( car_physics_id: string ) {\r\n        if ( !this.cacheChecked ) {\r\n            const cachedLicenses = cacheGet( 'licenses' )\r\n            if ( cachedLicenses ) {\r\n                Vue.set( this, 'options', JSON.parse( cachedLicenses ) )\r\n            }\r\n\r\n            this.cacheChecked = true\r\n        }\r\n\r\n        if ( this.fetching ) {\r\n            return\r\n        }\r\n\r\n        this.fetching = true\r\n\r\n        const dummy_post = store.tournamentDummyPostOutput( {\r\n            PhysicsModId: car_physics_id,\r\n            tourstages: '10;'\r\n        } )\r\n\r\n        const response = await post( dummy_post, {\r\n            page_selector: '1'\r\n        } )\r\n\r\n        const html = await response.text()\r\n        const doc = ( new DOMParser() ).parseFromString( html, 'text/html' )\r\n\r\n        const licenses_node = getElementByXpath( doc, '//*[@id=\"LicSel\"]' )\r\n        this.options = extractSelectOptions( licenses_node )\r\n\r\n        cacheStore( 'licenses', JSON.stringify( this.options ), 60 * 60 * 24 )\r\n\r\n        this.fetching = false\r\n    }\r\n} )\r\n","import * as tsx from 'vue-tsx-support'\r\nimport { store } from '../store'\r\nimport { constants } from '../data/constants'\r\nimport { licenses } from '../data/licenses'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'Tournament',\r\n\r\n    computed: {\r\n        superally: function() {\r\n            return constants.fetched ? constants.superally : undefined\r\n        },\r\n\r\n        tournament: function() {\r\n            return store.tournament\r\n        },\r\n\r\n        licenses: function() {\r\n            return licenses.options\r\n        }\r\n    },\r\n\r\n    props: {\r\n        errors: Object as () => {\r\n            name: string,\r\n            from_datetime: string,\r\n            to_datetime: string,\r\n            registration_deadline: string\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        return (\r\n            <table><tbody>\r\n                 <tr>\r\n                    <td><label for='tournament.name'>Tournament name</label></td>\r\n                    <td>\r\n                        <input id='tournament.name' v-model={ this.tournament.name }/>\r\n                        <div class='error'>{ this.errors.name }</div>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.description'>Tournament description</label></td>\r\n                    <td><textarea id='tournament.description' v-model={ this.tournament.description } style='background-color: #050505;'/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.license_id'> License</label></td>\r\n                    <td>\r\n                        <select v-model={ this.tournament.license_id }>\r\n                        { this.licenses.map( option =>\r\n                            <option key={ `license${option.id}` } value={ option.id }>{ option.label }</option>\r\n                        ) }\r\n                        </select>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.online'> Online tournament</label></td>\r\n                    <td><input type='checkbox' id='tournament.online' v-model={ this.tournament.online }/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.offline'> Offline tournament</label></td>\r\n                    <td><input type='checkbox' id='tournament.offline' v-model={ this.tournament.offline }/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Valid from (<a href='https://greenwichmeantime.com/time-zone/europe/european-union/czech-republic/'>CET</a>) (blank = now)</td>\r\n                    <td>\r\n                        <input type='date' id='tournament.from_date' v-model={ this.tournament.from_date }/>\r\n                        <input type='time' id='tournament.from_time' v-model={ this.tournament.from_time }/>\r\n                        <div class='error'>{ this.errors.from_datetime }</div>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Valid to (<a href='https://greenwichmeantime.com/time-zone/europe/european-union/czech-republic/'>CET</a>)</td>\r\n                    <td>\r\n                        <input type='date' id='tournament.from_to' v-model={ this.tournament.to_date } />\r\n                        <input type='time' id='tournament.from_to' v-model={ this.tournament.to_time } />\r\n                        <div class='error'>{ this.errors.to_datetime }</div>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.cant_resume'>Can't resume tournament</label></td>\r\n                    <td><input type='checkbox' id='tournament.cant_resume' v-model={ this.tournament.cant_resume }/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.only_one_car'>Only one car</label></td>\r\n                    <td><input type='checkbox' id='tournament.only_one_car' v-model={ this.tournament.only_one_car }/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.dont_show_splits'>Don't show splits</label></td>\r\n                    <td><input type='checkbox' id='tournament.dont_show_splits' v-model={ this.tournament.dont_show_splits }/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.dont_show_temporary_results_in_rbr'>Don't show temporary results in RBR</label></td>\r\n                    <td><input type='checkbox' id='tournament.dont_show_temporary_results_in_rbr' v-model={ this.tournament.dont_show_temporary_results_in_rbr }/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.dont_show_temporary_results_in_web'>Don't show temporary results on web</label></td>\r\n                    <td><input type='checkbox' id='tournament.dont_show_temporary_results_in_web' v-model={ this.tournament.dont_show_temporary_results_in_web }/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.save_replays'>Save replays</label></td>\r\n                    <td><input type='checkbox' id='tournament.save_replays' v-model={ this.tournament.save_replays }/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.require_stage_comments'>Require stage comments</label></td>\r\n                    <td><input type='checkbox' id='tournament.require_stage_comments' v-model={ this.tournament.require_stage_comments }/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.test_tournament'>Testing (tournament will be deleted after 14 days)</label></td>\r\n                    <td><input type='checkbox' id='tournament.test_tournament' v-model={ this.tournament.test_tournament } /></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.password'>Password</label></td>\r\n                    <td><input id='tournament.password' v-model={ this.tournament.password } placeholder='No password' /></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.registration_deadline'>Registration deadline (hours before tournament start)</label></td>\r\n                    <td>\r\n                        <input id='tournament.registration_deadline' v-model={ this.tournament.registration_deadline } placeholder='No registration' />\r\n                        <div class='error'>{ this.errors.registration_deadline }</div>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Superally penalty</td>\r\n                    <td>\r\n                    { this.superally ?\r\n                        <select v-model={ this.tournament.superally_penalty }>\r\n                        { this.superally.map( option =>\r\n                            <option key={ `superally${option.id}` } value={ option.id }>{ option.label }</option>\r\n                        ) }\r\n                        </select>\r\n                    :\r\n                        <div>Loading...</div>\r\n                    }\r\n                    </td>\r\n                </tr>\r\n\r\n            </tbody></table>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-0498a637/Tournament.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { store } from '../store'\r\nimport { constants } from '../data/constants'\r\nimport { cars } from '../data/cars'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'Cars',\r\n\r\n    data: function() {\r\n        return {\r\n\r\n            car_pack: '',\r\n            available_cars_selected_ids: [] as string[],\r\n\r\n            selected_cars_selected_ids: [] as string[],\r\n\r\n            cars_physics: store.cars_physics\r\n        }\r\n    },\r\n\r\n    props: {\r\n        errors: Object as () => {\r\n            selected_cars: string,\r\n            car_physics: string,\r\n            track_physics: string\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        car_physics_select: function() {\r\n            return constants.fetched ? constants.carPhysics : undefined\r\n        },\r\n\r\n        track_physics_select: function() {\r\n            return cars.trackPhysics[this.cars_physics.car_physics_id] || []\r\n        },\r\n\r\n        car_packs_select: function() {\r\n            if ( !this.car_physics_select ) {\r\n                return []\r\n            }\r\n\r\n            if ( !cars.carPacks[this.cars_physics.car_physics_id] ) {\r\n                return []\r\n            }\r\n\r\n            const carPack = cars.carPacks[this.cars_physics.car_physics_id]\r\n\r\n            return Object.keys( carPack ).map( id => ( {\r\n                id,\r\n                label: carPack[id].name\r\n            } ) )\r\n        },\r\n        available_cars: function() {\r\n            if ( !this.car_packs_select ) {\r\n                return []\r\n            }\r\n\r\n            const carPack = cars.carPacks[this.cars_physics.car_physics_id][this.car_pack]\r\n\r\n            return this.carIdsForSelect( carPack.cars )\r\n        },\r\n        selected_cars: function() {\r\n            return this.carIdsForSelect( this.cars_physics.selected_car_ids )\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        addToSelected: function( car_ids: string[] ) {\r\n            this.cars_physics.selected_car_ids = this.cars_physics.selected_car_ids\r\n                .concat( car_ids )\r\n                .filter( ( car_id, index, array ) => array.indexOf( car_id ) === index )\r\n            this.available_cars_selected_ids = []\r\n        },\r\n\r\n        addSelected: function() {\r\n            this.addToSelected( this.available_cars_selected_ids )\r\n        },\r\n\r\n        addAll: function() {\r\n            this.addToSelected( this.available_cars.map( car => car.id ) )\r\n        },\r\n\r\n        removeSelected: function() {\r\n            this.cars_physics.selected_car_ids = this.cars_physics.selected_car_ids.filter( car_id => !this.selected_cars_selected_ids.includes( car_id ) )\r\n        },\r\n\r\n        removeAll: function() {\r\n            this.cars_physics.selected_car_ids = []\r\n            this.selected_cars_selected_ids = []\r\n        },\r\n\r\n        carIdsForSelect: function( car_ids: string[] ) {\r\n            return car_ids.map( car_id => ( {\r\n                id: car_id,\r\n                value: cars.byId[car_id] as string\r\n            } ) ).sort( ( a, b ) => a.value.toLowerCase() > b.value.toLowerCase() ? 1 : -1 )\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        'cars_physics.car_physics_id': function() {\r\n            this.cars_physics.track_physics_id = ''\r\n            this.cars_physics.selected_car_ids = []\r\n            this.car_pack = ''\r\n            this.removeAll()\r\n        }\r\n    },\r\n\r\n    render( h ) {\r\n        return (\r\n            <table><tbody><tr>\r\n                <td style='vertical-align: top;'>\r\n                    <div>\r\n                        Car physics\r\n                    { this.car_physics_select ?\r\n                        <select style='width: 100%;' v-model={ this.cars_physics.car_physics_id }>\r\n                            <option disabled value=''>Select car physics</option>\r\n                        { this.car_physics_select.map( option =>\r\n                            <option key={ option.id } value={ option.id }>{ option.label }</option>\r\n                        ) }\r\n                        </select>\r\n                    :\r\n                        <div>Loading...</div>\r\n                    }\r\n                    </div>\r\n\r\n                    <div>\r\n                        Track physics\r\n                        <select style='width: 100%;' v-model={ this.cars_physics.track_physics_id }>\r\n                            <option disabled value=''>{\r\n                                cars.fetching[this.cars_physics.car_physics_id] ? 'Loading...' :\r\n                                !this.cars_physics.car_physics_id ? 'Select car physics first' :\r\n                                'Select track physics'\r\n                            }</option>\r\n                        { this.track_physics_select.map( option =>\r\n                            <option key={ option.id } value={ option.id }>{ option.label }</option>\r\n                        ) }\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        Car pack\r\n                        <select style='width: 100%;' v-model={ this.car_pack }>\r\n                            <option disabled value=''>{\r\n                                cars.fetching[this.cars_physics.car_physics_id] ? 'Loading...' :\r\n                                !this.cars_physics.car_physics_id ? 'Select car physics first' :\r\n                                'Select car pack'\r\n                            }</option>\r\n                        { this.car_packs_select.map( option =>\r\n                            <option key={ option.id } value={ option.id }>{ option.label }</option>\r\n                        ) }\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <select v-model={ this.available_cars_selected_ids } multiple style='width: 100%; min-width: 200px; height: 400px;'>\r\n                        { this.car_pack ? this.available_cars.map( option =>\r\n                            <option key={ option.id } title={ option.value } value={ option.id } onDblclick={ this.addSelected }>{ option.value }</option>\r\n                        ) : (\r\n                            <option disabled value=''>No car pack selected</option>\r\n                        ) }\r\n                        </select>\r\n                    </div>\r\n                </td>\r\n\r\n                <td class='select-buttons'>\r\n                    <button onClick={ this.addSelected } style='text-align: left;'>Add selected ></button>\r\n                    <button onClick={ this.addAll } style='text-align: left;'>Add all >></button>\r\n                    <button onClick={ this.removeSelected } style='text-align: right;'>&lt; Remove selected</button>\r\n                    <button onClick={ this.removeAll } style='text-align: right;'>&lt;&lt; Remove all</button>\r\n                </td>\r\n\r\n                <td>\r\n                    <div>Selected cars</div>\r\n                    <select v-model={ this.selected_cars_selected_ids } multiple style='width: 100%; min-width: 200px; height: 500px;'>\r\n                    { this.errors.selected_cars &&\r\n                        <option class='error'>{ this.errors.selected_cars }</option>\r\n                    }\r\n                    { this.selected_cars.map( option =>\r\n                        <option key={ option.id } value={ option.id }>{ option.value }</option>\r\n                    ) }\r\n                    </select>\r\n                </td>\r\n            </tr></tbody></table >\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-1d7622ad/Cars.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { store } from '../store'\r\nimport { tracks } from '../data/tracks'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'TrackList',\r\n    data: function() {\r\n        return {\r\n            selected_track_groups: [ '' ] as string[],\r\n\r\n            available_tracks_filter: '',\r\n            available_tracks_selected_ids: [] as string[],\r\n\r\n            tracks_selected_indexes: [] as number[],\r\n\r\n            tracks: store.tracks,\r\n            tracks_data: tracks.byId\r\n        }\r\n    },\r\n\r\n    props: {\r\n        errors: Object as () => {\r\n            selected_tracks: string,\r\n            offline_tracks: string\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        available_track_groups: function() {\r\n            const country_array: string[] = []\r\n            const surface_array: string[] = []\r\n            Object.values( this.tracks_data ).forEach( track_data => {\r\n                if ( !country_array.includes( track_data.country ) ) {\r\n                    country_array.push( track_data.country )\r\n                }\r\n\r\n                if ( !surface_array.includes( track_data.surface ) ) {\r\n                    surface_array.push( track_data.surface )\r\n                }\r\n            } )\r\n\r\n            return [\r\n                ...( surface_array.sort() ),\r\n                ...( country_array.sort() )\r\n            ]\r\n        },\r\n\r\n        available_tracks_select: function() {\r\n            return Object.keys( this.tracks_data ).map( key => ( {\r\n                id: key,\r\n                value: this.tracks_data[key]\r\n            } ) )\r\n            .sort( ( a, b ) => a.value.name > b.value.name ? 1 : -1 )\r\n            .filter( option =>\r\n                this.selected_track_groups.includes( '' ) ||\r\n                this.selected_track_groups.includes( option.value.country ) ||\r\n                this.selected_track_groups.includes( option.value.surface )\r\n            )\r\n            .filter( option => this.available_tracks_filter === '' || option.value.name.toLowerCase().indexOf( this.available_tracks_filter.toLowerCase() ) !== -1 )\r\n        },\r\n\r\n        total_distance: function() {\r\n            return this.tracks.reduce( ( sum, track ) => sum + this.tracks_data[track.id].distance, 0 ).toFixed( 1 )\r\n        },\r\n\r\n        isLoading: function() {\r\n            return tracks.fetching\r\n        }\r\n    },\r\n\r\n    methods: {\r\n\r\n        addToSelected: function( track_ids: string[] ) {\r\n            store.trackAdd( track_ids )\r\n        },\r\n\r\n        addSelected: function() {\r\n            this.addToSelected( this.available_tracks_selected_ids )\r\n        },\r\n\r\n        moveSelected: function( offset: number ) {\r\n            const sorted_indexes = this.tracks_selected_indexes.sort( ( a, b ) => ( offset >= 0 ? a > b : a < b ) ? -1 : 1 )\r\n\r\n            for ( let index = 0 ; index < sorted_indexes.length ; index++ ) {\r\n                const selected_index = sorted_indexes[index]\r\n                if ( store.trackMove( selected_index, offset ) ) {\r\n                    this.tracks_selected_indexes[index] += offset\r\n                } else {\r\n                    break\r\n                }\r\n            }\r\n        },\r\n\r\n        addRandom: function() {\r\n            const random_track_id = this.available_tracks_select[ Math.floor( Math.random() * this.available_tracks_select.length ) ].id\r\n            if ( !random_track_id ) {\r\n                return\r\n            }\r\n            this.addToSelected( [ random_track_id ] )\r\n        },\r\n\r\n        removeSelected: function() {\r\n            this.tracks_selected_indexes.sort( ( a, b ) => a > b ? -1 : 1 ).forEach( index => {\r\n                store.trackRemove( index )\r\n            } )\r\n        },\r\n\r\n        removeAll: function() {\r\n            this.tracks.splice( 0 )\r\n        },\r\n    },\r\n\r\n    render: function( h ) {\r\n        if ( this.isLoading ) {\r\n            return (\r\n                <div>Loading track list...</div>\r\n            )\r\n        }\r\n        return (\r\n            <table><tbody><tr>\r\n                <td>\r\n                    <div>Track groups</div>\r\n                    <select v-model={ this.selected_track_groups } multiple style='height: 400px;'>\r\n                        <option value=''>All tracks</option>\r\n                    { this.available_track_groups.map( group =>\r\n                        <option value={ group } key={ group }>{ group }</option>\r\n                    ) }\r\n                    </select>\r\n                </td>\r\n                <td>\r\n                    <div>Tracks</div>\r\n                    <div>\r\n                        <input style='width: 100%;' v-model={ this.available_tracks_filter } placeholder='Search...'/>\r\n                    </div>\r\n                    <select v-model={ this.available_tracks_selected_ids } multiple style='height: 382px; width: 200px'>\r\n                    { this.available_tracks_select.map( option =>\r\n                        <option value={ option.id } key={ option.id } onDblclick={ this.addSelected }>{ option.value.name }</option>\r\n                    ) }\r\n                    </select>\r\n                </td>\r\n                <td class='select-buttons'>\r\n                    <button onClick={ () => this.moveSelected( -1 ) } style='text-align: left; margin-bottom: 16px;'>^^^ Move selected</button>\r\n\r\n                    <button onClick={ this.addSelected } style='text-align: left;'>Add selected ></button>\r\n                    <button onClick={ this.addRandom } style='text-align: left;'>Add random ></button>\r\n                    <button onClick={ this.removeSelected } style='text-align: right;'>&lt; Remove selected</button>\r\n                    <button onClick={ this.removeAll } style='text-align: right;'>&lt;&lt; Remove all</button>\r\n\r\n                    <button onClick={ () => this.moveSelected( +1 ) } style='text-align: right; margin-top: 16px;'>Move selected vvv</button>\r\n                </td>\r\n                <td>\r\n                    <div>Selected tracks</div>\r\n                    <select v-model={ this.tracks_selected_indexes } multiple style='height: 400px; width: 200px' onDblclick={ this.removeSelected }>\r\n                    { this.errors.selected_tracks &&\r\n                        <option class='error'>{ this.errors.selected_tracks }</option>\r\n                    }\r\n                    { this.tracks.map( ( track, index ) =>\r\n                        <option value={ index } key={`${index}${track.id}`}>{ index + 1 } - { this.tracks_data[track.id].name }</option>\r\n                    ) }\r\n                    </select>\r\n                    <div>Total distance: { this.total_distance } km</div>\r\n                    <div class='error'>{ this.errors.offline_tracks }</div>\r\n                </td>\r\n            </tr></tbody></table>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-401030b1/TrackList.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { trackSettings } from '../data/track-settings'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'WeatherSelect',\r\n    props: {\r\n        track: Object as () => SelectedTrack,\r\n    },\r\n    computed: {\r\n        settings: function() {\r\n            return trackSettings.byId[this.track.id]\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        if ( !this.settings ) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        return (\r\n            <select v-model={ this.track.weather }>\r\n            { this.settings.weather.map( option =>\r\n                <option key={ `weather${option.id}` } value={ option.id }>{ option.label }</option>\r\n            ) }\r\n            </select>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-7d300e3c/WeatherSelect.tsx\" });","enum SurfaceType {\r\n    Dry = '0',\r\n    Damp = '1',\r\n    Wet = '2',\r\n}\r\n\r\nenum SurfaceAge {\r\n    New = '0',\r\n    Normal = '1',\r\n    Worn = '2',\r\n}\r\n\r\nexport const problems: { [index: string]: TrackProblems } = {\r\n\r\n    // RSI slalom Shonen\r\n    139: {\r\n        surface_type: [ SurfaceType.Damp, SurfaceType.Wet ],\r\n    },\r\n\r\n    // RSI slalom gegeWRC\r\n    140: {\r\n        surface_type: [ SurfaceType.Damp, SurfaceType.Wet ]\r\n    },\r\n\r\n    // Jirkovicky\r\n    488: {\r\n        surface_type: [ SurfaceType.Damp ]\r\n    },\r\n\r\n    // Swiss II\r\n    585: {\r\n        surface_age: [ SurfaceAge.Normal, SurfaceAge.Worn ]\r\n    },\r\n\r\n    // Blanare\r\n    590: {\r\n        surface_type: [ SurfaceType.Damp, SurfaceType.Wet ],\r\n    },\r\n\r\n    // Blanare II\r\n    591: {\r\n        surface_type: [ SurfaceType.Damp, SurfaceType.Wet ]\r\n    },\r\n\r\n    // Pikes Peak 2008\r\n    598: {\r\n        surface_type: [ SurfaceType.Damp, SurfaceType.Wet ]\r\n    },\r\n\r\n    // Sturec\r\n    607: {\r\n        surface_type: [ SurfaceType.Damp, SurfaceType.Wet ]\r\n    },\r\n\r\n    // Sturec II\r\n    608: {\r\n        surface_type: [ SurfaceType.Damp, SurfaceType.Wet ]\r\n    },\r\n\r\n    // Lousada - WRC\r\n    703: {\r\n        surface_age: [ SurfaceAge.Normal, SurfaceAge.Worn ]\r\n    },\r\n\r\n    // Lousada - RG\r\n    705: {\r\n        surface_age: [ SurfaceAge.Normal, SurfaceAge.Worn ]\r\n    },\r\n\r\n    // Ai-Petri Winter\r\n    802: {\r\n        surface_age: [ SurfaceAge.Normal, SurfaceAge.Worn ]\r\n    },\r\n\r\n    // Uchan-Su Winter\r\n    803: {\r\n        surface_age: [ SurfaceAge.Normal, SurfaceAge.Worn ]\r\n    },\r\n\r\n    // Azov\r\n    830: {\r\n        surface_age: [ SurfaceAge.Normal, SurfaceAge.Worn ]\r\n    },\r\n\r\n    // Puy du Lac\r\n    1012: {\r\n        time_of_day: [ '3' ]\r\n    },\r\n}\r\n","import * as tsx from 'vue-tsx-support'\r\nimport { trackSettings } from '../data/track-settings'\r\nimport { problems } from '../data/track-problems'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'SurfaceTypeSelect',\r\n    props: {\r\n        track: Object as () => SelectedTrack,\r\n        tinyProblemDisplay: Boolean\r\n    },\r\n    computed: {\r\n        settings: function() {\r\n            return trackSettings.byId[this.track.id]\r\n        }\r\n    },\r\n    methods: {\r\n        hasProblem: function( surface_type_id: string ) {\r\n            return ( ( problems[this.track.id] && problems[this.track.id].surface_type ) || [] ).includes( surface_type_id )\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        if ( !this.settings ) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <select v-model={ this.track.surface_type }>\r\n                { this.settings.surface_type.map( option =>\r\n                    <option key={ `surface_type${option.id}` } value={ option.id }>\r\n                        { option.label + ( this.tinyProblemDisplay && this.hasProblem( option.id ) ? ' (!)' : '' ) }\r\n                    </option>\r\n                ) }\r\n                </select>\r\n            { !this.tinyProblemDisplay &&\r\n                <div class='error'>{ this.hasProblem( this.track.surface_type ) ? `It's known that this surface type may crash the game unless the track is patched.` : '' }</div>\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-77cc838f/SurfaceTypeSelect.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { trackSettings } from '../data/track-settings'\r\nimport { problems } from '../data/track-problems'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'SurfaceAgeSelect',\r\n    props: {\r\n        track: Object as () => SelectedTrack,\r\n        tinyProblemDisplay: Boolean\r\n    },\r\n    computed: {\r\n        settings: function() {\r\n            return trackSettings.byId[this.track.id]\r\n        }\r\n    },\r\n    methods: {\r\n        hasProblem: function( surface_age_id: string ) {\r\n            return ( ( problems[this.track.id] && problems[this.track.id].surface_age ) || [] ).includes( surface_age_id )\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        if ( !this.settings ) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <select v-model={ this.track.surface_age }>\r\n                { this.settings.surface_age.map( option =>\r\n                    <option key={ `surface_age${option.id}` } value={ option.id }>\r\n                        { option.label + ( this.tinyProblemDisplay && this.hasProblem( option.id ) ? ' (!)' : '' ) }\r\n                    </option>\r\n                ) }\r\n                </select>\r\n            { !this.tinyProblemDisplay &&\r\n                <div class='error'>{ this.hasProblem( this.track.surface_age ) ? `It's known that this surface age may crash the game unless the track is patched.` : '' }</div>\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-0d0c0890/SurfaceAgeSelect.tsx\" });","import * as tsx from 'vue-tsx-support'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'ServiceSelect',\r\n    props: {\r\n        track: Object as () => SelectedTrack\r\n    },\r\n\r\n    render: function( h ) {\r\n        return (\r\n            <select v-model={ this.track.service_time_mins }>\r\n                <option value={ 0 }>No service</option>\r\n                <option value={ 5 }>5 min.</option>\r\n                <option value={ 10 }>10 min.</option>\r\n                <option value={ 15 }>15 min.</option>\r\n                <option value={ 20 }>20 min.</option>\r\n                <option value={ 30 }>30 min.</option>\r\n                <option value={ 60 }>60 min.</option>\r\n                <option value={ 90 }>90 min.</option>\r\n            </select>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-4558dfbd/ServiceSelect.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { trackSettings } from '../data/track-settings'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'DamageSelect',\r\n    props: {\r\n        track: Object as () => SelectedTrack,\r\n    },\r\n    computed: {\r\n        settings: function() {\r\n            return trackSettings.byId[this.track.id]\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        if ( !this.settings ) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        return (\r\n            <select v-model={ this.track.damage }>\r\n            { this.settings.damage.map( option =>\r\n                <option key={ `damage${option.id}` } value={ option.id }>{ option.label }</option>\r\n            ) }\r\n            </select>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-bd45b556/DamageSelect.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { trackSettings } from '../data/track-settings'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'TyreSelect',\r\n    props: {\r\n        track: Object as () => SelectedTrack,\r\n    },\r\n    computed: {\r\n        settings: function() {\r\n            return trackSettings.byId[this.track.id]\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        if ( !this.settings ) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        return (\r\n            <select v-model={ this.track.tyres }>\r\n            { this.settings.tyres.map( option =>\r\n                <option key={ `tyres${option.id}` } value={ option.id }>{ option.label }</option>\r\n            ) }\r\n            </select>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-3932e444/TyreSelect.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { trackSettings } from '../data/track-settings'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'ShortcutSelect',\r\n    props: {\r\n        track: Object as () => SelectedTrack,\r\n    },\r\n    computed: {\r\n        settings: function() {\r\n            return trackSettings.byId[this.track.id]\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        if ( !this.settings ) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        return (\r\n            <select v-model={ this.track.shortcut_check }>\r\n            { this.settings.shortcut_check.map( option =>\r\n                <option key={ `shortcut${option.id}` } value={ option.id }>{ option.label }</option>\r\n            ) }\r\n            </select>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-cd432ca8/ShortcutSelect.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { trackWeather } from '../data/track-weather'\r\nimport { problems } from '../data/track-problems'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'TrackWeatherSelect',\r\n    props: {\r\n        track: Object as () => SelectedTrack,\r\n    },\r\n    computed: {\r\n        options: function() {\r\n            return trackWeather.byId[this.track.id]\r\n        },\r\n        hasProblem: function() {\r\n            return ( ( problems[this.track.id] && problems[this.track.id].time_of_day ) || [] ).includes( this.track.time_of_day )\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        if ( !this.options ) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <select onChange={ ( e ) => {\r\n                    if ( e.target ) {\r\n                        const [ time_of_day_id, weather2_id, clouds_id ] = ( e.target as HTMLSelectElement ).value.split( ',' )\r\n                        this.track.time_of_day = time_of_day_id\r\n                        this.track.weather2 = weather2_id\r\n                        this.track.clouds = clouds_id\r\n                    }\r\n                } }>\r\n                { this.options.map( option =>\r\n                    <option key={ `t${option.time_of_day.id}w${option.weather2.id}c${option.clouds.id}` } value={ `${option.time_of_day.id},${option.weather2.id},${option.clouds.id}` }>\r\n                        { option.time_of_day.label }; { option.weather2.label }; { option.clouds.label } { option.remark ? `(${option.remark})` : '' }\r\n                    </option>\r\n                ) }\r\n                </select>\r\n                <div class='error'>{ this.hasProblem ? `It's known that this time of day may crash the game unless the track is patched.` : '' }</div>\r\n            </div>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-b6ecab62/TrackWeatherSelect.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { store } from '../store'\r\nimport WeatherSelect from '../components/WeatherSelect'\r\nimport WeatherTwoSelect from '../components/WeatherTwoSelect'\r\nimport CloudsSelect from '../components/CloudSelect'\r\nimport SurfaceTypeSelect from '../components/SurfaceTypeSelect'\r\nimport SurfaceAgeSelect from '../components/SurfaceAgeSelect'\r\nimport ServiceSelect from '../components/ServiceSelect'\r\nimport DamageSelect from '../components/DamageSelect'\r\nimport TyreSelect from '../components/TyreSelect'\r\nimport TimeOfDaySelect from '../components/TimeOfDaySelect'\r\nimport ShortcutSelect from '../components/ShortcutSelect'\r\nimport TrackWeatherSelect from '../components/TrackWeatherSelect'\r\nimport { tracks } from '../data/tracks'\r\nimport { trackSettings } from '../data/track-settings'\r\nimport { cars } from '../data/cars'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'Track',\r\n    props: {\r\n        track: Object as () => SelectedTrack,\r\n        index: Number\r\n    },\r\n    data: function() {\r\n        return {\r\n            tracks_data: tracks.byId,\r\n            tracks_settings: trackSettings.byId[this.track.id],\r\n            selected_car_ids: store.cars_physics.selected_car_ids\r\n        }\r\n    },\r\n    computed: {\r\n        track_data: function() {\r\n            return this.tracks_data[this.track.id] as TrackData\r\n        },\r\n        car_id_options: function() {\r\n            return store.cars_physics.selected_car_ids.map( car_id => ( {\r\n                id: car_id,\r\n                value: cars.byId[car_id] as string\r\n            } ) ).sort( ( a, b ) => a.value.toLowerCase() > b.value.toLowerCase() ? 1 : -1 )\r\n        },\r\n        is_last_track: function() {\r\n            return this.index === store.tracks.length - 1\r\n        }\r\n    },\r\n    watch: {\r\n        'track.service_time_mins': function( val ) {\r\n            if ( val <= 0 ) {\r\n                this.track.tyre_replacement_allowed = false\r\n            }\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        return (\r\n            <table><tbody>\r\n                <tr>\r\n                    <td>Original track name</td>\r\n                    <td>{ this.track_data.name }</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Distance</td>\r\n                    <td>{ this.track_data.distance } km</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Overriden track name</td>\r\n                    <td><input v-model={ this.track.name } placeholder='None'/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Surface type</td>\r\n                    <td>\r\n                        <SurfaceTypeSelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Surface age</td>\r\n                    <td>\r\n                        <SurfaceAgeSelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Weather</td>\r\n                    <td>\r\n                        <WeatherSelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n\r\n                {/* <tr>\r\n                    <td>Time of day</td>\r\n                    <td>\r\n                        <TimeOfDaySelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Weather 2</td>\r\n                    <td>\r\n                        <WeatherTwoSelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Clouds</td>\r\n                    <td>\r\n                        <CloudsSelect track={ this.track }/>\r\n                    </td>\r\n                </tr> */}\r\n\r\n                <tr>\r\n                    <td>Weather 2</td>\r\n                    <td>\r\n                        <TrackWeatherSelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n\r\n            { this.is_last_track === false && (\r\n                <tr>\r\n                    <td>Service area after this stage</td>\r\n                    <td>\r\n                        <ServiceSelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n            ) }\r\n\r\n            { this.is_last_track === false && this.track.service_time_mins > 0 && (\r\n                <tr>\r\n                    <td><label for='track.tyre_replacement_allowed'>Allow tyres replacement at service area</label></td>\r\n                    <td><input type='checkbox' id='track.tyre_replacement_allowed' v-model={ this.track.tyre_replacement_allowed } /></td>\r\n                </tr>\r\n            ) }\r\n\r\n\r\n                <tr>\r\n                    <td><label for='track.setup_change_allowed'>Allow setup change</label></td>\r\n                    <td><input type='checkbox' id='track.setup_change_allowed' v-model={ this.track.setup_change_allowed } /></td>\r\n                </tr>\r\n\r\n\r\n                <tr>\r\n                    <td><label for='track.tyre_change_allowed'>Allow tyres type change</label></td>\r\n                    <td><input type='checkbox' id='track.tyre_change_allowed' v-model={ this.track.tyre_change_allowed } /></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Tyres</td>\r\n                    <td>\r\n                        <TyreSelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='track.damage_change_allowed'>Allow damage change</label></td>\r\n                    <td><input type='checkbox' id='track.damage_change_allowed' v-model={ this.track.damage_change_allowed } /></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Damage</td>\r\n                    <td>\r\n                        <DamageSelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Shortcuts checking</td>\r\n                    <td>\r\n                        <ShortcutSelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='track.superally'>Allow superally in this stage</label></td>\r\n                    <td><input type='checkbox' id='track.superally' v-model={ this.track.superally } /></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='track.superally_hold'>Superally hold this stage</label></td>\r\n                    <td><input type='checkbox' id='track.superally_hold' v-model={ this.track.superally_hold } /></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='track.retry_allowed'>Allow to retry this stage</label></td>\r\n                    <td><input type='checkbox' id='track.retry_allowed' v-model={ this.track.retry_allowed } /></td>\r\n                </tr>\r\n            </tbody></table>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-971c421a/Track.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { formatDate, formatTime, arrayCanMoveElement } from '../util'\r\nimport { store } from '../store'\r\nimport { tracks } from '../data/tracks'\r\nimport { trackSettings } from '../data/track-settings'\r\nimport TyreSelect from '../components/TyreSelect'\r\nimport WeatherSelect from '../components/WeatherSelect'\r\nimport DamageSelect from '../components/DamageSelect'\r\nimport SurfaceTypeSelect from '../components/SurfaceTypeSelect'\r\nimport SurfaceAgeSelect from '../components/SurfaceAgeSelect'\r\nimport ServiceSelect from '../components/ServiceSelect'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'Legs',\r\n    data: function() {\r\n        return {\r\n            tracks_data: tracks.byId,\r\n            tracks_settings: trackSettings.byId,\r\n\r\n            tracks: store.tracks,\r\n            legs: store.legs,\r\n\r\n            store\r\n        }\r\n    },\r\n    props: {\r\n        errors: Object as () => {\r\n            [index: string]: string\r\n        }\r\n    },\r\n    computed: {\r\n        maxStageDivider: function() {\r\n            return this.legs.reduce( ( max, leg ) => leg.after_stage_divider > max ? leg.after_stage_divider : max, 0 )\r\n        },\r\n\r\n        canAddLeg: function() {\r\n            return (\r\n                this.tracks.length >= 2 &&\r\n                ( this.legs.length === 0 || this.maxStageDivider < this.tracks.length - 2 )\r\n            )\r\n        },\r\n\r\n        lastLeg: function() {\r\n            return this.legs[this.legs.length - 1]\r\n        }\r\n    },\r\n    methods: {\r\n        arrayCanMoveElement,\r\n\r\n        addLeg: function() {\r\n            if ( this.canAddLeg === false ) {\r\n                return\r\n            }\r\n\r\n            let date = this.store.tournament.from_date\r\n            const last_leg = this.legs[this.legs.length - 1]\r\n            if ( last_leg ) {\r\n                const last_leg_date = Number( new Date( last_leg.date ) )\r\n                const next_day = last_leg_date + 1000 * 60 * 60 * 24\r\n                date = formatDate( new Date( next_day ) )\r\n            }\r\n\r\n            this.legs.push( {\r\n                after_stage_divider: this.legs.length === 0 ? 0 : this.maxStageDivider + 1,\r\n\r\n                date,\r\n                time: '23:59'\r\n            } )\r\n        },\r\n\r\n        canMoveLegUp: function( stage_split: number ) {\r\n            return (\r\n                stage_split > 0 &&\r\n                this.legs.find( leg => leg.after_stage_divider === stage_split - 1 ) === undefined\r\n            )\r\n        },\r\n\r\n        moveLegUp: function( stage_split: number ) {\r\n            if ( this.canMoveLegUp( stage_split ) === false ) {\r\n                return\r\n            }\r\n\r\n            for ( const leg of this.legs ) {\r\n                if ( leg.after_stage_divider === stage_split ) {\r\n                    leg.after_stage_divider--\r\n                    break\r\n                }\r\n            }\r\n        },\r\n\r\n        canMoveLegDown: function( stage_split: number ) {\r\n            return (\r\n                stage_split < this.tracks.length - 2 &&\r\n                this.legs.find( leg => leg.after_stage_divider === stage_split + 1 ) === undefined\r\n            )\r\n        },\r\n\r\n        moveLegDown: function( stage_split: number ) {\r\n            if ( this.canMoveLegDown( stage_split ) === false ) {\r\n                return\r\n            }\r\n\r\n            for ( const leg of this.legs ) {\r\n                if ( leg.after_stage_divider === stage_split ) {\r\n                    leg.after_stage_divider++\r\n                    break\r\n                }\r\n            }\r\n        },\r\n\r\n        removeLeg: function( stage_split: number ) {\r\n            for ( let i = 0 ; i < this.legs.length ; i++ ) {\r\n                if ( this.legs[i].after_stage_divider === stage_split ) {\r\n                    this.legs.splice( i, 1 )\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        return (\r\n            <div>\r\n                <table>\r\n                    <tbody>\r\n                    { this.tracks.map( ( track, index ) => ( [ (\r\n                        <tr key={ index }>\r\n                            <td style='vertical-align: top; min-width: 40px;'>\r\n                                SS { index + 1 }\r\n                            </td>\r\n                            <td class='schedule-legs-inputs' style='vertical-align: top;'>\r\n                                <div>\r\n                                    <input v-model={ track.name } placeholder={ this.tracks_data[track.id].name }/>\r\n                                    <WeatherSelect track={ track }/>\r\n                                    <DamageSelect track={ track }/>\r\n                                </div>\r\n                                <div>\r\n                                    <TyreSelect track={ track }/>\r\n                                    <SurfaceTypeSelect track={ track } tinyProblemDisplay={ true }/>\r\n                                    <SurfaceAgeSelect track={ track } tinyProblemDisplay={ true }/>\r\n                                    <ServiceSelect track={ track }/>\r\n                                </div>\r\n                                <div>\r\n                                    <input id={`tcbox${index}`}  type='checkbox' v-model={ track.tyre_change_allowed }/>    <label for={`tcbox${index}`} >Tyre change</label>\r\n                                    <input id={`scbox${index}`}  type='checkbox' v-model={ track.setup_change_allowed }/>   <label for={`scbox${index}`} >Setup change</label>\r\n                                    <input id={`srbox${index}`}  type='checkbox' v-model={ track.superally }/>              <label for={`srbox${index}`} >Superally</label>\r\n                                    <input id={`srhbox${index}`} type='checkbox' v-model={ track.superally_hold }/>         <label for={`srhbox${index}`}>Superally hold</label>\r\n                                </div>\r\n                            </td>\r\n                            <td style='width: 50px;'>\r\n                                <button\r\n                                    title='Move track up'\r\n                                    style='width: 100%;'\r\n                                    disabled={ this.arrayCanMoveElement( this.tracks, index, -1 ) === false }\r\n                                    onClick={ () => store.trackMoveUp( index ) }\r\n                                >\r\n                                    ^\r\n                                </button>\r\n                                <button\r\n                                    title='Move track down'\r\n                                    style='width: 100%;'\r\n                                    disabled={ arrayCanMoveElement( this.tracks, index, +1 ) === false }\r\n                                    onClick={ () => store.trackMoveDown( index ) }\r\n                                >\r\n                                    v\r\n                                </button>\r\n                                <button title='Remove track' style='width: 100%;' onClick={ () => store.trackRemove( index ) }>X</button>\r\n                            </td>\r\n                        </tr> ),\r\n                    track.service_time_mins > 0 && (\r\n                        <tr>\r\n                            <th colspan={ 3 }>Service area ({ track.service_time_mins } min.) / <input type='checkbox' v-model={ track.tyre_replacement_allowed }/> Tyre replacement</th>\r\n                        </tr>\r\n                    ),\r\n                    track.superally_hold && (\r\n                        <tr>\r\n                            <th colspan={ 3 }>Superally</th>\r\n                        </tr>\r\n                    ),\r\n                    this.legs.map( ( leg, leg_index ) => index !== leg.after_stage_divider ? null : (\r\n                        <tr key={ `${index} ${leg}leg` }>\r\n                            <th colspan={ 3 } style='text-align: center' class='leg_revamped'>\r\n                                <button\r\n                                    title='Move leg up'\r\n                                    onClick={ () => this.moveLegUp( leg.after_stage_divider ) }\r\n                                    disabled={ this.canMoveLegUp( leg.after_stage_divider ) === false }\r\n                                >\r\n                                    ^^^\r\n                                </button>\r\n                                Leg { leg_index + 1 }\r\n                                <input type='date' v-model={ leg.date }/>\r\n                                <input type='time' v-model={ leg.time }/>\r\n                                <button title='Remove leg' onClick={ () => this.removeLeg( leg.after_stage_divider ) }>Remove</button>\r\n                                Leg { leg_index + 2 }\r\n                                <button\r\n                                    title='Move leg down'\r\n                                    onClick={ () => this.moveLegDown( leg.after_stage_divider ) }\r\n                                    disabled={ this.canMoveLegDown( leg.after_stage_divider ) === false }\r\n                                >\r\n                                    vvv\r\n                                </button>\r\n                                <div>{ this.errors[leg.after_stage_divider] }</div>\r\n                            </th>\r\n                        </tr>\r\n                    ) )\r\n                    ] ) ) }\r\n                    </tbody>\r\n                </table>\r\n\r\n                <table style='margin: 0 auto;'>\r\n                    <thead><tr>\r\n                        <td>Leg</td>\r\n                        <td>Stage</td>\r\n                        <td>Date from</td>\r\n                        <td>Date to</td>\r\n                    </tr></thead>\r\n                { this.legs.length > 0 &&\r\n                    <tbody>\r\n                    { this.legs.map( ( leg, leg_index ) => (\r\n                        <tr key={ `${leg_index} leg`}>\r\n                            <td>{ leg_index + 1 }</td>\r\n\r\n                        { leg_index === 0 ?\r\n                            <td>1 - { leg.after_stage_divider + 1 }</td>\r\n                        : leg_index === this.legs.length - 1 ?\r\n                            <td>{ this.legs[leg_index - 1].after_stage_divider + 2 } - { leg.after_stage_divider + 1 }</td>\r\n                        :   <td>{ this.legs[leg_index - 1].after_stage_divider + 2 } - { leg.after_stage_divider + 1 }</td>\r\n                        }\r\n\r\n                        { leg_index === 0 ?\r\n                            <td>{ store.tournament.from_date } { store.tournament.from_time }</td>\r\n                        :   <td>{ this.legs[leg_index - 1].date } { this.legs[leg_index - 1].time }</td>\r\n                        }\r\n\r\n                            <td>{ leg.date } { leg.time }</td>\r\n                        </tr>\r\n                    ) ) }\r\n                        <tr>\r\n                            <td>{ this.legs.length + 1 }</td>\r\n\r\n                            <td>{ this.lastLeg.after_stage_divider + 2 } - { this.store.tracks.length }</td>\r\n\r\n                            <td>{ this.lastLeg.date } { this.lastLeg.time }</td>\r\n\r\n                            <td>{ store.tournament.to_date } { store.tournament.to_time }</td>\r\n                        </tr>\r\n                    </tbody>\r\n                }\r\n                { this.legs.length === 0 &&\r\n                    <tbody style='text-align: center;'>\r\n                        <td colspan={ 4 }>No legs created</td>\r\n                    </tbody>\r\n                }\r\n                    <tfoot><tr><td colspan={ 4 } style='text-align: center;'>\r\n                        <button onClick={ this.addLeg } disabled={ this.canAddLeg === false }>Add leg</button>\r\n                    </td></tr></tfoot>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-7097f16a/ScheduleLegs.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { store } from '../store'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'Presets',\r\n\r\n    data: function() {\r\n        return {\r\n            store,\r\n\r\n            saveNames: ( new Array( 10 ) ).fill( undefined )\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        save: function( slot: number, name: string | null ) {\r\n            if ( !name || !name.trim() ) {\r\n                return\r\n            }\r\n            this.saveNames = this.saveNames.map( ( value, index ) => index !== slot ? value : name )\r\n            localStorage.setItem( `save${slot}`, JSON.stringify( this.store ) )\r\n        },\r\n        load: function( slot: number ) {\r\n            const data: any = localStorage.getItem( `save${slot}` )\r\n            if ( !data ) {\r\n                return\r\n            }\r\n\r\n            Object.assign( this.store, JSON.parse( data ) )\r\n            this.store.tracks.forEach( track => {\r\n                this.store.trackFetchInfo( track.id )\r\n            } )\r\n        },\r\n    },\r\n\r\n    mounted: function() {\r\n        const items = localStorage.getItem( 'save_names' )\r\n        if ( items ) {\r\n            this.saveNames = JSON.parse( items )\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        saveNames: function() {\r\n            localStorage.setItem( 'save_names', JSON.stringify( this.saveNames ) )\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        output: function() {\r\n            return {\r\n                tournament: this.store.tournamentPostOutput(),\r\n\r\n                cars_physics: this.store.carsPhysicsPostOutput(),\r\n\r\n                // TODO: account for last page\r\n                tracks: this.store.tracks.map( ( track, index ) => store.trackPostOutput( index ) ),\r\n\r\n                legs: this.store.legsPostOutput()\r\n            }\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        return (\r\n            <div>\r\n                <div>{ 'Save slot: ' }\r\n                { ( new Array( 10 ) ).fill( 0 ).map( ( nothing, index ) =>\r\n                    <button onClick={ () => this.save( index, prompt( 'Enter the slot save name' ) ) }>{ index + 1 }</button>\r\n                ) }\r\n                </div>\r\n                <div>{ 'Load slot: ' }\r\n                { ( this.saveNames.map( ( saveName, index ) =>\r\n                    <button onClick={ () => this.load( index ) } disabled={ Boolean( saveName ) === false }>{ index + 1 } { saveName ? `- ${saveName}` : '' }</button>\r\n                ) ) }\r\n                </div>\r\n                <div style='margin: 16px 0;'>\r\n                    <button onClick={ () => {\r\n                        if ( confirm( 'Are you sure you want to clear local storage?' ) ) {\r\n                            window.localStorage.clear()\r\n                            window.location.reload()\r\n                        }\r\n                    } }>\r\n                        Clear local storage\r\n                    </button><br/>\r\n                    The track and car info are cached in browser's local storage.<br/>\r\n                    This cache expires within a day, but can be invalidated by pressing <strong>Clear local storage</strong> button.<br/>\r\n                    Clearing storage should be done if CZ car/track list has changed,<br/>\r\n                    but you don't see the changes while using this userscript.<br/>\r\n                    <strong>This will refresh current page, which may result in loss of data.</strong>\r\n                </div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <td>JSON Data</td>\r\n                            <td>Output data</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td style='vertical-align: top;'><pre>{ JSON.stringify( this.store, null, 4 ).trim() }</pre></td>\r\n                            <td style='vertical-align: top;'><pre>{ JSON.stringify( this.output, null, 4 ).trim() }</pre></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-14e80f5c/Presets.tsx\" });","import Vue from 'vue'\r\nimport Tournament from './containers/Tournament'\r\nimport Cars from './containers/Cars'\r\nimport TrackList from './containers/TrackList'\r\nimport Track from './containers/Track'\r\nimport ScheduleLegs from './containers/ScheduleLegs'\r\nimport Presets from './containers/Presets'\r\nimport { store } from './store'\r\nimport { tracks } from './data/tracks'\r\nimport { constants } from './data/constants'\r\nimport { trackSettings } from './data/track-settings'\r\nimport { trackWeather } from './data/track-weather'\r\nimport { cars } from './data/cars'\r\nimport { licenses } from './data/licenses'\r\nimport { post, urlEncode, getElementByXpath, waitUntil, objectWithoutNulls } from './util'\r\nimport './app.scss'\r\n\r\nenum Page {\r\n    Tournament = 'tournament',\r\n    Cars = 'cars',\r\n    TrackList = 'track_list',\r\n    Track = 'track',\r\n    ScheduleLegs = 'schedule_legs',\r\n    Presets = 'presets'\r\n}\r\n\r\nexport default Vue.extend( {\r\n    name: 'App',\r\n    data: function() {\r\n        return {\r\n            current_page: Page.Tournament,\r\n            track_index: 0,\r\n\r\n            store,\r\n\r\n            hidden: '',\r\n\r\n            current_request_operation: '',\r\n\r\n            serverErrors: [] as Array<{ page: string, error: string}>\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        tracks_data: function() {\r\n            return tracks.byId\r\n        },\r\n\r\n        tracks_settings: function() {\r\n            return trackSettings\r\n        },\r\n\r\n        tracks_weather: function() {\r\n            return trackWeather\r\n        },\r\n\r\n        from_date: function() {\r\n            const { from_date, from_time } = this.store.tournament\r\n            return (\r\n                !from_date && !from_time ? new Date() :\r\n\r\n                // HACK: Time is set as late as possible to please\r\n                // the validation instead of omitting time from 'now'\r\n                !from_time ? new Date( `${from_date}T23:59:00+0100` ) :\r\n\r\n                new Date( `${from_date}T${from_time}+0100` )\r\n            )\r\n        },\r\n\r\n        to_date: function() {\r\n            const { to_date, to_time } = this.store.tournament\r\n            return new Date( `${to_date}T${to_time}+0100` )\r\n        },\r\n\r\n        cars_errors: function() {\r\n            const { selected_car_ids, car_physics_id, track_physics_id } = this.store.cars_physics\r\n            return {\r\n                selected_cars: selected_car_ids.length === 0 ? 'Must select atleast one car' : '',\r\n                car_physics: car_physics_id.length === 0 ? 'Must select car physics' : '',\r\n                track_physics: track_physics_id.length === 0 ? 'Must select track physics' : ''\r\n            }\r\n        },\r\n\r\n        tracks_errors: function() {\r\n            const shakedown_forbidden_tracks = this.store.tracks\r\n                .map( ( track, index ) => {\r\n                    const { name, shakedown_allowed } = this.tracks_data[track.id]\r\n                    return { track_name: name, shakedown_allowed, index }\r\n                } )\r\n                .filter( group => group.shakedown_allowed === false )\r\n                .map( group => `SS ${group.index + 1} - ${group.track_name}` )\r\n                .join( ', ' )\r\n\r\n            return {\r\n                selected_tracks: this.store.tracks.length === 0 ? 'Must select atleast one track' : '',\r\n                offline_tracks: this.store.tournament.offline && shakedown_forbidden_tracks.length > 0 ? `${shakedown_forbidden_tracks} cannot be used in an offline tournament` : ''\r\n            }\r\n        },\r\n\r\n        tournament_errors: function() {\r\n            const now = new Date()\r\n            const oneDayAfter = new Date( Number( this.from_date ) + 1000 * 60 * 60 * 24 )\r\n            const sevenDaysAfter = new Date( Number( this.from_date ) + 1000 * 60 * 60 * 24 * 7 )\r\n\r\n            const registration_deadline_in_hours = Number( this.store.tournament.registration_deadline )\r\n\r\n            return {\r\n                name: this.store.tournament.name.trim().length === 0 ? 'Enter the tournament name' : '',\r\n\r\n                from_datetime: (\r\n                    this.from_date < now ? 'This date cannot be set earlier than now' :\r\n                    this.from_date >= this.to_date ? `This date cannot be set later than 'Valid to' date` :\r\n                    ''\r\n                ),\r\n\r\n                to_datetime: (\r\n                    this.to_date < oneDayAfter ? `This date must be set atleast 24 hours after the tournament beginning` :\r\n                    this.to_date > sevenDaysAfter ? 'This date cannot be set to end after more than 7 days' :\r\n                    this.to_date <= this.from_date ? `This date cannot be set earlier than 'Valid from' date` :\r\n                    ''\r\n                ),\r\n\r\n                registration_deadline: (\r\n                    this.store.tournament.registration_deadline.trim().length === 0 ? '' :\r\n                    isNaN( registration_deadline_in_hours ) ? 'Must be a number' :\r\n                    registration_deadline_in_hours < 0 ? 'Cannot be negative' :\r\n                    Number.isInteger( registration_deadline_in_hours ) === false ? 'Must be integer' :\r\n                    ''\r\n                )\r\n            }\r\n        },\r\n\r\n        legs_errors: function() {\r\n            return this.store.legs.sort( ( a, b ) => a.after_stage_divider > b.after_stage_divider ? 1 : -1 ).reduce( ( prev, leg, index, legs ) => {\r\n                let error = ''\r\n\r\n                const date = new Date( `${leg.date}T${leg.time}+0100` )\r\n\r\n                if ( !leg.date ) {\r\n                    error = 'Correct date must be set'\r\n                }\r\n\r\n                if ( !leg.time ) {\r\n                    error = 'Correct time must be set'\r\n                }\r\n\r\n                const previous_leg = legs[index - 1]\r\n\r\n                if ( date <= this.from_date ) {\r\n                    error = `This date must be set after the tournament start date: ${this.from_date.toLocaleString()}`\r\n                } else if ( date >= this.to_date ) {\r\n                    error = `This date must be set before the tournament end date: ${this.to_date.toLocaleString()}`\r\n                }\r\n\r\n                if ( previous_leg ) {\r\n                    const previous_leg_date = new Date( `${previous_leg.date}T${previous_leg.time}+0100` )\r\n                    if ( date <= previous_leg_date ) {\r\n                        error = 'This date must be set after the previous leg split date'\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    ...prev,\r\n                    [leg.after_stage_divider]: error\r\n                }\r\n            }, {} )\r\n        },\r\n\r\n        notifications: function() {\r\n            return [\r\n                ...Object.keys( this.tracks_settings.fetching )\r\n                    .map( key => this.tracks_settings.fetching[key] ? `Fetching settings for ${tracks.byId[key].name}` : '' ),\r\n                ...Object.keys( this.tracks_weather.fetching )\r\n                    .map( key => this.tracks_settings.fetching[key] ? `Fetching weather info for ${tracks.byId[key].name}` : '' ),\r\n            ].filter( notification => notification.length > 0 )\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        hasErrors: function( errors: any ) {\r\n            return Object.values( errors ).find( value => Boolean( value ) === true )\r\n        },\r\n\r\n        submit: async function() {\r\n            const has_legs = this.store.legs.length > 0\r\n            this.serverErrors = []\r\n\r\n            const generalErrorXPath = '/html/body/table/tbody/tr/td/table[3]/tbody/tr[1]/td[2]/span'\r\n            const trackErrorXPath = '/html/body/table/tbody/tr/td/table[3]/tbody/tr[1]/td[2]/center/span'\r\n\r\n            let res: Response\r\n\r\n            try {\r\n                const tournament_data = this.store.tournamentPostOutput()\r\n                this.current_request_operation = `Sending tournament info`\r\n                res = await post( tournament_data, { flow: '0' } )\r\n                this.checkAndAppendServerErrors( { page: 'Tournament', errorsXPath: generalErrorXPath, res } )\r\n\r\n                const cars_physics_data = this.store.carsPhysicsPostOutput()\r\n                this.current_request_operation = `Sending Cars / Physics info`\r\n                res = await post( cars_physics_data, { flow: '1' } )\r\n                this.checkAndAppendServerErrors( { page: 'Cars / Physics', errorsXPath: generalErrorXPath, res } )\r\n\r\n                for ( let i = 0 ; i < this.store.tracks.length ; i++ ) {\r\n                    const track_data = this.store.trackPostOutput( i )\r\n\r\n                    this.current_request_operation = `Sending SS ${i + 1 } info`\r\n                    res = await post( track_data, { flow: '2', curstagepos: i.toString() } )\r\n                    this.checkAndAppendServerErrors( { page: `SS ${i + 1}`, errorsXPath: trackErrorXPath, res } )\r\n                }\r\n\r\n                const leg_data = this.store.legsPostOutput()\r\n                if ( has_legs ) {\r\n                    this.current_request_operation = `Sending legs info`\r\n                    res = await post( leg_data, { flow: '3', page_selector: ( 2 + this.store.tracks.length ).toString() } )\r\n                    this.checkAndAppendServerErrors( { page: 'Legs', errorsXPath: generalErrorXPath, res } )\r\n                }\r\n\r\n                if ( this.serverErrors.length === 0 ) {\r\n                    this.current_request_operation = `Submitting tournament`\r\n\r\n                    // NOTE: apparently if you have legs - you should submit the tournament from the leg page\r\n                    // Otherwise the main tournament settings page may redirect you to leg page instead of submitting\r\n                    res = await post( has_legs ? leg_data : tournament_data, {\r\n                        flow: has_legs ? '3' : '0',\r\n                        save_tournament: true,\r\n                        save_from_leg_page: has_legs\r\n                    } )\r\n                    const html = await res.text()\r\n                    const doc = ( new DOMParser() ).parseFromString( html, 'text/html' )\r\n\r\n                    const edit_tournament_node = getElementByXpath( doc, '/html/body/table/tbody/tr/td/table[3]/tbody/tr[1]/td[2]/center[3]/a' )\r\n                    if ( edit_tournament_node ) {\r\n                        const href = edit_tournament_node.getAttribute( 'href' ) || ''\r\n                        const tournament_id_match = href.match( /torid=([^&]+)/ )\r\n                        if ( tournament_id_match ) {\r\n                            const tournament_id = tournament_id_match[1]\r\n                            window.location.replace( `index.php?act=tourmntsview&torid=${tournament_id}` )\r\n                        }\r\n                    }\r\n                }\r\n            } catch ( err ) {\r\n                this.serverErrors = [ { page: 'Error', error: err.message } ]\r\n                this.current_request_operation = ''\r\n            }\r\n        },\r\n\r\n        checkAndAppendServerErrors: async function( params: { res: Response, errorsXPath: string, page: string } ) {\r\n            const { res, errorsXPath, page } = params\r\n            const doc = ( new DOMParser() ).parseFromString( await res.text(), 'text/html' )\r\n\r\n            const errors = getElementByXpath( doc, errorsXPath )\r\n            if ( errors ) {\r\n                let error = ''\r\n                for ( const errorNode of errors.childNodes ) {\r\n                    if ( errorNode.nodeName === 'br' ) {\r\n                        if ( error ) {\r\n                            this.serverErrors.push( { page, error } )\r\n                        }\r\n                        error = ''\r\n                        continue\r\n                    }\r\n\r\n                    error += errorNode.textContent\r\n                }\r\n\r\n                if ( error ) {\r\n                    this.serverErrors.push( { page, error } )\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        'store.tracks': function( newTracks: SelectedTrack[] ) {\r\n            if ( newTracks.length < 2 ) {\r\n                store.legs.splice( 0, store.legs.length )\r\n                return\r\n            }\r\n\r\n            for ( let i = store.legs.length - 1 ; i >= 0 ; i-- ) {\r\n                const leg = store.legs[i]\r\n                if ( leg.after_stage_divider >= newTracks.length - 1 ) {\r\n                    store.legs.splice( i, 1 )\r\n                }\r\n            }\r\n        },\r\n\r\n        'store.cars_physics.car_physics_id': function( newPhysicsId: string ) {\r\n            cars.fetchCars( newPhysicsId )\r\n        },\r\n\r\n        'hidden': {\r\n            immediate: true,\r\n            handler: function( newValue: boolean ) {\r\n                const tournamentForm = document.getElementById( 'tournament' )\r\n                if ( !tournamentForm ) {\r\n                    return\r\n                }\r\n\r\n                tournamentForm.style.display = newValue ? '' : 'none'\r\n            }\r\n        }\r\n    },\r\n\r\n    mounted: async function() {\r\n        constants.fetchTournamentConstants()\r\n\r\n        this.current_request_operation = 'Fetching track information'\r\n        await tracks.fetchTracks()\r\n\r\n        this.current_request_operation = 'Fetching licenses'\r\n        await licenses.fetchLicenses( constants.carPhysics[0].id )\r\n\r\n        const url_search_params = new URLSearchParams( window.location.search )\r\n        const tournament_id = url_search_params.get( 'torid' )\r\n\r\n        if ( tournament_id ) {\r\n            try {\r\n                const { track_ids, cars_physics: car_physics_id, has_legs } = this.store.tournamentFromHTML( document.getElementsByTagName( 'html' )[0].innerHTML )\r\n\r\n                this.current_request_operation = 'Fetching Cars / Physics'\r\n                await cars.fetchCars( car_physics_id )\r\n                this.store.cars_physics.car_physics_id = car_physics_id\r\n\r\n                this.current_request_operation = 'Fetching track information'\r\n                for ( const track_id of track_ids ) {\r\n                    await store.trackFetchInfo( track_id )\r\n                }\r\n\r\n                this.current_request_operation = 'Getting ready to fetch tournament info'\r\n                await fetch( `/index.php?act=tourmntscre4A&new_tour=0&torid=${tournament_id}` )\r\n\r\n                let res: Response\r\n\r\n                const tournament_data: Partial<TournamentPOSTOutput> = objectWithoutNulls( {\r\n                    ...this.store.tournamentPostOutput(),\r\n                    has_legs: has_legs ? 'on' : null,\r\n                    tourstages: track_ids.join( ';' ).concat( ';' )\r\n                } )\r\n                this.current_request_operation = `Fetching tournament's Cars / Physics`\r\n                res = await post( tournament_data, { page_selector: '1' } )\r\n                this.store.carsPhysicsLicensesFromHTML( await res.text() )\r\n\r\n                for ( let i = 0 ; i < track_ids.length ; i++ ) {\r\n                    const track_id = track_ids[i]\r\n\r\n                    this.current_request_operation = `Fetching SS ${i + 1}`\r\n                    res = await post( tournament_data, { page_selector: ( 2 + i ).toString() } )\r\n                    const track = this.store.trackFromHTML( track_id, trackSettings.byId[track_id], await res.text() )\r\n                    if ( track ) {\r\n                        this.store.tracks.push( track )\r\n                    }\r\n                }\r\n\r\n                if ( has_legs ) {\r\n                    this.current_request_operation = `Fetching legs info`\r\n                    res = await post( tournament_data, { page_selector: ( 2 + this.store.tracks.length ).toString() } )\r\n                    this.store.legsFromHTML( await res.text() )\r\n                }\r\n            } catch ( err ) {\r\n                this.serverErrors = [ { page: 'Error', error: err.message } ]\r\n            }\r\n        }\r\n\r\n        this.current_request_operation = ''\r\n    },\r\n\r\n    render: function( h ) {\r\n        return (\r\n            <div id='tournament_revamped'>\r\n                {/* <div>\r\n                    <input id='tournament_hidden_radio_on' type='radio' name='tournament_hidden_radio' value='on' v-model={ this.hidden }/> <label for='tournament_hidden_radio_on'>Original</label>\r\n                    <input id='tournament_hidden_radio_off' type='radio' name='tournament_hidden_radio' value='' v-model={ this.hidden }/> <label for='tournament_hidden_radio_off'>Revamped</label>\r\n                </div> */}\r\n                <table style={ this.hidden ? 'display: none;' : ''}><tbody>\r\n                    <tr>\r\n                        <td class='nav-buttons' style='width: 25%;'>\r\n                            <button onClick={ () => { this.current_page = Page.Tournament } } class={{ active: this.current_page === Page.Tournament, error: this.hasErrors( this.tournament_errors ) }}>Tournament</button>\r\n                            <button onClick={ () => { this.current_page = Page.Cars } } disabled={ !constants.fetched } class={{ active: this.current_page === Page.Cars, error: this.hasErrors( this.cars_errors ) }}>Cars / Physics</button>\r\n                            <button onClick={ () => { this.current_page = Page.TrackList } } disabled={ tracks.fetching } class={{ active: this.current_page === Page.TrackList, error: this.hasErrors( this.tracks_errors ) }} style='margin-bottom: 8px'>Tracks</button>\r\n\r\n                            { this.store.tracks.map( ( track, index ) => (\r\n                                <button key={`track${index}`} disabled={ !this.tracks_settings.byId[track.id] || !this.tracks_weather.byId[track.id] } onClick={ () => { this.current_page = Page.Track; this.track_index = index } }\r\n                                    class={{ active: this.current_page === Page.Track && this.track_index === index }}\r\n                                >\r\n                                    SS { index + 1 } - { this.tracks_data[track.id].name } { track.name ? `(${track.name})` : '' }\r\n                                </button>\r\n                            ) ) }\r\n\r\n                            <button onClick={ () => { this.current_page = Page.ScheduleLegs } } class={{ active: this.current_page === Page.ScheduleLegs, error: this.hasErrors( this.legs_errors ) }} style='margin-top: 8px'>Schedule and legs</button>\r\n                            <button onClick={ () => { this.current_page = Page.Presets } } class={{ active: this.current_page === Page.Presets }}>Presets / Misc.</button>\r\n\r\n                        { this.hasErrors( { ...this.tournament_errors, ...this.cars_errors, ...this.tracks_errors, ...this.legs_errors } ) ?\r\n                            <button disabled={ true } style='margin-top: 8px'>Can't send data due to errors</button>\r\n                            :\r\n                            <button disabled={ Boolean( this.current_request_operation ) } style='margin-top: 8px' onClick={ () => this.submit() }>Save tournament</button>\r\n                        }\r\n                        { this.serverErrors.length > 0 &&\r\n                            <div style='margin-top: 8px'>\r\n                                Failed to create tournament\r\n                            { this.serverErrors.map( ( error, index ) =>\r\n                                <div key={`serverError${index}`} class='error'>{ error.page }: { error.error }</div>\r\n                            ) }\r\n                            </div>\r\n                        }\r\n                        <div style='margin-top: 8px'>\r\n                        { this.notifications.map( ( notification, index ) =>\r\n                            <div key={`notification${index}`}>{ notification }</div>\r\n                        ) }\r\n                        </div>\r\n                        <div style='margin-top: 8px'>\r\n                            <div>ver 1a</div>\r\n                            <div>\r\n                                <a href='https://github.com/suXinjke/RBRCZTourneyCreatorRevamped'>GitHub </a> |\r\n                                <a href='https://twitter.com/suxinjke'> Twitter </a> |\r\n                                <a href='http://rbr.onlineracing.cz/index.php?act=ustats&u=66612'> RBR CZ</a>\r\n                            </div>\r\n                        </div>\r\n                        </td>\r\n                        <td style='vertical-align: top;'>\r\n                        { this.current_request_operation ? <div>{ this.current_request_operation }</div> :\r\n                          this.current_page === Page.Tournament ? <Tournament errors={ this.tournament_errors }/> :\r\n                          this.current_page === Page.Cars ? <Cars errors={ this.cars_errors }/> :\r\n                          this.current_page === Page.TrackList ? <TrackList errors={ this.tracks_errors }/> :\r\n                          this.current_page === Page.Track ? <Track track={ this.store.tracks[this.track_index] } index={ this.track_index } /> :\r\n                          this.current_page === Page.ScheduleLegs ? <ScheduleLegs errors={ this.legs_errors }/> :\r\n                          this.current_page === Page.Presets ? <Presets /> :\r\n                          null\r\n                        }\r\n                        </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-bacec536/App.tsx\" });","import Vue from 'vue'\r\nimport App from './App'\r\n\r\n__webpack_public_path__ = 'http://127.0.0.1:8080/rbrcz_prototype/'\r\n\r\nVue.config.productionTip = false\r\n\r\nconst tournamentForm = document.getElementById( 'tournament' )\r\n\r\nif ( tournamentForm ) {\r\n\r\n    const parent = tournamentForm.parentElement\r\n\r\n    if ( parent ) {\r\n        const appContainer = document.createElement( 'div' )\r\n        appContainer.id = 'tournament_revamped'\r\n        parent.prepend( appContainer )\r\n\r\n        new Vue( {\r\n            render: h => h( App ),\r\n        } ).$mount( '#tournament_revamped' )\r\n    }\r\n}\r\n"],"sourceRoot":""}