{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util.ts","webpack:///./src/data/tracks.ts","webpack:///./src/data/track-settings.ts","webpack:///./src/data/track-weather.ts","webpack:///./src/data/constants.ts","webpack:///./src/data/cars.ts","webpack:///./src/store.ts","webpack:///./src/containers/Tournament.tsx","webpack:///./src/containers/Cars.tsx","webpack:///./src/containers/TrackList.tsx","webpack:///./src/components/WeatherSelect.tsx","webpack:///./src/components/SurfaceTypeSelect.tsx","webpack:///./src/components/SurfaceAgeSelect.tsx","webpack:///./src/components/ServiceSelect.tsx","webpack:///./src/components/DamageSelect.tsx","webpack:///./src/components/TyreSelect.tsx","webpack:///./src/components/ShortcutSelect.tsx","webpack:///./src/components/TrackWeatherSelect.tsx","webpack:///./src/containers/Track.tsx","webpack:///./src/containers/ScheduleLegs.tsx","webpack:///./src/containers/Presets.tsx","webpack:///./src/App.tsx","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","formatDate","date","concat","getFullYear","getMonth","getDate","stringDateToCZDate","split","reverse","map","number_string","Number","toString","join","czDateToStringDate","str","index","padStart","formatTime","getHours","getMinutes","arrayCanMoveElement","array","offset","arrayMoveElement","new_index","k","undefined","objectWithoutNulls","obj","keys_default","reduce","prev","id","objectSpread","getElementByXpath","document","path","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","extractSelectOptions","node","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","get_iterator_default","children","next","done","child_node","getAttribute","label","textContent","err","return","urlEncode","is_array_default","val","encodeURIComponent","post","next_page","arguments","_next_page$flow","flow","_next_page$curstagepo","curstagepos","_next_page$page_selec","page_selector","_next_page$save_tourn","save_tournament","_next_page$save_from_","save_from_leg_page","save_params","submit_page","submit_save_tour","submit_page_go","fetch","method","headers","Content-Type","body","waitUntil","func","checkInMsecs","promise_default","a","res","intervalFunc","setInterval","datePacks","now","Date","nextHalfAnHour","nextDay","nextThreeDays","cacheStore","age_secs","localStorage","setItem","time_msecs","cacheGet","item","getItem","expiration_date","tracks","vue_runtime_esm","observable","cacheChecked","byId","fetching","fetchTracks","_fetchTracks","asyncToGenerator","regeneratorRuntime","mark","_callee","cachedTracks","_JSON$parse","text","doc","track_rows","row","track","wrap","_context","this","JSON","parse","set","abrupt","sent","DOMParser","parseFromString","childNodes","country","surface","distance","replace","shakedown_allowed","includes","toLowerCase","trim","restricted","Boolean","nextSibling","stringify_default","stop","trackSettings","shouldBeThrottled","values_default","filter","fetchTrackSettings","_fetchTrackSettings","track_id","cachedTrackSettings","dummy_post","response","html","tyres_select","tyres","tyres_recommended","settings","_this","store","tournamentDummyPostOutput","tourstages","t0","finish","surface_type","surface_age","weather","weather2","clouds","time_of_day","damage","shortcut_check","_x","trackWeather","fetchTrackWeather","_fetchTrackWeather","cachedTrackWeather","weatherTable","clickFunctionBody","weather_pack","isOriginalWeatherPack","remark","_ref","_ref2","time_of_day_id","weather2_id","clouds_id","match","slicedToArray","constants","superally","carPhysics","fetched","fetchTournamentConstants","superally_node","car_physics_node","cars","carPacks","trackPhysics","fetchCars","_fetchCars","car_physics_id","cachedCars","car_pack_node","car_pack_options","car_regexp","matches","_loop","physics_node","physics","PhysicsModId","forEach","car_pack_option","exec","car_id","car_name","car_pack_ids","car_pack_id","mod","storeDatePack","defaultTournament","description","online","offline","from_date","from_time","to_date","to_time","cant_resume","only_one_car","dont_show_splits","dont_show_temporary_results_in_rbr","dont_show_temporary_results_in_web","save_replays","require_stage_comments","test_tournament","password","registration_deadline","superally_penalty","tournament","cars_physics","track_physics_id","selected_car_ids","legs","trackFetchInfo","all","trackAdd","_trackAdd","track_ids","previousTrack","weatherSettings","find","weather_change_allowed","service_time_mins","setup_change_allowed","tyre_replacement_allowed","tyre_change_allowed","damage_change_allowed","superally_hold","retry_allowed","trackRemove","track_index","trackFixIncorrectService","trackMove","moved_successfully","trackMoveUp","trackMoveDown","tournamentFromHTML","tournament_form","getElementById","form_data","FormData","tour_to_date","tour_from_date","has_legs","tournamentPostOutput","tour_name","tour_descr","offlinet","tour_from_time","tour_to_time","cantresrace","onecaronly","nosplits","notempres","notempresweb","savereplays","getcomments","testrun","ispassword","tour_password","need_enroll","enroll_close","SRallyPenaltySel","additionalParams","_datePacks","carsPhysicsFromHTML","mods","getAll","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","mod_id","option","_iterator2","carsPhysicsPostOutput","LicSel","ModsSel","toConsumableArray","trackFromHTML","trackPostOutput","isLast","renamestage","stage_rename","CarSel","SurfSel","SurfAgeSel","TexturesPackSel","WeatherPackSel","canchangeweather","WeatherSel","TimeOfDaySel","Weather2Sel","CloudsSel","ServiceSel","canrenewtyres","canchangetyres","TyresSel","canchangedamage","DamageSel","CutcheckerSel","leg_pos","leg","leg_index","after_stage_divider","allowsuperally","superallychpoint","canrepeatstage","canchangesetup","lastTrack","legsFromHTML","table","original_legs","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","is_leg_row","isNaN","stages_string","stages_matches","stages_to","date_to","time_to","is_last","time","legsPostOutput","_this2","date_from","time_from","fields","Tournament","lib","computed","props","errors","render","h","attrs","for","helper_default","on","input","$event","target","composing","domProps","directives","modifiers","class","style","change","$$a","$$el","$$c","checked","$$v","$$i","_i","type","href","from_datetime","to_datetime","placeholder","$$selectedVal","Array","selected","_value","multiple","Cars","car_pack","available_cars_selected_ids","selected_cars_selected_ids","car_physics_select","track_physics_select","car_packs_select","carPack","available_cars","carIdsForSelect","selected_cars","methods","addToSelected","car_ids","indexOf","addSelected","addAll","car","removeSelected","removeAll","sort","b","watch","cars_physics.car_physics_id","disabled","title","dblclick","click","TrackList","selected_track_groups","available_tracks_filter","available_tracks_selected_ids","tracks_selected_indexes","tracks_data","available_track_groups","country_array","surface_array","track_data","available_tracks_select","total_distance","sum","toFixed","isLoading","moveSelected","sorted_indexes","selected_index","addRandom","random_track_id","Math","floor","random","_this3","group","selected_tracks","WeatherSelect","SurfaceTypeSelect","SurfaceAgeSelect","ServiceSelect","DamageSelect","TyreSelect","ShortcutSelect","TrackWeatherSelect","e","_e$target$value$split","_e$target$value$split2","Track","tracks_settings","car_id_options","is_last_track","track.service_time_mins","ScheduleLegs","maxStageDivider","max","canAddLeg","lastLeg","addLeg","last_leg","last_leg_date","next_day","canMoveLegUp","stage_split","moveLegUp","canMoveLegDown","moveLegDown","removeLeg","colspan","Presets","saveNames","fill","save","slot","load","assign_default","mounted","items","output","nothing","prompt","saveName","Page","App","extend","current_page","hidden","current_request_operation","serverErrors","tracks_weather","_this$store$tournamen","_this$store$tournamen2","cars_errors","_this$store$cars_phys","car_physics","track_physics","tracks_errors","tournament_errors","oneDayAfter","sevenDaysAfter","registration_deadline_in_hours","is_integer_default","legs_errors","error","previous_leg","toLocaleString","previous_leg_date","notifications","notification","hasErrors","submit","_submit","generalErrorXPath","trackErrorXPath","tournament_data","cars_physics_data","leg_data","edit_tournament_node","tournament_id_match","tournament_id","checkAndAppendServerErrors","page","errorsXPath","location","message","_checkAndAppendServerErrors","_callee2","params","errorNode","_context2","t1","nodeName","t2","store.tracks","newTracks","store.cars_physics.car_physics_id","newPhysicsId","immediate","handler","newValue","tournamentForm","display","_mounted","_callee3","url_search_params","_this$store$tournamen3","_track_id","_context3","URLSearchParams","search","getElementsByTagName","innerHTML","t3","t4","t5","t6","t7","t8","t9","active","config","productionTip","main_parent","parentElement","appContainer","createElement","prepend","$mount"],"mappings":"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","file":"js/app.32327dab.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/rbrcz_prototype/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export function formatDate( date: Date ) {\r\n    return `${( '000' + date.getFullYear() ).slice( -4 )}-${( '0' + ( date.getMonth() + 1 ) ).slice( -2 )}-${( '0' + date.getDate() ).slice( -2 )}`\r\n}\r\n\r\nexport function stringDateToCZDate( date: string ) {\r\n    return date.split( '-' ).reverse().map( number_string => Number( number_string ).toString() ).join( '.' )\r\n}\r\n\r\nexport function czDateToStringDate( date: string ) {\r\n    return date.split( '.' ).reverse().map( ( str, index ) => index === 0 ? str : str.padStart( 2, '0' ) ).join( '-' )\r\n}\r\n\r\nexport function formatTime( date: Date ) {\r\n    return `${( '0' + date.getHours() ).slice( -2 )}:${( '0' + date.getMinutes() ).slice( -2 )}`\r\n}\r\n\r\nexport function arrayCanMoveElement( array: any[], index: number, offset: number ) {\r\n    return (\r\n        offset > 0 ? index + offset < array.length :\r\n        offset < 0 ? index + offset >= 0 :\r\n        true\r\n    )\r\n}\r\n\r\nexport function arrayMoveElement( array: any[], index: number, offset: number ) {\r\n    if ( arrayCanMoveElement( array, index, offset ) === false ) {\r\n        return false\r\n    }\r\n\r\n    const new_index = index + offset\r\n\r\n    if ( new_index >= array.length ) {\r\n        let k = new_index - array.length + 1\r\n        while ( k-- ) {\r\n            array.push( undefined )\r\n        }\r\n    }\r\n\r\n    array.splice( new_index, 0, array.splice( index, 1 )[ 0 ] )\r\n\r\n    return true\r\n}\r\n\r\nexport function objectWithoutNulls<T = any>( obj: T ): Partial<T> {\r\n    return Object.keys( obj ).reduce( ( prev, id ) => ( ( obj as any )[id] === null ? prev : {\r\n        ...prev,\r\n        [id]: ( obj as any )[id]\r\n    } ), {} )\r\n}\r\n\r\nexport function getElementByXpath( document: Document, path: string ): HTMLElement | null {\r\n    return document.evaluate( path, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null ).singleNodeValue as HTMLElement\r\n}\r\n\r\nexport function extractSelectOptions( node: HTMLElement | null ): SelectOption[] {\r\n    const options: SelectOption[] = []\r\n    if ( node ) {\r\n        for ( const child_node of node.children ) {\r\n            const id = child_node.getAttribute( 'value' )\r\n            const label = child_node.textContent\r\n            if ( id && label ) {\r\n                options.push( { id, label } )\r\n            }\r\n        }\r\n    }\r\n\r\n    return options\r\n}\r\n\r\nexport function urlEncode( obj: any ) {\r\n    return Object.keys( obj ).map( key => {\r\n        if ( Array.isArray( obj[key] ) ) {\r\n            return ( obj[key] as any[] ).map( val => `${encodeURIComponent( `${key}[]` )}=${encodeURIComponent( val )}` ).join( '&' )\r\n        } else {\r\n            return `${encodeURIComponent( key )}=${encodeURIComponent( obj[key] )}`\r\n        }\r\n    } ).join( '&' )\r\n}\r\n\r\nexport function post( data: any, next_page: {\r\n    flow?: string,\r\n    curstagepos?: string,\r\n    page_selector?: string,\r\n    save_tournament?: boolean,\r\n    save_from_leg_page?: boolean\r\n} = {} ) {\r\n    const { flow = null, curstagepos = null, page_selector = null, save_tournament = false, save_from_leg_page = false } = next_page\r\n\r\n    const save_params = save_tournament ?\r\n        ( save_from_leg_page ? { submit_page: 'Save' } : { submit_save_tour: 'Save tour' } ) :\r\n        { submit_page_go: 'Go' }\r\n\r\n    return fetch( '/index.php?act=tourmntscre4A', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: urlEncode( objectWithoutNulls( {\r\n            ...data,\r\n            flow,\r\n            curstagepos,\r\n            page_selector,\r\n            ...save_params\r\n        } ) )\r\n    } )\r\n}\r\n\r\nexport function waitUntil( func: () => boolean, checkInMsecs: number = 300 ) {\r\n    return new Promise( res => {\r\n        const intervalFunc = () => {\r\n            func() ? res() : setInterval( intervalFunc, checkInMsecs )\r\n        }\r\n        intervalFunc()\r\n    } )\r\n}\r\n\r\nexport function datePacks() {\r\n    const now = new Date()\r\n    const nextHalfAnHour = new Date( Number( now ) + 1000 * 60 * 30 )\r\n    const nextDay = new Date( Number( now ) + 1000 * 60 * 60 * 24 * 1 )\r\n    const nextThreeDays = new Date( Number( now ) + 1000 * 60 * 60 * 24 * 3 )\r\n\r\n    return {\r\n        now,\r\n        nextHalfAnHour,\r\n        nextDay,\r\n        nextThreeDays\r\n    }\r\n}\r\n\r\nexport function cacheStore( key: string, value: string, age_secs: number ) {\r\n    window.localStorage.setItem( key, value )\r\n\r\n    const time_msecs = Number( new Date() )\r\n    window.localStorage.setItem( key + '_expires', ( time_msecs + age_secs * 1000 ).toString() )\r\n}\r\n\r\nexport function cacheGet( key: string ) {\r\n    const item = window.localStorage.getItem( key )\r\n    if ( !item ) {\r\n        return null\r\n    }\r\n\r\n    const time_msecs = Number( new Date() )\r\n    const expiration_date = window.localStorage.getItem( key + '_expires' )\r\n    if ( !expiration_date || time_msecs >= Number( expiration_date ) ) {\r\n        return null\r\n    }\r\n\r\n    return item\r\n}\r\n","import Vue from 'vue'\r\nimport { getElementByXpath, cacheGet, cacheStore } from '../util'\r\n\r\nexport const tracks = Vue.observable( {\r\n    cacheChecked: false,\r\n\r\n    byId: {} as { [index: string]: TrackData },\r\n\r\n    fetching: false,\r\n\r\n    async fetchTracks() {\r\n        if ( !this.cacheChecked ) {\r\n            const cachedTracks = cacheGet( 'tracks' )\r\n            if ( cachedTracks ) {\r\n                const { byId } = JSON.parse( cachedTracks )\r\n                Vue.set( this, 'byId', byId )\r\n            }\r\n\r\n            this.cacheChecked = true\r\n        }\r\n\r\n        if ( this.fetching || Object.keys( this.byId ).length > 0 ) {\r\n            return\r\n        }\r\n\r\n        this.fetching = true\r\n\r\n        const res = await fetch( '/index.php?act=rbrtracks' )\r\n\r\n        const text = await res.text()\r\n        const doc = new DOMParser().parseFromString( text, 'text/html' )\r\n\r\n        const track_rows = getElementByXpath( doc, '/html/body/table/tbody/tr/td/table[3]/tbody/tr[1]/td[2]/table/tbody/tr[2]' )\r\n\r\n        let row: Node | null = track_rows\r\n        while ( row ) {\r\n            const id = row.childNodes[0].textContent\r\n            if ( id ) {\r\n                const track: TrackData = {\r\n                    id,\r\n                    name: row.childNodes[1].textContent || '',\r\n                    country: row.childNodes[2].textContent || '',\r\n                    surface: row.childNodes[3].textContent || '',\r\n                    distance: row.childNodes[4].textContent ? Number( row.childNodes[4].textContent.replace( ' km', '' ) ) : 0,\r\n                    shakedown_allowed: [ 'ano', 'yes' ].includes( ( row.childNodes[5].textContent || '' ).toLowerCase().trim() ),\r\n                    restricted: Boolean( ( row.childNodes[6].textContent || '' ).trim() )\r\n                }\r\n                Vue.set( this.byId, id, track )\r\n            }\r\n\r\n            row = row.nextSibling\r\n        }\r\n\r\n        cacheStore( 'tracks', JSON.stringify( { byId: this.byId } ), 60 * 60 * 24 )\r\n\r\n        this.fetching = false\r\n    }\r\n} )\r\n","import Vue from 'vue'\r\nimport { store } from '../store'\r\nimport { post, extractSelectOptions, getElementByXpath, waitUntil, cacheGet, cacheStore } from '../util'\r\n\r\nexport const trackSettings = Vue.observable( {\r\n    cacheChecked: false,\r\n\r\n    byId: {} as { [index: string]: TrackSettings },\r\n\r\n    fetching: {} as { [index: string]: boolean },\r\n\r\n    shouldBeThrottled() {\r\n        return Object.values( this.fetching ).filter( value => value === true ).length >= 2\r\n    },\r\n\r\n    async fetchTrackSettings( track_id: string ) {\r\n        if ( !this.cacheChecked ) {\r\n            const cachedTrackSettings = cacheGet( 'track_settings' )\r\n            if ( cachedTrackSettings ) {\r\n                const { byId } = JSON.parse( cachedTrackSettings )\r\n                Vue.set( this, 'byId', byId )\r\n            }\r\n\r\n            this.cacheChecked = true\r\n        }\r\n\r\n        if ( this.fetching[track_id] ) {\r\n            await waitUntil( () => this.fetching[track_id] === false )\r\n        }\r\n\r\n        if ( this.byId[track_id] ) {\r\n            return\r\n        }\r\n\r\n        if ( this.shouldBeThrottled() ) {\r\n            await waitUntil( () => this.shouldBeThrottled() === false )\r\n        }\r\n\r\n        Vue.set( this.fetching, track_id, true )\r\n\r\n        const dummy_post = store.tournamentDummyPostOutput( {\r\n            tourstages: `${track_id};`\r\n        } )\r\n\r\n        const response = await post( dummy_post, {\r\n            page_selector: '2'\r\n        } )\r\n\r\n        const html = await response.text()\r\n        const doc = ( new DOMParser() ).parseFromString( html, 'text/html' )\r\n\r\n        const tyres_select = getElementByXpath( doc, '//*[@id=\"TyresSel\"]' )\r\n        const tyres = extractSelectOptions( tyres_select )\r\n\r\n        let tyres_recommended = tyres[0].id\r\n        if ( tyres_select ) {\r\n            for ( const child_node of tyres_select.children ) {\r\n                const id = child_node.getAttribute( 'value' )\r\n                if ( id && child_node.getAttribute( 'selected' ) !== null ) {\r\n                    tyres_recommended = id\r\n                    break\r\n                }\r\n            }\r\n        }\r\n\r\n        const settings: TrackSettings = {\r\n            surface_type: extractSelectOptions( getElementByXpath( doc, '//*[@id=\"SurfSel\"]' ) ),\r\n            surface_age: extractSelectOptions( getElementByXpath( doc, '//*[@id=\"SurfAgeSel\"]' ) ),\r\n            weather: extractSelectOptions( getElementByXpath( doc, '//*[@id=\"WeatherSel\"]' ) ),\r\n            weather2: extractSelectOptions( getElementByXpath( doc, '//*[@id=\"Weather2Sel\"]' ) ),\r\n            clouds: extractSelectOptions( getElementByXpath( doc, '//*[@id=\"CloudsSel\"]' ) ),\r\n            time_of_day: extractSelectOptions( getElementByXpath( doc, '//*[@id=\"TimeOfDaySel\"]' ) ),\r\n            tyres,\r\n            damage: extractSelectOptions( getElementByXpath( doc, '//*[@id=\"DamageSel\"]' ) ),\r\n            shortcut_check: extractSelectOptions( getElementByXpath( doc, '//*[@id=\"CutcheckerSel\"]' ) ),\r\n\r\n            tyres_recommended\r\n        }\r\n\r\n        Vue.set( this.byId, track_id, settings )\r\n\r\n        cacheStore( 'track_settings', JSON.stringify( { byId: this.byId } ), 60 * 60 * 24 )\r\n\r\n        Vue.set( this.fetching, track_id, false )\r\n    }\r\n} )\r\n","import Vue from 'vue'\r\nimport { getElementByXpath, waitUntil, cacheGet, cacheStore } from '../util'\r\n\r\nexport const trackWeather = Vue.observable( {\r\n    cacheChecked: false,\r\n\r\n    byId: {} as { [ index: string ]: TrackWeatherData[] },\r\n\r\n    fetching: {} as { [ index: string ]: boolean },\r\n\r\n    shouldBeThrottled() {\r\n        return Object.values( this.fetching ).filter( value => value === true ).length >= 2\r\n    },\r\n\r\n    async fetchTrackWeather( track_id: string ) {\r\n        if ( !this.cacheChecked ) {\r\n            const cachedTrackWeather = cacheGet( 'track_weather' )\r\n            if ( cachedTrackWeather ) {\r\n                const { byId } = JSON.parse( cachedTrackWeather )\r\n                Vue.set( this, 'byId', byId )\r\n            }\r\n\r\n            this.cacheChecked = true\r\n        }\r\n\r\n        if ( this.fetching[track_id] ) {\r\n            await waitUntil( () => this.fetching[track_id] === false )\r\n        }\r\n\r\n        if ( this.byId[ track_id ] ) {\r\n            return\r\n        }\r\n\r\n        if ( this.shouldBeThrottled() ) {\r\n            await waitUntil( () => this.shouldBeThrottled() === false )\r\n        }\r\n\r\n        Vue.set( this.fetching, track_id, true )\r\n\r\n        const res = await fetch( `/tools.php?act=show_textures&stage_id=${track_id}` )\r\n\r\n        const html = await res.text()\r\n        const doc = ( new DOMParser() ).parseFromString( html, 'text/html' )\r\n\r\n        Vue.set( this.byId, track_id, [] )\r\n\r\n        const weatherTable = getElementByXpath( doc, '/html/body/center/table[2]/tbody' )\r\n        if ( weatherTable ) {\r\n\r\n            for ( const row of weatherTable.children ) {\r\n                const clickFunctionBody = row.getAttribute( 'ondblclick' )\r\n                if ( !clickFunctionBody ) {\r\n                    continue\r\n                }\r\n\r\n                const weather_pack = row.childNodes[0]\r\n                const isOriginalWeatherPack = ( weather_pack.textContent || '' ) === 'Originální­ počasí­'\r\n                if ( !isOriginalWeatherPack ) {\r\n                    continue\r\n                }\r\n\r\n                const time_of_day = row.childNodes[1].textContent || ''\r\n                const weather2 = row.childNodes[2].textContent || ''\r\n                const clouds = row.childNodes[3].textContent || ''\r\n                const remark = row.childNodes[4].textContent || ''\r\n\r\n                const [ weather_pack_id, time_of_day_id, weather2_id, clouds_id ] = clickFunctionBody.match( /\\d+/g ) || [ '', '', '', '' ]\r\n                if ( !time_of_day_id || !weather2_id || !clouds_id ) {\r\n                    continue\r\n                }\r\n\r\n                const data: TrackWeatherData = {\r\n                    time_of_day: { id: time_of_day_id, label: time_of_day },\r\n                    weather2: { id: weather2_id, label: weather2 },\r\n                    clouds: { id: clouds_id, label: clouds },\r\n                    remark: remark\r\n                }\r\n\r\n                this.byId[track_id].push( data )\r\n            }\r\n\r\n        }\r\n\r\n        cacheStore( 'track_weather', JSON.stringify( { byId: this.byId } ), 60 * 60 * 24 )\r\n\r\n        Vue.set( this.fetching, track_id, false )\r\n    }\r\n} )\r\n","import Vue from 'vue'\r\nimport { getElementByXpath, extractSelectOptions } from '../util'\r\n\r\nexport const constants = Vue.observable( {\r\n    superally: [] as SelectOption[],\r\n    carPhysics: [] as SelectOption[],\r\n\r\n    fetched: false,\r\n    fetching: false,\r\n\r\n    fetchTournamentConstants() {\r\n        if ( this.fetching || this.fetched ) {\r\n            return\r\n        }\r\n\r\n        this.fetching = true\r\n\r\n        const superally_node = getElementByXpath( document, '//*[@id=\"SRallyPenaltySel\"]' )\r\n        this.superally = extractSelectOptions( superally_node )\r\n\r\n        const car_physics_node = getElementByXpath( document, '//*[@id=\"PhysicsModId\"]' )\r\n        this.carPhysics = extractSelectOptions( car_physics_node )\r\n\r\n        this.fetching = false\r\n        this.fetched = true\r\n    }\r\n} )\r\n","import Vue from 'vue'\r\nimport { store } from '../store'\r\nimport { post, extractSelectOptions, getElementByXpath, cacheGet, cacheStore } from '../util'\r\n\r\nexport const cars = Vue.observable( {\r\n    cacheChecked: false,\r\n\r\n    byId: {} as { [index: string]: string },\r\n\r\n    carPacks: {} as { [index: string]: { [index: string]: { name: string, cars: string[] } } },\r\n\r\n    trackPhysics: {} as { [index: string]: SelectOption[] },\r\n\r\n    fetching: {} as { [index: string]: boolean },\r\n\r\n    async fetchCars( car_physics_id: string ) {\r\n        if ( !this.cacheChecked ) {\r\n            const cachedCars = cacheGet( 'cars' )\r\n            if ( cachedCars ) {\r\n                const { byId, carPacks, trackPhysics } = JSON.parse( cachedCars )\r\n                Vue.set( this, 'byId', byId )\r\n                Vue.set( this, 'carPacks', carPacks )\r\n                Vue.set( this, 'trackPhysics', trackPhysics )\r\n            }\r\n\r\n            this.cacheChecked = true\r\n        }\r\n\r\n        if ( this.fetching[car_physics_id] || this.trackPhysics[car_physics_id] || this.carPacks[car_physics_id] ) {\r\n            return\r\n        }\r\n\r\n        this.fetching[car_physics_id] = true\r\n\r\n        Vue.set( this.carPacks, car_physics_id, {} )\r\n\r\n        const dummy_post = store.tournamentDummyPostOutput( {\r\n            PhysicsModId: car_physics_id,\r\n            tourstages: '10;'\r\n        } )\r\n\r\n        const response = await post( dummy_post, {\r\n            page_selector: '1'\r\n        } )\r\n\r\n        const html = await response.text()\r\n        const doc = ( new DOMParser() ).parseFromString( html, 'text/html' )\r\n\r\n        const car_pack_node = getElementByXpath( doc, '//*[@id=\"ModsPacksSel\"]' )\r\n        const car_pack_options = extractSelectOptions( car_pack_node )\r\n        car_pack_options.forEach( car_pack_option => {\r\n            Vue.set( this.carPacks[car_physics_id], car_pack_option.id, {\r\n                name: car_pack_option.label,\r\n                cars: []\r\n            } )\r\n        } )\r\n\r\n        const car_regexp = /carsInfo\\[\\d+\\] = new Array\\(\"([^\"]+)\",\\s+\"([^\"]+)\",\\s+\"([^\"]+)\"/g\r\n        car_regexp.exec( html )\r\n        let matches = car_regexp.exec( html )\r\n\r\n        while ( matches !== null ) {\r\n            const car_id = matches[1]\r\n            const car_name = matches[2]\r\n            const car_pack_ids = matches[3].split( ',' )\r\n\r\n            Vue.set( this.byId, car_id, car_name )\r\n\r\n            car_pack_ids.forEach( car_pack_id => {\r\n                if ( this.carPacks[car_physics_id][car_pack_id] ) {\r\n                    this.carPacks[car_physics_id][car_pack_id].cars.push( car_id )\r\n                }\r\n            } )\r\n\r\n            matches = car_regexp.exec( html )\r\n        }\r\n\r\n        const physics_node = getElementByXpath( doc, '//*[@id=\"ModsSel\"]' )\r\n        const physics = extractSelectOptions( physics_node ).filter( mod => !this.byId[mod.id] )\r\n        Vue.set( this.trackPhysics, car_physics_id, physics )\r\n\r\n        cacheStore( 'cars', JSON.stringify( { byId: this.byId, carPacks: this.carPacks, trackPhysics: this.trackPhysics } ), 60 * 60 * 24 )\r\n\r\n        this.fetching[car_physics_id] = false\r\n    }\r\n} )\r\n","import { tracks as tracks_data } from './data/tracks'\r\nimport { trackSettings } from './data/track-settings'\r\nimport { trackWeather } from './data/track-weather'\r\nimport { formatDate, formatTime, datePacks, arrayMoveElement, objectWithoutNulls, stringDateToCZDate, getElementByXpath, czDateToStringDate } from './util'\r\nimport { constants } from './data/constants'\r\nimport { cars } from './data/cars'\r\n\r\nconst storeDatePack = datePacks()\r\n\r\nconst defaultTournament: Tournament = {\r\n    name: '',\r\n    description: '',\r\n    online: true,\r\n    offline: false,\r\n\r\n    from_date: formatDate( storeDatePack.nextHalfAnHour ),\r\n    from_time: formatTime( storeDatePack.nextHalfAnHour ),\r\n\r\n    to_date: formatDate( storeDatePack.nextThreeDays ),\r\n    to_time: '23:59',\r\n\r\n    cant_resume: false,\r\n    only_one_car: true,\r\n    dont_show_splits: false,\r\n    dont_show_temporary_results_in_rbr: false,\r\n    dont_show_temporary_results_in_web: false,\r\n    save_replays: true,\r\n    require_stage_comments: true,\r\n    test_tournament: false,\r\n\r\n    password: '',\r\n    registration_deadline: '',\r\n\r\n    superally_penalty: 300\r\n}\r\n\r\nexport const store = {\r\n    tournament: defaultTournament,\r\n\r\n    cars_physics: {\r\n        car_physics_id: '',\r\n        track_physics_id: '',\r\n        selected_car_ids: [] as string[]\r\n    },\r\n\r\n    tracks: [] as SelectedTrack[],\r\n\r\n    legs: [] as Leg[],\r\n\r\n    trackFetchInfo( track_id: string ) {\r\n        return Promise.all( [\r\n            trackSettings.fetchTrackSettings( track_id ),\r\n            trackWeather.fetchTrackWeather( track_id )\r\n        ] )\r\n    },\r\n\r\n    async trackAdd( track_ids: string[] ) {\r\n        const previousTrack = this.tracks[this.tracks.length - 1]\r\n\r\n        for ( const track_id of track_ids ) {\r\n            const track = tracks_data.byId[track_id] as TrackData\r\n            if ( !track ) {\r\n                continue\r\n            }\r\n\r\n            await this.trackFetchInfo( track_id )\r\n\r\n            const settings = trackSettings.byId[track_id]\r\n            const weatherSettings = trackWeather.byId[track_id]\r\n\r\n            store.tracks.push( {\r\n                id: track_id,\r\n                name: '',\r\n                surface_type: previousTrack && settings.surface_type.find( surface => surface.id === previousTrack.surface_type ) ?\r\n                    previousTrack.surface_type :\r\n                    settings.surface_type[0].id,\r\n\r\n                surface_age: previousTrack && settings.surface_age.find( surface => surface.id === previousTrack.surface_age ) ?\r\n                    previousTrack.surface_age :\r\n                    settings.surface_age[0].id,\r\n\r\n                weather: previousTrack ? previousTrack.weather : settings.weather[0].id,\r\n                weather_change_allowed: previousTrack ? previousTrack.weather_change_allowed : false,\r\n\r\n                weather2: weatherSettings[0].weather2.id,\r\n                time_of_day: weatherSettings[0].time_of_day.id,\r\n                clouds: weatherSettings[0].clouds.id,\r\n\r\n                service_time_mins: 0,\r\n                setup_change_allowed: false,\r\n                tyre_replacement_allowed: false,\r\n                tyre_change_allowed: previousTrack ? false : true,\r\n                tyres: settings.tyres_recommended,\r\n\r\n                damage_change_allowed: previousTrack ? previousTrack.damage_change_allowed : false,\r\n                damage: previousTrack && settings.damage.find( damage => damage.id === previousTrack.damage ) ?\r\n                    previousTrack.damage :\r\n                    settings.damage[settings.damage.length - 1].id,\r\n\r\n                shortcut_check: previousTrack && settings.shortcut_check.find( shortcut_check => shortcut_check.id === previousTrack.shortcut_check ) ?\r\n                    previousTrack.shortcut_check :\r\n                    settings.shortcut_check[0].id,\r\n\r\n                superally: previousTrack ? previousTrack.superally : false,\r\n                superally_hold: previousTrack ? previousTrack.superally_hold : false,\r\n\r\n                retry_allowed: previousTrack ? previousTrack.retry_allowed : false\r\n            } )\r\n        }\r\n    },\r\n\r\n    trackRemove( track_index: number ) {\r\n        store.tracks.splice( track_index, 1 )\r\n        store.trackFixIncorrectService()\r\n    },\r\n\r\n    trackMove( track_index: number, offset: number ) {\r\n        const moved_successfully = arrayMoveElement( this.tracks, track_index, offset )\r\n        store.trackFixIncorrectService()\r\n        return moved_successfully\r\n    },\r\n\r\n    trackMoveUp( track_index: number ) {\r\n        return this.trackMove( track_index, -1 )\r\n    },\r\n\r\n    trackMoveDown( track_index: number ) {\r\n        return this.trackMove( track_index, +1 )\r\n    },\r\n\r\n    tournamentFromHTML( html: string ): { track_ids: string[], cars_physics: string, has_legs: boolean } {\r\n        const doc = ( new DOMParser() ).parseFromString( html, 'text/html' )\r\n        const tournament_form = doc.getElementById( 'tournament' ) as HTMLFormElement | null\r\n        if ( tournament_form ) {\r\n            const form_data = new FormData( tournament_form )\r\n\r\n            const tour_to_date = form_data.get( 'tour_to_date' ) as string\r\n            const tour_from_date = form_data.get( 'tour_from_date' ) as string\r\n\r\n            const tournament: Tournament = {\r\n                name: ( form_data.get( 'tour_name' ) as string ) || this.tournament.name,\r\n                description: ( form_data.get( 'tour_descr' ) as string ) || this.tournament.description,\r\n                online: ( form_data.get( 'online' ) as string ) !== null,\r\n                offline: ( form_data.get( 'offlinet' ) as string ) !== null,\r\n\r\n                from_date: tour_from_date ? czDateToStringDate( tour_from_date ) : this.tournament.from_date,\r\n                from_time: ( form_data.get( 'tour_from_time' ) as string ) || this.tournament.from_time,\r\n                to_date: tour_to_date ? czDateToStringDate( tour_to_date ) : this.tournament.to_date,\r\n                to_time: ( form_data.get( 'tour_to_time' ) as string ) || this.tournament.to_time,\r\n\r\n                cant_resume: ( form_data.get( 'cantresrace' ) as string ) !== null,\r\n                only_one_car: ( form_data.get( 'onecaronly' ) as string ) !== null,\r\n                dont_show_splits: ( form_data.get( 'nosplits' ) as string ) !== null,\r\n                dont_show_temporary_results_in_rbr: ( form_data.get( 'notempres' ) as string ) !== null,\r\n                dont_show_temporary_results_in_web: ( form_data.get( 'notempresweb' ) as string ) !== null,\r\n                save_replays: ( form_data.get( 'savereplays' ) as string ) !== null,\r\n                require_stage_comments: ( form_data.get( 'getcomments' ) as string ) !== null,\r\n                test_tournament: ( form_data.get( 'testrun' ) as string ) !== null,\r\n\r\n                password: '',\r\n                registration_deadline: ( form_data.get( 'enroll_close' ) as string ) || this.tournament.registration_deadline,\r\n                superally_penalty: Number( ( form_data.get( 'SRallyPenaltySel' ) as string ) ) || this.tournament.superally_penalty,\r\n            }\r\n\r\n            this.tournament = tournament\r\n\r\n            return {\r\n                track_ids: ( form_data.get( 'tourstages' ) as string || '' ).split( ';' ).filter( id => id.length > 0 ),\r\n                cars_physics: ( form_data.get( 'PhysicsModId' ) as string ) || this.cars_physics.car_physics_id,\r\n                has_legs: ( form_data.get( 'has_legs' ) as string ) !== null\r\n            }\r\n        }\r\n\r\n        return { track_ids: [], cars_physics: '0', has_legs: false }\r\n    },\r\n\r\n    tournamentPostOutput(): Partial<TournamentPOSTOutput> {\r\n        return objectWithoutNulls( {\r\n            tour_name: this.tournament.name.trim(),\r\n            tour_descr: this.tournament.description,\r\n            online: this.tournament.online ? 'on' : null,\r\n            offlinet: this.tournament.offline ? 'on' : null,\r\n            PhysicsModId: this.cars_physics.car_physics_id,\r\n            tour_from_date: stringDateToCZDate( this.tournament.from_date ),\r\n            tour_from_time: this.tournament.from_time,\r\n            tour_to_date: stringDateToCZDate( this.tournament.to_date ),\r\n            tour_to_time: this.tournament.to_time,\r\n            cantresrace: this.tournament.cant_resume ? 'on' : null,\r\n            onecaronly: this.tournament.only_one_car ? 'on' : null,\r\n            nosplits: this.tournament.dont_show_splits ? 'on' : null,\r\n            notempres: this.tournament.dont_show_temporary_results_in_rbr ? 'on' : null,\r\n            notempresweb: this.tournament.dont_show_temporary_results_in_web ? 'on' : null,\r\n            savereplays: this.tournament.save_replays ? 'on' : null,\r\n            getcomments: this.tournament.require_stage_comments ? 'on' : null,\r\n            testrun: this.tournament.test_tournament ? 'on' : null,\r\n            ispassword: this.tournament.password ? 'on' : null,\r\n            tour_password: this.tournament.password || null,\r\n            has_legs: this.legs.length > 0 ? 'on' : null,\r\n            need_enroll: this.tournament.registration_deadline ? 'on' : null,\r\n            enroll_close: this.tournament.registration_deadline || null,\r\n            SRallyPenaltySel: this.tournament.superally_penalty.toString(),\r\n            tourstages: this.tracks.map( track => track.id ).join( ';' ) + ';'\r\n        } )\r\n    },\r\n\r\n    tournamentDummyPostOutput( additionalParams: Partial<TournamentPOSTOutput> = {} ): Partial<TournamentPOSTOutput> {\r\n        const { nextDay, nextThreeDays } = datePacks()\r\n\r\n        return objectWithoutNulls( {\r\n            ...this.tournamentPostOutput(),\r\n            tour_name: 'dummy',\r\n            tour_from_date: stringDateToCZDate( formatDate( nextDay ) ),\r\n            tour_from_time: '00:00',\r\n\r\n            tour_to_date: stringDateToCZDate( formatDate( nextThreeDays ) ),\r\n            tour_to_time: '23:59',\r\n            PhysicsModId: constants.carPhysics[0].id,\r\n\r\n            has_legs: null,\r\n\r\n            ...additionalParams\r\n        } )\r\n    },\r\n\r\n    carsPhysicsFromHTML( html: string ) {\r\n        const doc = ( new DOMParser() ).parseFromString( html, 'text/html' )\r\n        const tournament_form = doc.getElementById( 'tournament' ) as HTMLFormElement | null\r\n        if ( tournament_form ) {\r\n            const form_data = new FormData( tournament_form )\r\n            const { car_physics_id } = this.cars_physics\r\n\r\n            const mods = form_data.getAll( 'ModsSel[]' )\r\n            for ( let mod_id of mods ) {\r\n                mod_id = mod_id.toString()\r\n                if ( cars.byId[mod_id] ) {\r\n                    this.cars_physics.selected_car_ids.push( mod_id )\r\n                } else if ( cars.trackPhysics[car_physics_id].find( option => mod_id === option.id ) ) {\r\n                    this.cars_physics.track_physics_id = mod_id\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    carsPhysicsPostOutput() {\r\n        return objectWithoutNulls( {\r\n            LicSel: [ '0' ], // TODO: License selection\r\n            ModsSel: [ this.cars_physics.track_physics_id, ...this.cars_physics.selected_car_ids ]\r\n        } )\r\n    },\r\n\r\n    trackFromHTML( track_id: string, settings: TrackSettings, html: string ): SelectedTrack | null {\r\n        const doc = ( new DOMParser() ).parseFromString( html, 'text/html' )\r\n        const tournament_form = doc.getElementById( 'tournament' ) as HTMLFormElement | null\r\n        if ( tournament_form ) {\r\n            const form_data = new FormData( tournament_form )\r\n\r\n            return {\r\n                id: track_id,\r\n                name: ( form_data.get( 'stage_rename' ) as string ) || '',\r\n                surface_type: ( form_data.get( 'SurfSel' ) as string ) || settings.surface_type[0].id,\r\n                surface_age: ( form_data.get( 'SurfAgeSel' ) as string ) || settings.surface_age[0].id,\r\n\r\n                weather: ( form_data.get( 'WeatherSel' ) as string ) || settings.weather[0].id,\r\n                weather2: ( form_data.get( 'Weather2Sel' ) as string ) || settings.weather2[0].id,\r\n                weather_change_allowed: ( form_data.get( 'canchangeweather' ) as string ) !== null,\r\n                time_of_day: ( form_data.get( 'TimeOfDaySel' ) as string ) || settings.time_of_day[0].id,\r\n                clouds: ( form_data.get( 'CloudsSel' ) as string ) || settings.clouds[0].id,\r\n\r\n                service_time_mins: Number( ( form_data.get( 'ServiceSel' ) as string ) ) || 0,\r\n                setup_change_allowed: ( form_data.get( 'canchangesetup' ) as string ) !== null,\r\n                tyre_replacement_allowed: ( form_data.get( 'canrenewtyres' ) as string ) !== null,\r\n                tyre_change_allowed: ( form_data.get( 'canchangetyres' ) as string ) !== null,\r\n                tyres: ( form_data.get( 'TyresSel' ) as string ) || settings.tyres_recommended,\r\n\r\n                damage_change_allowed: ( form_data.get( 'canchangedamage' ) as string ) !== null,\r\n                damage: ( form_data.get( 'DamageSel' ) as string ) || settings.damage[settings.damage.length - 1].id,\r\n\r\n                shortcut_check: ( form_data.get( 'CutcheckerSel' ) as string ) || settings.shortcut_check[0].id,\r\n\r\n                superally: ( form_data.get( 'allowsuperally' ) as string ) !== null,\r\n                superally_hold: ( form_data.get( 'superallychpoint' ) as string ) !== null,\r\n\r\n                retry_allowed: ( form_data.get( 'canrepeatstage' ) as string ) !== null\r\n            }\r\n        }\r\n\r\n        return null\r\n    },\r\n\r\n    trackPostOutput( track_index: number ) {\r\n        const track = this.tracks[track_index]\r\n        const isLast = track_index === this.tracks.length - 1\r\n        return objectWithoutNulls( {\r\n            renamestage: track.name ? 'on' : null,\r\n            stage_rename: track.name,\r\n            CarSel: this.cars_physics.selected_car_ids[0],\r\n            SurfSel: track.surface_type,\r\n            SurfAgeSel: track.surface_age,\r\n            TexturesPackSel: '-1',\r\n            WeatherPackSel: '-1',\r\n            canchangeweather: track.weather_change_allowed ? 'on' : null,\r\n            WeatherSel: track.weather,\r\n            TimeOfDaySel: track.time_of_day,\r\n            Weather2Sel: track.weather2,\r\n            CloudsSel: track.clouds,\r\n            ServiceSel: isLast ? null : track.service_time_mins.toString(),\r\n            canrenewtyres: track.tyre_replacement_allowed ? 'on' : null,\r\n            canchangetyres: track.tyre_change_allowed ? 'on' : null,\r\n            TyresSel: track.tyres,\r\n            canchangedamage: track.damage_change_allowed ? 'on' : null,\r\n            DamageSel: track.damage,\r\n            CutcheckerSel: track.shortcut_check,\r\n            leg_pos: this.legs.length === 0 ? null : this.legs.reduce( ( prev, leg, leg_index ) => {\r\n                return track_index > leg.after_stage_divider ? leg_index + 1 : prev\r\n            }, 0 ),\r\n            allowsuperally: track.superally ? 'on' : null,\r\n            superallychpoint: track.superally_hold ? 'on' : null,\r\n            canrepeatstage: track.retry_allowed ? 'on' : null,\r\n            canchangesetup: track.setup_change_allowed ? 'on' : null\r\n        } )\r\n    },\r\n\r\n    trackFixIncorrectService() {\r\n        if ( this.tracks.length > 0 ) {\r\n            const lastTrack = this.tracks[this.tracks.length - 1]\r\n            lastTrack.service_time_mins = 0\r\n            lastTrack.tyre_replacement_allowed = false\r\n        }\r\n    },\r\n\r\n    legsFromHTML( html: string ) {\r\n        const doc = ( new DOMParser() ).parseFromString( html, 'text/html' )\r\n\r\n        const table = getElementByXpath( doc, '/html/body/table/tbody/tr/td/table[3]/tbody/tr[1]/td[2]/form/table/tbody' )\r\n        const original_legs: Array<{\r\n            stages_to: number,\r\n            date_to: string,\r\n            time_to: string\r\n        }> = []\r\n        if ( table ) {\r\n            for ( const row of table.children ) {\r\n                const is_leg_row = !isNaN( Number( row.children[0].textContent || '' ) )\r\n                if ( !is_leg_row ) {\r\n                    continue\r\n                }\r\n\r\n                if ( row.children.length < 7 ) {\r\n                    continue\r\n                }\r\n\r\n                const stages_string = row.children[1].textContent || ''\r\n                const stages_matches = stages_string.match( /(\\d+) - (\\d+)/ )\r\n                if ( !stages_matches ) {\r\n                    continue\r\n                }\r\n\r\n                const stages_to = Number( stages_matches[2] )\r\n\r\n                const date_to = czDateToStringDate( row.children[5].children[0].getAttribute( 'value' ) || '' )\r\n                const time_to = row.children[6].children[0].getAttribute( 'value' ) || ''\r\n\r\n                original_legs.push( { stages_to, date_to, time_to } )\r\n            }\r\n        }\r\n\r\n        for ( let i = 0 ; i < original_legs.length ; i++ ) {\r\n            const is_last = i === original_legs.length - 1\r\n            if ( is_last ) {\r\n                continue\r\n            }\r\n\r\n            const leg = original_legs[i]\r\n            this.legs.push( {\r\n                after_stage_divider: leg.stages_to - 1,\r\n                date: leg.date_to,\r\n                time: leg.time_to\r\n            } )\r\n        }\r\n    },\r\n\r\n    legsPostOutput(): any {\r\n        if ( this.legs.length === 0 ) {\r\n            return {}\r\n        }\r\n\r\n        return this.legs.map( ( leg, leg_index ) => {\r\n            return {\r\n                index: leg_index,\r\n\r\n                date_from: stringDateToCZDate( leg_index === 0 ? this.tournament.from_date : this.legs[leg_index - 1].date ),\r\n                time_from: leg_index === 0 ? this.tournament.from_time : this.legs[leg_index - 1].time,\r\n\r\n                date_to: stringDateToCZDate( leg.date ),\r\n                time_to: leg.time\r\n            }\r\n        } ).concat( {\r\n            index: this.legs.length,\r\n            date_from: stringDateToCZDate( this.legs[this.legs.length - 1].date ),\r\n            time_from: this.legs[this.legs.length - 1].time,\r\n\r\n            date_to: stringDateToCZDate( this.tournament.to_date ),\r\n            time_to: this.tournament.to_time\r\n        } ).reduce( ( prev, leg, index ) => {\r\n            const fields: any = {\r\n            }\r\n            if ( index > 0 ) {\r\n                fields[`leg${index}_date_from`] = leg.date_from\r\n                fields[`leg${index}_time_from`] = leg.time_from\r\n            }\r\n            if ( index <= this.legs.length - 1 ) {\r\n                fields[`leg${index}_date_to`] = leg.date_to\r\n                fields[`leg${index}_time_to`] = leg.time_to\r\n            }\r\n            return {\r\n                ...prev,\r\n                ...fields\r\n            }\r\n        }, {} )\r\n    }\r\n}\r\n","import * as tsx from 'vue-tsx-support'\r\nimport { store } from '../store'\r\nimport { constants } from '../data/constants'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'Tournament',\r\n\r\n    computed: {\r\n        superally: function() {\r\n            return constants.fetched ? constants.superally : undefined\r\n        },\r\n\r\n        tournament: function() {\r\n            return store.tournament\r\n        }\r\n    },\r\n\r\n    props: {\r\n        errors: Object as () => {\r\n            name: string,\r\n            from_datetime: string,\r\n            to_datetime: string,\r\n            registration_deadline: string\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        return (\r\n            <table><tbody>\r\n                 <tr>\r\n                    <td><label for='tournament.name'>Tournament name</label></td>\r\n                    <td>\r\n                        <input id='tournament.name' v-model={ this.tournament.name }/>\r\n                        <div class='error'>{ this.errors.name }</div>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.description'>Tournament description</label></td>\r\n                    <td><textarea id='tournament.description' v-model={ this.tournament.description } style='background-color: #050505;'/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.online'> Online tournament</label></td>\r\n                    <td><input type='checkbox' id='tournament.online' v-model={ this.tournament.online }/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.offline'> Offline tournament</label></td>\r\n                    <td><input type='checkbox' id='tournament.offline' v-model={ this.tournament.offline }/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Valid from (<a href='https://greenwichmeantime.com/time-zone/europe/european-union/czech-republic/'>CET</a>) (blank = now)</td>\r\n                    <td>\r\n                        <input type='date' id='tournament.from_date' v-model={ this.tournament.from_date }/>\r\n                        <input type='time' id='tournament.from_time' v-model={ this.tournament.from_time }/>\r\n                        <div class='error'>{ this.errors.from_datetime }</div>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Valid to (<a href='https://greenwichmeantime.com/time-zone/europe/european-union/czech-republic/'>CET</a>)</td>\r\n                    <td>\r\n                        <input type='date' id='tournament.from_to' v-model={ this.tournament.to_date } />\r\n                        <input type='time' id='tournament.from_to' v-model={ this.tournament.to_time } />\r\n                        <div class='error'>{ this.errors.to_datetime }</div>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.cant_resume'>Can't resume tournament</label></td>\r\n                    <td><input type='checkbox' id='tournament.cant_resume' v-model={ this.tournament.cant_resume }/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.only_one_car'>Only one car</label></td>\r\n                    <td><input type='checkbox' id='tournament.only_one_car' v-model={ this.tournament.only_one_car }/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.dont_show_splits'>Don't show splits</label></td>\r\n                    <td><input type='checkbox' id='tournament.dont_show_splits' v-model={ this.tournament.dont_show_splits }/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.dont_show_temporary_results_in_rbr'>Don't show temporary results in RBR</label></td>\r\n                    <td><input type='checkbox' id='tournament.dont_show_temporary_results_in_rbr' v-model={ this.tournament.dont_show_temporary_results_in_rbr }/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.dont_show_temporary_results_in_web'>Don't show temporary results on web</label></td>\r\n                    <td><input type='checkbox' id='tournament.dont_show_temporary_results_in_web' v-model={ this.tournament.dont_show_temporary_results_in_web }/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.save_replays'>Save replays</label></td>\r\n                    <td><input type='checkbox' id='tournament.save_replays' v-model={ this.tournament.save_replays }/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.require_stage_comments'>Require stage comments</label></td>\r\n                    <td><input type='checkbox' id='tournament.require_stage_comments' v-model={ this.tournament.require_stage_comments }/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.test_tournament'>Testing (tournament will be deleted after 14 days)</label></td>\r\n                    <td><input type='checkbox' id='tournament.test_tournament' v-model={ this.tournament.test_tournament } /></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.password'>Password</label></td>\r\n                    <td><input id='tournament.password' v-model={ this.tournament.password } placeholder='No password' /></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='tournament.registration_deadline'>Registration deadline (hours before tournament start)</label></td>\r\n                    <td>\r\n                        <input id='tournament.registration_deadline' v-model={ this.tournament.registration_deadline } placeholder='No registration' />\r\n                        <div class='error'>{ this.errors.registration_deadline }</div>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Superally penalty</td>\r\n                    <td>\r\n                    { this.superally ?\r\n                        <select v-model={ this.tournament.superally_penalty }>\r\n                        { this.superally.map( option =>\r\n                            <option key={ `superally${option.id}` } value={ option.id }>{ option.label }</option>\r\n                        ) }\r\n                        </select>\r\n                    :\r\n                        <div>Loading...</div>\r\n                    }\r\n                    </td>\r\n                </tr>\r\n\r\n            </tbody></table>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-0498a637/Tournament.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { store } from '../store'\r\nimport { constants } from '../data/constants'\r\nimport { cars } from '../data/cars'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'Cars',\r\n\r\n    data: function() {\r\n        return {\r\n\r\n            car_pack: '',\r\n            available_cars_selected_ids: [] as string[],\r\n\r\n            selected_cars_selected_ids: [] as string[],\r\n\r\n            cars_physics: store.cars_physics\r\n        }\r\n    },\r\n\r\n    props: {\r\n        errors: Object as () => {\r\n            selected_cars: string,\r\n            car_physics: string,\r\n            track_physics: string\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        car_physics_select: function() {\r\n            return constants.fetched ? constants.carPhysics : undefined\r\n        },\r\n\r\n        track_physics_select: function() {\r\n            return cars.trackPhysics[this.cars_physics.car_physics_id] || []\r\n        },\r\n\r\n        car_packs_select: function() {\r\n            if ( !this.car_physics_select ) {\r\n                return []\r\n            }\r\n\r\n            if ( !cars.carPacks[this.cars_physics.car_physics_id] ) {\r\n                return []\r\n            }\r\n\r\n            const carPack = cars.carPacks[this.cars_physics.car_physics_id]\r\n\r\n            return Object.keys( carPack ).map( id => ( {\r\n                id,\r\n                label: carPack[id].name\r\n            } ) )\r\n        },\r\n        available_cars: function() {\r\n            if ( !this.car_packs_select ) {\r\n                return []\r\n            }\r\n\r\n            const carPack = cars.carPacks[this.cars_physics.car_physics_id][this.car_pack]\r\n\r\n            return this.carIdsForSelect( carPack.cars )\r\n        },\r\n        selected_cars: function() {\r\n            return this.carIdsForSelect( this.cars_physics.selected_car_ids )\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        addToSelected: function( car_ids: string[] ) {\r\n            this.cars_physics.selected_car_ids = this.cars_physics.selected_car_ids\r\n                .concat( car_ids )\r\n                .filter( ( car_id, index, array ) => array.indexOf( car_id ) === index )\r\n            this.available_cars_selected_ids = []\r\n        },\r\n\r\n        addSelected: function() {\r\n            this.addToSelected( this.available_cars_selected_ids )\r\n        },\r\n\r\n        addAll: function() {\r\n            this.addToSelected( this.available_cars.map( car => car.id ) )\r\n        },\r\n\r\n        removeSelected: function() {\r\n            this.cars_physics.selected_car_ids = this.cars_physics.selected_car_ids.filter( car_id => !this.selected_cars_selected_ids.includes( car_id ) )\r\n        },\r\n\r\n        removeAll: function() {\r\n            this.cars_physics.selected_car_ids = []\r\n            this.selected_cars_selected_ids = []\r\n        },\r\n\r\n        carIdsForSelect: function( car_ids: string[] ) {\r\n            return car_ids.map( car_id => ( {\r\n                id: car_id,\r\n                value: cars.byId[car_id] as string\r\n            } ) ).sort( ( a, b ) => a.value.toLowerCase() > b.value.toLowerCase() ? 1 : -1 )\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        'cars_physics.car_physics_id': function() {\r\n            this.cars_physics.track_physics_id = ''\r\n            this.cars_physics.selected_car_ids = []\r\n            this.car_pack = ''\r\n            this.removeAll()\r\n        }\r\n    },\r\n\r\n    render( h ) {\r\n        return (\r\n            <table><tbody><tr>\r\n                <td style='vertical-align: top;'>\r\n                    <div>\r\n                        Car physics\r\n                    { this.car_physics_select ?\r\n                        <select style='width: 100%;' v-model={ this.cars_physics.car_physics_id }>\r\n                            <option disabled value=''>Select car physics</option>\r\n                        { this.car_physics_select.map( option =>\r\n                            <option key={ option.id } value={ option.id }>{ option.label }</option>\r\n                        ) }\r\n                        </select>\r\n                    :\r\n                        <div>Loading...</div>\r\n                    }\r\n                    </div>\r\n\r\n                    <div>\r\n                        Track physics\r\n                        <select style='width: 100%;' v-model={ this.cars_physics.track_physics_id }>\r\n                            <option disabled value=''>{\r\n                                cars.fetching[this.cars_physics.car_physics_id] ? 'Loading...' :\r\n                                !this.cars_physics.car_physics_id ? 'Select car physics first' :\r\n                                'Select track physics'\r\n                            }</option>\r\n                        { this.track_physics_select.map( option =>\r\n                            <option key={ option.id } value={ option.id }>{ option.label }</option>\r\n                        ) }\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        Car pack\r\n                        <select style='width: 100%;' v-model={ this.car_pack }>\r\n                            <option disabled value=''>{\r\n                                cars.fetching[this.cars_physics.car_physics_id] ? 'Loading...' :\r\n                                !this.cars_physics.car_physics_id ? 'Select car physics first' :\r\n                                'Select car pack'\r\n                            }</option>\r\n                        { this.car_packs_select.map( option =>\r\n                            <option key={ option.id } value={ option.id }>{ option.label }</option>\r\n                        ) }\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <select v-model={ this.available_cars_selected_ids } multiple style='width: 100%; min-width: 200px; height: 400px;'>\r\n                        { this.car_pack ? this.available_cars.map( option =>\r\n                            <option key={ option.id } title={ option.value } value={ option.id } onDblclick={ this.addSelected }>{ option.value }</option>\r\n                        ) : (\r\n                            <option disabled value=''>No car pack selected</option>\r\n                        ) }\r\n                        </select>\r\n                    </div>\r\n                </td>\r\n\r\n                <td class='select-buttons'>\r\n                    <button onClick={ this.addSelected } style='text-align: left;'>Add selected ></button>\r\n                    <button onClick={ this.addAll } style='text-align: left;'>Add all >></button>\r\n                    <button onClick={ this.removeSelected } style='text-align: right;'>&lt; Remove selected</button>\r\n                    <button onClick={ this.removeAll } style='text-align: right;'>&lt;&lt; Remove all</button>\r\n                </td>\r\n\r\n                <td>\r\n                    <div>Selected cars</div>\r\n                    <select v-model={ this.selected_cars_selected_ids } multiple style='width: 100%; min-width: 200px; height: 500px;'>\r\n                    { this.errors.selected_cars &&\r\n                        <option class='error'>{ this.errors.selected_cars }</option>\r\n                    }\r\n                    { this.selected_cars.map( option =>\r\n                        <option key={ option.id } value={ option.id }>{ option.value }</option>\r\n                    ) }\r\n                    </select>\r\n                </td>\r\n            </tr></tbody></table >\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-1d7622ad/Cars.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { store } from '../store'\r\nimport { tracks } from '../data/tracks'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'TrackList',\r\n    data: function() {\r\n        return {\r\n            selected_track_groups: [ '' ] as string[],\r\n\r\n            available_tracks_filter: '',\r\n            available_tracks_selected_ids: [] as string[],\r\n\r\n            tracks_selected_indexes: [] as number[],\r\n\r\n            tracks: store.tracks,\r\n            tracks_data: tracks.byId\r\n        }\r\n    },\r\n\r\n    props: {\r\n        errors: Object as () => {\r\n            selected_tracks: string\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        available_track_groups: function() {\r\n            const country_array: string[] = []\r\n            const surface_array: string[] = []\r\n            Object.values( this.tracks_data ).forEach( track_data => {\r\n                if ( !country_array.includes( track_data.country ) ) {\r\n                    country_array.push( track_data.country )\r\n                }\r\n\r\n                if ( !surface_array.includes( track_data.surface ) ) {\r\n                    surface_array.push( track_data.surface )\r\n                }\r\n            } )\r\n\r\n            return [\r\n                ...( surface_array.sort() ),\r\n                ...( country_array.sort() )\r\n            ]\r\n        },\r\n\r\n        available_tracks_select: function() {\r\n            return Object.keys( this.tracks_data ).map( key => ( {\r\n                id: key,\r\n                value: this.tracks_data[key]\r\n            } ) )\r\n            .sort( ( a, b ) => a.value.name > b.value.name ? 1 : -1 )\r\n            .filter( option =>\r\n                this.selected_track_groups.includes( '' ) ||\r\n                this.selected_track_groups.includes( option.value.country ) ||\r\n                this.selected_track_groups.includes( option.value.surface )\r\n            )\r\n            .filter( option => this.available_tracks_filter === '' || option.value.name.toLowerCase().indexOf( this.available_tracks_filter.toLowerCase() ) !== -1 )\r\n        },\r\n\r\n        total_distance: function() {\r\n            return this.tracks.reduce( ( sum, track ) => sum + this.tracks_data[track.id].distance, 0 ).toFixed( 1 )\r\n        },\r\n\r\n        isLoading: function() {\r\n            return tracks.fetching\r\n        }\r\n    },\r\n\r\n    methods: {\r\n\r\n        addToSelected: function( track_ids: string[] ) {\r\n            store.trackAdd( track_ids )\r\n        },\r\n\r\n        addSelected: function() {\r\n            this.addToSelected( this.available_tracks_selected_ids )\r\n        },\r\n\r\n        moveSelected: function( offset: number ) {\r\n            const sorted_indexes = this.tracks_selected_indexes.sort( ( a, b ) => ( offset >= 0 ? a > b : a < b ) ? -1 : 1 )\r\n\r\n            for ( let index = 0 ; index < sorted_indexes.length ; index++ ) {\r\n                const selected_index = sorted_indexes[index]\r\n                if ( store.trackMove( selected_index, offset ) ) {\r\n                    this.tracks_selected_indexes[index] += offset\r\n                } else {\r\n                    break\r\n                }\r\n            }\r\n        },\r\n\r\n        addRandom: function() {\r\n            const random_track_id = this.available_tracks_select[ Math.floor( Math.random() * this.available_tracks_select.length ) ].id\r\n            if ( !random_track_id ) {\r\n                return\r\n            }\r\n            this.addToSelected( [ random_track_id ] )\r\n        },\r\n\r\n        removeSelected: function() {\r\n            this.tracks_selected_indexes.sort( ( a, b ) => a > b ? -1 : 1 ).forEach( index => {\r\n                store.trackRemove( index )\r\n            } )\r\n        },\r\n\r\n        removeAll: function() {\r\n            this.tracks.splice( 0 )\r\n        },\r\n    },\r\n\r\n    render: function( h ) {\r\n        if ( this.isLoading ) {\r\n            return (\r\n                <div>Loading track list...</div>\r\n            )\r\n        }\r\n        return (\r\n            <table><tbody><tr>\r\n                <td>\r\n                    <div>Track groups</div>\r\n                    <select v-model={ this.selected_track_groups } multiple style='height: 400px;'>\r\n                        <option value=''>All tracks</option>\r\n                    { this.available_track_groups.map( group =>\r\n                        <option value={ group } key={ group }>{ group }</option>\r\n                    ) }\r\n                    </select>\r\n                </td>\r\n                <td>\r\n                    <div>Tracks</div>\r\n                    <div>\r\n                        <input style='width: 100%;' v-model={ this.available_tracks_filter } placeholder='Search...'/>\r\n                    </div>\r\n                    <select v-model={ this.available_tracks_selected_ids } multiple style='height: 382px; width: 200px'>\r\n                    { this.available_tracks_select.map( option =>\r\n                        <option value={ option.id } key={ option.id } onDblclick={ this.addSelected }>{ option.value.name }</option>\r\n                    ) }\r\n                    </select>\r\n                </td>\r\n                <td class='select-buttons'>\r\n                    <button onClick={ () => this.moveSelected( -1 ) } style='text-align: left; margin-bottom: 16px;'>^^^ Move selected</button>\r\n\r\n                    <button onClick={ this.addSelected } style='text-align: left;'>Add selected ></button>\r\n                    <button onClick={ this.addRandom } style='text-align: left;'>Add random ></button>\r\n                    <button onClick={ this.removeSelected } style='text-align: right;'>&lt; Remove selected</button>\r\n                    <button onClick={ this.removeAll } style='text-align: right;'>&lt;&lt; Remove all</button>\r\n\r\n                    <button onClick={ () => this.moveSelected( +1 ) } style='text-align: right; margin-top: 16px;'>Move selected vvv</button>\r\n                </td>\r\n                <td>\r\n                    <div>Selected tracks</div>\r\n                    <select v-model={ this.tracks_selected_indexes } multiple style='height: 400px; width: 200px' onDblclick={ this.removeSelected }>\r\n                    { this.errors.selected_tracks &&\r\n                        <option class='error'>{ this.errors.selected_tracks }</option>\r\n                    }\r\n                    { this.tracks.map( ( track, index ) =>\r\n                        <option value={ index } key={`${index}${track.id}`}>{ index + 1 } - { this.tracks_data[track.id].name }</option>\r\n                    ) }\r\n                    </select>\r\n                    <div>Total distance: { this.total_distance } km</div>\r\n                </td>\r\n            </tr></tbody></table>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-401030b1/TrackList.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { trackSettings } from '../data/track-settings'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'WeatherSelect',\r\n    props: {\r\n        track: Object as () => SelectedTrack,\r\n    },\r\n    computed: {\r\n        settings: function() {\r\n            return trackSettings.byId[this.track.id]\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        if ( !this.settings ) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        return (\r\n            <select v-model={ this.track.weather }>\r\n            { this.settings.weather.map( option =>\r\n                <option key={ `weather${option.id}` } value={ option.id }>{ option.label }</option>\r\n            ) }\r\n            </select>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-7d300e3c/WeatherSelect.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { trackSettings } from '../data/track-settings'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'SurfaceTypeSelect',\r\n    props: {\r\n        track: Object as () => SelectedTrack,\r\n    },\r\n    computed: {\r\n        settings: function() {\r\n            return trackSettings.byId[this.track.id]\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        if ( !this.settings ) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        return (\r\n            <select v-model={ this.track.surface_type }>\r\n            { this.settings.surface_type.map( option =>\r\n                <option key={ `surface_type${option.id}` } value={ option.id }>{ option.label }</option>\r\n            ) }\r\n            </select>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-77cc838f/SurfaceTypeSelect.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { trackSettings } from '../data/track-settings'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'SurfaceAgeSelect',\r\n    props: {\r\n        track: Object as () => SelectedTrack,\r\n    },\r\n    computed: {\r\n        settings: function() {\r\n            return trackSettings.byId[this.track.id]\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        if ( !this.settings ) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        return (\r\n            <select v-model={ this.track.surface_age }>\r\n            { this.settings.surface_age.map( option =>\r\n                <option key={ `surface_age${option.id}` } value={ option.id }>{ option.label }</option>\r\n            ) }\r\n            </select>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-0d0c0890/SurfaceAgeSelect.tsx\" });","import * as tsx from 'vue-tsx-support'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'ServiceSelect',\r\n    props: {\r\n        track: Object as () => SelectedTrack\r\n    },\r\n\r\n    render: function( h ) {\r\n        return (\r\n            <select v-model={ this.track.service_time_mins }>\r\n                <option value={ 0 }>No service</option>\r\n                <option value={ 5 }>5 min.</option>\r\n                <option value={ 10 }>10 min.</option>\r\n                <option value={ 15 }>15 min.</option>\r\n                <option value={ 20 }>20 min.</option>\r\n                <option value={ 30 }>30 min.</option>\r\n                <option value={ 60 }>60 min.</option>\r\n                <option value={ 90 }>90 min.</option>\r\n            </select>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-4558dfbd/ServiceSelect.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { trackSettings } from '../data/track-settings'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'DamageSelect',\r\n    props: {\r\n        track: Object as () => SelectedTrack,\r\n    },\r\n    computed: {\r\n        settings: function() {\r\n            return trackSettings.byId[this.track.id]\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        if ( !this.settings ) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        return (\r\n            <select v-model={ this.track.damage }>\r\n            { this.settings.damage.map( option =>\r\n                <option key={ `damage${option.id}` } value={ option.id }>{ option.label }</option>\r\n            ) }\r\n            </select>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-bd45b556/DamageSelect.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { trackSettings } from '../data/track-settings'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'TyreSelect',\r\n    props: {\r\n        track: Object as () => SelectedTrack,\r\n    },\r\n    computed: {\r\n        settings: function() {\r\n            return trackSettings.byId[this.track.id]\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        if ( !this.settings ) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        return (\r\n            <select v-model={ this.track.tyres }>\r\n            { this.settings.tyres.map( option =>\r\n                <option key={ `tyres${option.id}` } value={ option.id }>{ option.label }</option>\r\n            ) }\r\n            </select>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-3932e444/TyreSelect.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { trackSettings } from '../data/track-settings'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'ShortcutSelect',\r\n    props: {\r\n        track: Object as () => SelectedTrack,\r\n    },\r\n    computed: {\r\n        settings: function() {\r\n            return trackSettings.byId[this.track.id]\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        if ( !this.settings ) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        return (\r\n            <select v-model={ this.track.shortcut_check }>\r\n            { this.settings.shortcut_check.map( option =>\r\n                <option key={ `shortcut${option.id}` } value={ option.id }>{ option.label }</option>\r\n            ) }\r\n            </select>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-cd432ca8/ShortcutSelect.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { trackWeather } from '../data/track-weather'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'TrackWeatherSelect',\r\n    props: {\r\n        track: Object as () => SelectedTrack,\r\n    },\r\n    computed: {\r\n        options: function() {\r\n            return trackWeather.byId[this.track.id]\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        if ( !this.options ) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        return (\r\n            <select onChange={ ( e ) => {\r\n                if ( e.target ) {\r\n                    const [ time_of_day_id, weather2_id, clouds_id ] = ( e.target as HTMLSelectElement ).value.split( ',' )\r\n                    this.track.time_of_day = time_of_day_id\r\n                    this.track.weather2 = weather2_id\r\n                    this.track.clouds = clouds_id\r\n                }\r\n            } }>\r\n            { this.options.map( option =>\r\n                <option key={ `t${option.time_of_day.id}w${option.weather2.id}c${option.clouds.id}` } value={ `${option.time_of_day.id},${option.weather2.id},${option.clouds.id}` }>\r\n                    { option.time_of_day.label }; { option.weather2.label }; { option.clouds.label } { option.remark ? `(${option.remark})` : '' }\r\n                </option>\r\n            ) }\r\n            </select>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-b6ecab62/TrackWeatherSelect.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { store } from '../store'\r\nimport WeatherSelect from '../components/WeatherSelect'\r\nimport WeatherTwoSelect from '../components/WeatherTwoSelect'\r\nimport CloudsSelect from '../components/CloudSelect'\r\nimport SurfaceTypeSelect from '../components/SurfaceTypeSelect'\r\nimport SurfaceAgeSelect from '../components/SurfaceAgeSelect'\r\nimport ServiceSelect from '../components/ServiceSelect'\r\nimport DamageSelect from '../components/DamageSelect'\r\nimport TyreSelect from '../components/TyreSelect'\r\nimport TimeOfDaySelect from '../components/TimeOfDaySelect'\r\nimport ShortcutSelect from '../components/ShortcutSelect'\r\nimport TrackWeatherSelect from '../components/TrackWeatherSelect'\r\nimport { tracks } from '../data/tracks'\r\nimport { trackSettings } from '../data/track-settings'\r\nimport { cars } from '../data/cars'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'Track',\r\n    props: {\r\n        track: Object as () => SelectedTrack,\r\n        index: Number\r\n    },\r\n    data: function() {\r\n        return {\r\n            tracks_data: tracks.byId,\r\n            tracks_settings: trackSettings.byId[this.track.id],\r\n            selected_car_ids: store.cars_physics.selected_car_ids\r\n        }\r\n    },\r\n    computed: {\r\n        track_data: function() {\r\n            return this.tracks_data[this.track.id] as TrackData\r\n        },\r\n        car_id_options: function() {\r\n            return store.cars_physics.selected_car_ids.map( car_id => ( {\r\n                id: car_id,\r\n                value: cars.byId[car_id] as string\r\n            } ) ).sort( ( a, b ) => a.value.toLowerCase() > b.value.toLowerCase() ? 1 : -1 )\r\n        },\r\n        is_last_track: function() {\r\n            return this.index === store.tracks.length - 1\r\n        }\r\n    },\r\n    watch: {\r\n        'track.service_time_mins': function( val ) {\r\n            if ( val <= 0 ) {\r\n                this.track.tyre_replacement_allowed = false\r\n            }\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        return (\r\n            <table><tbody>\r\n                <tr>\r\n                    <td>Original track name</td>\r\n                    <td>{ this.track_data.name }</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Distance</td>\r\n                    <td>{ this.track_data.distance } km</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Overriden track name</td>\r\n                    <td><input v-model={ this.track.name } placeholder='None'/></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Surface type</td>\r\n                    <td>\r\n                        <SurfaceTypeSelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Surface age</td>\r\n                    <td>\r\n                        <SurfaceAgeSelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Weather</td>\r\n                    <td>\r\n                        <WeatherSelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n\r\n                {/* <tr>\r\n                    <td>Time of day</td>\r\n                    <td>\r\n                        <TimeOfDaySelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Weather 2</td>\r\n                    <td>\r\n                        <WeatherTwoSelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Clouds</td>\r\n                    <td>\r\n                        <CloudsSelect track={ this.track }/>\r\n                    </td>\r\n                </tr> */}\r\n\r\n                <tr>\r\n                    <td>Weather 2</td>\r\n                    <td>\r\n                        <TrackWeatherSelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n\r\n            { this.is_last_track === false && (\r\n                <tr>\r\n                    <td>Service area after this stage</td>\r\n                    <td>\r\n                        <ServiceSelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n            ) }\r\n\r\n            { this.is_last_track === false && this.track.service_time_mins > 0 && (\r\n                <tr>\r\n                    <td><label for='track.tyre_replacement_allowed'>Allow tyres replacement at service area</label></td>\r\n                    <td><input type='checkbox' id='track.tyre_replacement_allowed' v-model={ this.track.tyre_replacement_allowed } /></td>\r\n                </tr>\r\n            ) }\r\n\r\n\r\n                <tr>\r\n                    <td><label for='track.setup_change_allowed'>Allow setup change</label></td>\r\n                    <td><input type='checkbox' id='track.setup_change_allowed' v-model={ this.track.setup_change_allowed } /></td>\r\n                </tr>\r\n\r\n\r\n                <tr>\r\n                    <td><label for='track.tyre_change_allowed'>Allow tyres type change</label></td>\r\n                    <td><input type='checkbox' id='track.tyre_change_allowed' v-model={ this.track.tyre_change_allowed } /></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Tyres</td>\r\n                    <td>\r\n                        <TyreSelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='track.damage_change_allowed'>Allow damage change</label></td>\r\n                    <td><input type='checkbox' id='track.damage_change_allowed' v-model={ this.track.damage_change_allowed } /></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Damage</td>\r\n                    <td>\r\n                        <DamageSelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Shortcuts checking</td>\r\n                    <td>\r\n                        <ShortcutSelect track={ this.track }/>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='track.superally'>Allow superally in this stage</label></td>\r\n                    <td><input type='checkbox' id='track.superally' v-model={ this.track.superally } /></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='track.superally_hold'>Superally hold this stage</label></td>\r\n                    <td><input type='checkbox' id='track.superally_hold' v-model={ this.track.superally_hold } /></td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><label for='track.retry_allowed'>Allow to retry this stage</label></td>\r\n                    <td><input type='checkbox' id='track.retry_allowed' v-model={ this.track.retry_allowed } /></td>\r\n                </tr>\r\n            </tbody></table>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-971c421a/Track.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { formatDate, formatTime, arrayCanMoveElement } from '../util'\r\nimport { store } from '../store'\r\nimport { tracks } from '../data/tracks'\r\nimport { trackSettings } from '../data/track-settings'\r\nimport TyreSelect from '../components/TyreSelect'\r\nimport WeatherSelect from '../components/WeatherSelect'\r\nimport DamageSelect from '../components/DamageSelect'\r\nimport SurfaceTypeSelect from '../components/SurfaceTypeSelect'\r\nimport SurfaceAgeSelect from '../components/SurfaceAgeSelect'\r\nimport ServiceSelect from '../components/ServiceSelect'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'Legs',\r\n    data: function() {\r\n        return {\r\n            tracks_data: tracks.byId,\r\n            tracks_settings: trackSettings.byId,\r\n\r\n            tracks: store.tracks,\r\n            legs: store.legs,\r\n\r\n            store\r\n        }\r\n    },\r\n    props: {\r\n        errors: Object as () => {\r\n            [index: string]: string\r\n        }\r\n    },\r\n    computed: {\r\n        maxStageDivider: function() {\r\n            return this.legs.reduce( ( max, leg ) => leg.after_stage_divider > max ? leg.after_stage_divider : max, 0 )\r\n        },\r\n\r\n        canAddLeg: function() {\r\n            return (\r\n                this.tracks.length >= 2 &&\r\n                ( this.legs.length === 0 || this.maxStageDivider < this.tracks.length - 2 )\r\n            )\r\n        },\r\n\r\n        lastLeg: function() {\r\n            return this.legs[this.legs.length - 1]\r\n        }\r\n    },\r\n    methods: {\r\n        arrayCanMoveElement,\r\n\r\n        addLeg: function() {\r\n            if ( this.canAddLeg === false ) {\r\n                return\r\n            }\r\n\r\n            let date = this.store.tournament.from_date\r\n            const last_leg = this.legs[this.legs.length - 1]\r\n            if ( last_leg ) {\r\n                const last_leg_date = Number( new Date( last_leg.date ) )\r\n                const next_day = last_leg_date + 1000 * 60 * 60 * 24\r\n                date = formatDate( new Date( next_day ) )\r\n            }\r\n\r\n            this.legs.push( {\r\n                after_stage_divider: this.legs.length === 0 ? 0 : this.maxStageDivider + 1,\r\n\r\n                date,\r\n                time: '23:59'\r\n            } )\r\n        },\r\n\r\n        canMoveLegUp: function( stage_split: number ) {\r\n            return (\r\n                stage_split > 0 &&\r\n                this.legs.find( leg => leg.after_stage_divider === stage_split - 1 ) === undefined\r\n            )\r\n        },\r\n\r\n        moveLegUp: function( stage_split: number ) {\r\n            if ( this.canMoveLegUp( stage_split ) === false ) {\r\n                return\r\n            }\r\n\r\n            for ( const leg of this.legs ) {\r\n                if ( leg.after_stage_divider === stage_split ) {\r\n                    leg.after_stage_divider--\r\n                    break\r\n                }\r\n            }\r\n        },\r\n\r\n        canMoveLegDown: function( stage_split: number ) {\r\n            return (\r\n                stage_split < this.tracks.length - 2 &&\r\n                this.legs.find( leg => leg.after_stage_divider === stage_split + 1 ) === undefined\r\n            )\r\n        },\r\n\r\n        moveLegDown: function( stage_split: number ) {\r\n            if ( this.canMoveLegDown( stage_split ) === false ) {\r\n                return\r\n            }\r\n\r\n            for ( const leg of this.legs ) {\r\n                if ( leg.after_stage_divider === stage_split ) {\r\n                    leg.after_stage_divider++\r\n                    break\r\n                }\r\n            }\r\n        },\r\n\r\n        removeLeg: function( stage_split: number ) {\r\n            for ( let i = 0 ; i < this.legs.length ; i++ ) {\r\n                if ( this.legs[i].after_stage_divider === stage_split ) {\r\n                    this.legs.splice( i, 1 )\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        return (\r\n            <div>\r\n                <table>\r\n                    <tbody>\r\n                    { this.tracks.map( ( track, index ) => ( [ (\r\n                        <tr key={ index }>\r\n                            <td style='vertical-align: top; min-width: 40px;'>\r\n                                SS { index + 1 }\r\n                            </td>\r\n                            <td class='schedule-legs-inputs' style='vertical-align: top;'>\r\n                                <div>\r\n                                    <input v-model={ track.name } placeholder={ this.tracks_data[track.id].name }/>\r\n                                    <WeatherSelect track={ track }/>\r\n                                    <DamageSelect track={ track }/>\r\n                                </div>\r\n                                <div>\r\n                                    <TyreSelect track={ track }/>\r\n                                    <SurfaceTypeSelect track={ track }/>\r\n                                    <SurfaceAgeSelect track={ track }/>\r\n                                    <ServiceSelect track={ track }/>\r\n                                </div>\r\n                                <div>\r\n                                    <input id={`tcbox${index}`}  type='checkbox' v-model={ track.tyre_change_allowed }/>    <label for={`tcbox${index}`} >Tyre change</label>\r\n                                    <input id={`scbox${index}`}  type='checkbox' v-model={ track.setup_change_allowed }/>   <label for={`scbox${index}`} >Setup change</label>\r\n                                    <input id={`srbox${index}`}  type='checkbox' v-model={ track.superally }/>              <label for={`srbox${index}`} >Superally</label>\r\n                                    <input id={`srhbox${index}`} type='checkbox' v-model={ track.superally_hold }/>         <label for={`srhbox${index}`}>Superally hold</label>\r\n                                </div>\r\n                            </td>\r\n                            <td style='width: 50px;'>\r\n                                <button\r\n                                    title='Move track up'\r\n                                    style='width: 100%;'\r\n                                    disabled={ this.arrayCanMoveElement( this.tracks, index, -1 ) === false }\r\n                                    onClick={ () => store.trackMoveUp( index ) }\r\n                                >\r\n                                    ^\r\n                                </button>\r\n                                <button\r\n                                    title='Move track down'\r\n                                    style='width: 100%;'\r\n                                    disabled={ arrayCanMoveElement( this.tracks, index, +1 ) === false }\r\n                                    onClick={ () => store.trackMoveDown( index ) }\r\n                                >\r\n                                    v\r\n                                </button>\r\n                                <button title='Remove track' style='width: 100%;' onClick={ () => store.trackRemove( index ) }>X</button>\r\n                            </td>\r\n                        </tr> ),\r\n                    track.service_time_mins > 0 && (\r\n                        <tr>\r\n                            <th colspan={ 3 }>Service area ({ track.service_time_mins } min.) / <input type='checkbox' v-model={ track.tyre_replacement_allowed }/> Tyre replacement</th>\r\n                        </tr>\r\n                    ),\r\n                    track.superally_hold && (\r\n                        <tr>\r\n                            <th colspan={ 3 }>Superally</th>\r\n                        </tr>\r\n                    ),\r\n                    this.legs.map( ( leg, leg_index ) => index !== leg.after_stage_divider ? null : (\r\n                        <tr key={ `${index} ${leg}leg` }>\r\n                            <th colspan={ 3 } style='text-align: center' class='leg_revamped'>\r\n                                <button\r\n                                    title='Move leg up'\r\n                                    onClick={ () => this.moveLegUp( leg.after_stage_divider ) }\r\n                                    disabled={ this.canMoveLegUp( leg.after_stage_divider ) === false }\r\n                                >\r\n                                    ^^^\r\n                                </button>\r\n                                Leg { leg_index + 1 }\r\n                                <input type='date' v-model={ leg.date }/>\r\n                                <input type='time' v-model={ leg.time }/>\r\n                                <button title='Remove leg' onClick={ () => this.removeLeg( leg.after_stage_divider ) }>Remove</button>\r\n                                Leg { leg_index + 2 }\r\n                                <button\r\n                                    title='Move leg down'\r\n                                    onClick={ () => this.moveLegDown( leg.after_stage_divider ) }\r\n                                    disabled={ this.canMoveLegDown( leg.after_stage_divider ) === false }\r\n                                >\r\n                                    vvv\r\n                                </button>\r\n                                <div>{ this.errors[leg.after_stage_divider] }</div>\r\n                            </th>\r\n                        </tr>\r\n                    ) )\r\n                    ] ) ) }\r\n                    </tbody>\r\n                </table>\r\n\r\n                <table style='margin: 0 auto;'>\r\n                    <thead><tr>\r\n                        <td>Leg</td>\r\n                        <td>Stage</td>\r\n                        <td>Date from</td>\r\n                        <td>Date to</td>\r\n                    </tr></thead>\r\n                { this.legs.length > 0 &&\r\n                    <tbody>\r\n                    { this.legs.map( ( leg, leg_index ) => (\r\n                        <tr key={ `${leg_index} leg`}>\r\n                            <td>{ leg_index + 1 }</td>\r\n\r\n                        { leg_index === 0 ?\r\n                            <td>1 - { leg.after_stage_divider + 1 }</td>\r\n                        : leg_index === this.legs.length - 1 ?\r\n                            <td>{ this.legs[leg_index - 1].after_stage_divider + 2 } - { leg.after_stage_divider + 1 }</td>\r\n                        :   <td>{ this.legs[leg_index - 1].after_stage_divider + 2 } - { leg.after_stage_divider + 1 }</td>\r\n                        }\r\n\r\n                        { leg_index === 0 ?\r\n                            <td>{ store.tournament.from_date } { store.tournament.from_time }</td>\r\n                        :   <td>{ this.legs[leg_index - 1].date } { this.legs[leg_index - 1].time }</td>\r\n                        }\r\n\r\n                            <td>{ leg.date } { leg.time }</td>\r\n                        </tr>\r\n                    ) ) }\r\n                        <tr>\r\n                            <td>{ this.legs.length + 1 }</td>\r\n\r\n                            <td>{ this.lastLeg.after_stage_divider + 2 } - { this.store.tracks.length }</td>\r\n\r\n                            <td>{ this.lastLeg.date } { this.lastLeg.time }</td>\r\n\r\n                            <td>{ store.tournament.to_date } { store.tournament.to_time }</td>\r\n                        </tr>\r\n                    </tbody>\r\n                }\r\n                { this.legs.length === 0 &&\r\n                    <tbody style='text-align: center;'>\r\n                        <td colspan={ 4 }>No legs created</td>\r\n                    </tbody>\r\n                }\r\n                    <tfoot><tr><td colspan={ 4 } style='text-align: center;'>\r\n                        <button onClick={ this.addLeg } disabled={ this.canAddLeg === false }>Add leg</button>\r\n                    </td></tr></tfoot>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-7097f16a/ScheduleLegs.tsx\" });","import * as tsx from 'vue-tsx-support'\r\nimport { store } from '../store'\r\n\r\nexport default tsx.componentFactory.create( {\r\n    name: 'Presets',\r\n\r\n    data: function() {\r\n        return {\r\n            store,\r\n\r\n            saveNames: ( new Array( 10 ) ).fill( undefined )\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        save: function( slot: number, name: string | null ) {\r\n            if ( !name || !name.trim() ) {\r\n                return\r\n            }\r\n            this.saveNames = this.saveNames.map( ( value, index ) => index !== slot ? value : name )\r\n            localStorage.setItem( `save${slot}`, JSON.stringify( this.store ) )\r\n        },\r\n        load: function( slot: number ) {\r\n            const data: any = localStorage.getItem( `save${slot}` )\r\n            if ( !data ) {\r\n                return\r\n            }\r\n\r\n            Object.assign( this.store, JSON.parse( data ) )\r\n            this.store.tracks.forEach( track => {\r\n                this.store.trackFetchInfo( track.id )\r\n            } )\r\n        },\r\n    },\r\n\r\n    mounted: function() {\r\n        const items = localStorage.getItem( 'save_names' )\r\n        if ( items ) {\r\n            this.saveNames = JSON.parse( items )\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        saveNames: function() {\r\n            localStorage.setItem( 'save_names', JSON.stringify( this.saveNames ) )\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        output: function() {\r\n            return {\r\n                tournament: this.store.tournamentPostOutput(),\r\n\r\n                cars_physics: this.store.carsPhysicsPostOutput(),\r\n\r\n                // TODO: account for last page\r\n                tracks: this.store.tracks.map( ( track, index ) => store.trackPostOutput( index ) ),\r\n\r\n                legs: this.store.legsPostOutput()\r\n            }\r\n        }\r\n    },\r\n\r\n    render: function( h ) {\r\n        return (\r\n            <div>\r\n                <div>{ 'Save slot: ' }\r\n                { ( new Array( 10 ) ).fill( 0 ).map( ( nothing, index ) =>\r\n                    <button onClick={ () => this.save( index, prompt( 'Enter the slot save name' ) ) }>{ index + 1 }</button>\r\n                ) }\r\n                </div>\r\n                <div>{ 'Load slot: ' }\r\n                { ( this.saveNames.map( ( saveName, index ) =>\r\n                    <button onClick={ () => this.load( index ) } disabled={ Boolean( saveName ) === false }>{ index + 1 } { saveName ? `- ${saveName}` : '' }</button>\r\n                ) ) }\r\n                </div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <td>JSON Data</td>\r\n                            <td>Output data</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td style='vertical-align: top;'><pre>{ JSON.stringify( this.store, null, 4 ).trim() }</pre></td>\r\n                            <td style='vertical-align: top;'><pre>{ JSON.stringify( this.output, null, 4 ).trim() }</pre></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-14e80f5c/Presets.tsx\" });","import Vue from 'vue'\r\nimport Tournament from './containers/Tournament'\r\nimport Cars from './containers/Cars'\r\nimport TrackList from './containers/TrackList'\r\nimport Track from './containers/Track'\r\nimport ScheduleLegs from './containers/ScheduleLegs'\r\nimport Presets from './containers/Presets'\r\nimport { store } from './store'\r\nimport { tracks } from './data/tracks'\r\nimport { constants } from './data/constants'\r\nimport { trackSettings } from './data/track-settings'\r\nimport { trackWeather } from './data/track-weather'\r\nimport { cars } from './data/cars'\r\nimport { post, urlEncode, getElementByXpath, waitUntil, objectWithoutNulls } from './util'\r\nimport './app.scss'\r\n\r\nenum Page {\r\n    Tournament = 'tournament',\r\n    Cars = 'cars',\r\n    TrackList = 'track_list',\r\n    Track = 'track',\r\n    ScheduleLegs = 'schedule_legs',\r\n    Presets = 'presets'\r\n}\r\n\r\nexport default Vue.extend( {\r\n    name: 'App',\r\n    data: function() {\r\n        return {\r\n            current_page: Page.Tournament,\r\n            track_index: 0,\r\n\r\n            store,\r\n\r\n            hidden: '',\r\n\r\n            current_request_operation: '',\r\n\r\n            serverErrors: [] as Array<{ page: string, error: string}>\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        tracks_data: function() {\r\n            return tracks.byId\r\n        },\r\n\r\n        tracks_settings: function() {\r\n            return trackSettings\r\n        },\r\n\r\n        tracks_weather: function() {\r\n            return trackWeather\r\n        },\r\n\r\n        from_date: function() {\r\n            const { from_date, from_time } = this.store.tournament\r\n            return (\r\n                !from_date && !from_time ? new Date() :\r\n\r\n                // HACK: Time is set as late as possible to please\r\n                // the validation instead of omitting time from 'now'\r\n                !from_time ? new Date( `${from_date}T23:59:00+0100` ) :\r\n\r\n                new Date( `${from_date}T${from_time}+0100` )\r\n            )\r\n        },\r\n\r\n        to_date: function() {\r\n            const { to_date, to_time } = this.store.tournament\r\n            return new Date( `${to_date}T${to_time}+0100` )\r\n        },\r\n\r\n        cars_errors: function() {\r\n            const { selected_car_ids, car_physics_id, track_physics_id } = this.store.cars_physics\r\n            return {\r\n                selected_cars: selected_car_ids.length === 0 ? 'Must select atleast one car' : '',\r\n                car_physics: car_physics_id.length === 0 ? 'Must select car physics' : '',\r\n                track_physics: track_physics_id.length === 0 ? 'Must select track physics' : ''\r\n            }\r\n        },\r\n\r\n        tracks_errors: function() {\r\n            return {\r\n                selected_tracks: this.store.tracks.length === 0 ? 'Must select atleast one track' : ''\r\n            }\r\n        },\r\n\r\n        tournament_errors: function() {\r\n            const now = new Date()\r\n            const oneDayAfter = new Date( Number( this.from_date ) + 1000 * 60 * 60 * 24 )\r\n            const sevenDaysAfter = new Date( Number( this.from_date ) + 1000 * 60 * 60 * 24 * 7 )\r\n\r\n            const registration_deadline_in_hours = Number( this.store.tournament.registration_deadline )\r\n\r\n            return {\r\n                name: this.store.tournament.name.trim().length === 0 ? 'Enter the tournament name' : '',\r\n\r\n                from_datetime: (\r\n                    this.from_date < now ? 'This date cannot be set earlier than now' :\r\n                    this.from_date >= this.to_date ? `This date cannot be set later than 'Valid to' date` :\r\n                    ''\r\n                ),\r\n\r\n                to_datetime: (\r\n                    this.to_date < oneDayAfter ? `This date must be set atleast 24 hours after the tournament beginning` :\r\n                    this.to_date > sevenDaysAfter ? 'This date cannot be set to end after more than 7 days' :\r\n                    this.to_date <= this.from_date ? `This date cannot be set earlier than 'Valid from' date` :\r\n                    ''\r\n                ),\r\n\r\n                registration_deadline: (\r\n                    this.store.tournament.registration_deadline.trim().length === 0 ? '' :\r\n                    isNaN( registration_deadline_in_hours ) ? 'Must be a number' :\r\n                    registration_deadline_in_hours <= 0 ? 'Must be positive' :\r\n                    Number.isInteger( registration_deadline_in_hours ) === false ? 'Must be integer' :\r\n                    ''\r\n                )\r\n            }\r\n        },\r\n\r\n        legs_errors: function() {\r\n            return this.store.legs.sort( ( a, b ) => a.after_stage_divider > b.after_stage_divider ? 1 : -1 ).reduce( ( prev, leg, index, legs ) => {\r\n                let error = ''\r\n\r\n                const date = new Date( `${leg.date}T${leg.time}+0100` )\r\n\r\n                if ( !leg.date ) {\r\n                    error = 'Correct date must be set'\r\n                }\r\n\r\n                if ( !leg.time ) {\r\n                    error = 'Correct time must be set'\r\n                }\r\n\r\n                const previous_leg = legs[index - 1]\r\n\r\n                if ( date <= this.from_date ) {\r\n                    error = `This date must be set after the tournament start date: ${this.from_date.toLocaleString()}`\r\n                } else if ( date >= this.to_date ) {\r\n                    error = `This date must be set before the tournament end date: ${this.to_date.toLocaleString()}`\r\n                }\r\n\r\n                if ( previous_leg ) {\r\n                    const previous_leg_date = new Date( `${previous_leg.date}T${previous_leg.time}+0100` )\r\n                    if ( date <= previous_leg_date ) {\r\n                        error = 'This date must be set after the previous leg split date'\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    ...prev,\r\n                    [leg.after_stage_divider]: error\r\n                }\r\n            }, {} )\r\n        },\r\n\r\n        notifications: function() {\r\n            return [\r\n                ...Object.keys( this.tracks_settings.fetching )\r\n                    .map( key => this.tracks_settings.fetching[key] ? `Fetching settings for ${tracks.byId[key].name}` : '' ),\r\n                ...Object.keys( this.tracks_weather.fetching )\r\n                    .map( key => this.tracks_settings.fetching[key] ? `Fetching weather info for ${tracks.byId[key].name}` : '' ),\r\n            ].filter( notification => notification.length > 0 )\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        hasErrors: function( errors: any ) {\r\n            return Object.values( errors ).find( value => Boolean( value ) === true )\r\n        },\r\n\r\n        submit: async function() {\r\n            const has_legs = this.store.legs.length > 0\r\n            this.serverErrors = []\r\n\r\n            const generalErrorXPath = '/html/body/table/tbody/tr/td/table[3]/tbody/tr[1]/td[2]/span'\r\n            const trackErrorXPath = '/html/body/table/tbody/tr/td/table[3]/tbody/tr[1]/td[2]/center/span'\r\n\r\n            let res: Response\r\n\r\n            try {\r\n                const tournament_data = this.store.tournamentPostOutput()\r\n                this.current_request_operation = `Sending tournament info`\r\n                res = await post( tournament_data, { flow: '0' } )\r\n                this.checkAndAppendServerErrors( { page: 'Tournament', errorsXPath: generalErrorXPath, res } )\r\n\r\n                const cars_physics_data = this.store.carsPhysicsPostOutput()\r\n                this.current_request_operation = `Sending Cars / Physics info`\r\n                res = await post( cars_physics_data, { flow: '1' } )\r\n                this.checkAndAppendServerErrors( { page: 'Cars / Physics', errorsXPath: generalErrorXPath, res } )\r\n\r\n                for ( let i = 0 ; i < this.store.tracks.length ; i++ ) {\r\n                    const track_data = this.store.trackPostOutput( i )\r\n\r\n                    this.current_request_operation = `Sending SS ${i + 1 } info`\r\n                    res = await post( track_data, { flow: '2', curstagepos: i.toString() } )\r\n                    this.checkAndAppendServerErrors( { page: `SS ${i + 1}`, errorsXPath: trackErrorXPath, res } )\r\n                }\r\n\r\n                const leg_data = this.store.legsPostOutput()\r\n                if ( has_legs ) {\r\n                    this.current_request_operation = `Sending legs info`\r\n                    res = await post( leg_data, { flow: '3', page_selector: ( 2 + this.store.tracks.length ).toString() } )\r\n                    this.checkAndAppendServerErrors( { page: 'Legs', errorsXPath: generalErrorXPath, res } )\r\n                }\r\n\r\n                if ( this.serverErrors.length === 0 ) {\r\n                    this.current_request_operation = `Submitting tournament`\r\n\r\n                    // NOTE: apparently if you have legs - you should submit the tournament from the leg page\r\n                    // Otherwise the main tournament settings page may redirect you to leg page instead of submitting\r\n                    res = await post( has_legs ? leg_data : tournament_data, {\r\n                        flow: has_legs ? '3' : '0',\r\n                        save_tournament: true,\r\n                        save_from_leg_page: has_legs\r\n                    } )\r\n                    const html = await res.text()\r\n                    const doc = ( new DOMParser() ).parseFromString( html, 'text/html' )\r\n\r\n                    const edit_tournament_node = getElementByXpath( doc, '/html/body/table/tbody/tr/td/table[3]/tbody/tr[1]/td[2]/center[3]/a' )\r\n                    if ( edit_tournament_node ) {\r\n                        const href = edit_tournament_node.getAttribute( 'href' ) || ''\r\n                        const tournament_id_match = href.match( /torid=([^&]+)/ )\r\n                        if ( tournament_id_match ) {\r\n                            const tournament_id = tournament_id_match[1]\r\n                            window.location.replace( `index.php?act=tourmntsview&torid=${tournament_id}` )\r\n                        }\r\n                    }\r\n                }\r\n            } catch ( err ) {\r\n                this.serverErrors = [ { page: 'Error', error: err.message } ]\r\n                this.current_request_operation = ''\r\n            }\r\n        },\r\n\r\n        checkAndAppendServerErrors: async function( params: { res: Response, errorsXPath: string, page: string } ) {\r\n            const { res, errorsXPath, page } = params\r\n            const doc = ( new DOMParser() ).parseFromString( await res.text(), 'text/html' )\r\n\r\n            const errors = getElementByXpath( doc, errorsXPath )\r\n            if ( errors ) {\r\n                let error = ''\r\n                for ( const errorNode of errors.childNodes ) {\r\n                    if ( errorNode.nodeName === 'br' ) {\r\n                        if ( error ) {\r\n                            this.serverErrors.push( { page, error } )\r\n                        }\r\n                        error = ''\r\n                        continue\r\n                    }\r\n\r\n                    error += errorNode.textContent\r\n                }\r\n\r\n                if ( error ) {\r\n                    this.serverErrors.push( { page, error } )\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        'store.tracks': function( newTracks: SelectedTrack[] ) {\r\n            if ( newTracks.length < 2 ) {\r\n                store.legs.splice( 0, store.legs.length )\r\n                return\r\n            }\r\n\r\n            for ( let i = store.legs.length - 1 ; i >= 0 ; i-- ) {\r\n                const leg = store.legs[i]\r\n                if ( leg.after_stage_divider >= newTracks.length - 1 ) {\r\n                    store.legs.splice( i, 1 )\r\n                }\r\n            }\r\n        },\r\n\r\n        'store.cars_physics.car_physics_id': function( newPhysicsId: string ) {\r\n            cars.fetchCars( newPhysicsId )\r\n        },\r\n\r\n        'hidden': {\r\n            immediate: true,\r\n            handler: function( newValue: boolean ) {\r\n                const tournamentForm = document.getElementById( 'tournament' )\r\n                if ( !tournamentForm ) {\r\n                    return\r\n                }\r\n\r\n                tournamentForm.style.display = newValue ? '' : 'none'\r\n            }\r\n        }\r\n    },\r\n\r\n    mounted: async function() {\r\n        constants.fetchTournamentConstants()\r\n\r\n        this.current_request_operation = 'Fetching track information'\r\n        await tracks.fetchTracks()\r\n\r\n        const url_search_params = new URLSearchParams( window.location.search )\r\n        const tournament_id = url_search_params.get( 'torid' )\r\n\r\n        if ( tournament_id ) {\r\n            try {\r\n                const { track_ids, cars_physics: car_physics_id, has_legs } = this.store.tournamentFromHTML( document.getElementsByTagName( 'html' )[0].innerHTML )\r\n\r\n                this.current_request_operation = 'Fetching Cars / Physics'\r\n                await cars.fetchCars( car_physics_id )\r\n                this.store.cars_physics.car_physics_id = car_physics_id\r\n\r\n                this.current_request_operation = 'Fetching track information'\r\n                for ( const track_id of track_ids ) {\r\n                    await store.trackFetchInfo( track_id )\r\n                }\r\n\r\n                this.current_request_operation = 'Getting ready to fetch tournament info'\r\n                await fetch( `/index.php?act=tourmntscre4A&new_tour=0&torid=${tournament_id}` )\r\n\r\n                let res: Response\r\n\r\n                const tournament_data: Partial<TournamentPOSTOutput> = objectWithoutNulls( {\r\n                    ...this.store.tournamentPostOutput(),\r\n                    has_legs: has_legs ? 'on' : null,\r\n                    tourstages: track_ids.join( ';' ).concat( ';' )\r\n                } )\r\n                this.current_request_operation = `Fetching tournament's Cars / Physics`\r\n                res = await post( tournament_data, { page_selector: '1' } )\r\n                this.store.carsPhysicsFromHTML( await res.text() )\r\n\r\n                for ( let i = 0 ; i < track_ids.length ; i++ ) {\r\n                    const track_id = track_ids[i]\r\n\r\n                    this.current_request_operation = `Fetching SS ${i + 1}`\r\n                    res = await post( tournament_data, { page_selector: ( 2 + i ).toString() } )\r\n                    const track = this.store.trackFromHTML( track_id, trackSettings.byId[track_id], await res.text() )\r\n                    if ( track ) {\r\n                        this.store.tracks.push( track )\r\n                    }\r\n                }\r\n\r\n                if ( has_legs ) {\r\n                    this.current_request_operation = `Fetching legs info`\r\n                    res = await post( tournament_data, { page_selector: ( 2 + this.store.tracks.length ).toString() } )\r\n                    this.store.legsFromHTML( await res.text() )\r\n                }\r\n            } catch ( err ) {\r\n                this.serverErrors = [ { page: 'Error', error: err.message } ]\r\n            }\r\n        }\r\n\r\n        this.current_request_operation = ''\r\n    },\r\n\r\n    render: function( h ) {\r\n        return (\r\n            <div id='tournament_revamped'>\r\n                {/* <div>\r\n                    <input id='tournament_hidden_radio_on' type='radio' name='tournament_hidden_radio' value='on' v-model={ this.hidden }/> <label for='tournament_hidden_radio_on'>Original</label>\r\n                    <input id='tournament_hidden_radio_off' type='radio' name='tournament_hidden_radio' value='' v-model={ this.hidden }/> <label for='tournament_hidden_radio_off'>Revamped</label>\r\n                </div> */}\r\n                <table style={ this.hidden ? 'display: none;' : ''}><tbody>\r\n                    <tr>\r\n                        <td class='nav-buttons' style='width: 25%;'>\r\n                            <button onClick={ () => { this.current_page = Page.Tournament } } class={{ active: this.current_page === Page.Tournament, error: this.hasErrors( this.tournament_errors ) }}>Tournament</button>\r\n                            <button onClick={ () => { this.current_page = Page.Cars } } disabled={ !constants.fetched } class={{ active: this.current_page === Page.Cars, error: this.hasErrors( this.cars_errors ) }}>Cars / Physics</button>\r\n                            <button onClick={ () => { this.current_page = Page.TrackList } } disabled={ tracks.fetching } class={{ active: this.current_page === Page.TrackList, error: this.hasErrors( this.tracks_errors ) }} style='margin-bottom: 8px'>Tracks</button>\r\n\r\n                            { this.store.tracks.map( ( track, index ) => (\r\n                                <button key={`track${index}`} disabled={ !this.tracks_settings.byId[track.id] || !this.tracks_weather.byId[track.id] } onClick={ () => { this.current_page = Page.Track; this.track_index = index } }\r\n                                    class={{ active: this.current_page === Page.Track && this.track_index === index }}\r\n                                >\r\n                                    SS { index + 1 } - { this.tracks_data[track.id].name } { track.name ? `(${track.name})` : '' }\r\n                                </button>\r\n                            ) ) }\r\n\r\n                            <button onClick={ () => { this.current_page = Page.ScheduleLegs } } class={{ active: this.current_page === Page.ScheduleLegs, error: this.hasErrors( this.legs_errors ) }} style='margin-top: 8px'>Schedule and legs</button>\r\n                            <button onClick={ () => { this.current_page = Page.Presets } } class={{ active: this.current_page === Page.Presets }}>JSON info</button>\r\n\r\n                        { this.hasErrors( { ...this.tournament_errors, ...this.cars_errors, ...this.tracks_errors, ...this.legs_errors } ) ?\r\n                            <button disabled={ true } style='margin-top: 8px'>Can't send data due to errors</button>\r\n                            :\r\n                            <button disabled={ Boolean( this.current_request_operation ) } style='margin-top: 8px' onClick={ () => this.submit() }>Save tournament</button>\r\n                        }\r\n                        { this.serverErrors.length > 0 &&\r\n                            <div style='margin-top: 8px'>\r\n                                Failed to create tournament\r\n                            { this.serverErrors.map( ( error, index ) =>\r\n                                <div key={`serverError${index}`} class='error'>{ error.page }: { error.error }</div>\r\n                            ) }\r\n                            </div>\r\n                        }\r\n                        <div style='margin-top: 8px'>\r\n                        { this.notifications.map( ( notification, index ) =>\r\n                            <div key={`notification${index}`}>{ notification }</div>\r\n                        ) }\r\n                        </div>\r\n                        <div style='margin-top: 8px'>\r\n                            <div>ver 1</div>\r\n                            <div>\r\n                                <a href='https://github.com/suXinjke/RBRCZTourneyCreatorRevamped'>GitHub </a> |\r\n                                <a href='https://twitter.com/suxinjke'> Twitter </a> |\r\n                                <a href='http://rbr.onlineracing.cz/index.php?act=ustats&u=66612'> RBR CZ</a>\r\n                            </div>\r\n                        </div>\r\n                        </td>\r\n                        <td style='vertical-align: top;'>\r\n                        { this.current_request_operation ? <div>{ this.current_request_operation }</div> :\r\n                          this.current_page === Page.Tournament ? <Tournament errors={ this.tournament_errors }/> :\r\n                          this.current_page === Page.Cars ? <Cars errors={ this.cars_errors }/> :\r\n                          this.current_page === Page.TrackList ? <TrackList errors={ this.tracks_errors }/> :\r\n                          this.current_page === Page.Track ? <Track track={ this.store.tracks[this.track_index] } index={ this.track_index } /> :\r\n                          this.current_page === Page.ScheduleLegs ? <ScheduleLegs errors={ this.legs_errors }/> :\r\n                          this.current_page === Page.Presets ? <Presets /> :\r\n                          null\r\n                        }\r\n                        </td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n        )\r\n    }\r\n} )\r\n\n// VUE JSX HOT LOADER //\nif (module.hot) require(\"H:\\\\PROJECTS\\\\RBRCZTourneyCreatorRevamped\\\\node_modules\\\\vue-jsx-hot-loader\\\\src\\\\api.js\")({ Vue: require('vue'), ctx: eval('this'), module: module, hotId: \"_vue_jsx_hot-bacec536/App.tsx\" });","import Vue from 'vue'\r\nimport App from './App'\r\n\r\n__webpack_public_path__ = 'http://127.0.0.1:8080/rbrcz_prototype/'\r\n\r\nVue.config.productionTip = false\r\n\r\nconst tournamentForm = document.getElementById( 'tournament' )\r\n\r\nif ( tournamentForm ) {\r\n\r\n    const parent = tournamentForm.parentElement\r\n\r\n    if ( parent ) {\r\n        const appContainer = document.createElement( 'div' )\r\n        appContainer.id = 'tournament_revamped'\r\n        parent.prepend( appContainer )\r\n\r\n        new Vue( {\r\n            render: h => h( App ),\r\n        } ).$mount( '#tournament_revamped' )\r\n    }\r\n}\r\n"],"sourceRoot":""}